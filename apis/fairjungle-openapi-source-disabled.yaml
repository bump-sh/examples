---
openapi: 3.0.2
info:
  version: 0.0.1-ALPHA
  title: fairjungle
  termsOfService: https://fairjungle.com
  contact:
    name: API Support
    email: support@fairjungle.com
  description: |
    This is the documentation for:
    - the [fairjungle custom REST API](#tag/fairjungle-api) for managing all resources
    - the [SCIM API](#tag/scim-api) for users provisioning

    # Authentication

    You need an API Key associated to a user with `admin` role in order to authenticate API requests.

    <SecurityDefinitions />
servers:
- url: https://alpha-api.fairjungle.net/api
  description: Test server
- url: https://api.fairjungle.com/api
  description: Production server
security:
- API Key: []
tags:
- name: fairjungle-api
  x-displayName: Fairjungle API
  description: |
    Our custom REST API allows you to manage all your fairjungle resources.

    # Document Structure

    A JSON object is at the root of every request and response containing data. This object defines a document’s “top level”.

    ## Request document

    A request document contains the following top-level member:

    - `data`: the document’s “primary data”

    ## Response document

    A response document contains at least one of the following top-level members:

    - `data`: the document’s “primary data”
    - `error`: an error object

    The members `data` and `error` never coexist in the same document.

    A response document may contain this top-level member:

    - `meta`: a meta object that contains meta-information

    ## Primary data

    Primary `data` is either:

    - a single resource object for requests that target single resources
    - an array of resource objects, or an empty array (`[]`), for requests that target resource collections

    The resource attributes that have no value are not returned, except for booleans attributes that always have a `false` default value. It means that server nevers sends `null` values in resource data.

    # Fetching data

    Data can be fetched by sending a `GET` request to an endpoint.

    For example, the following request fetches a collection of users:

    ```
    GET /api/users
    ```

    The following request fetches a user:

    ```
    GET /api/users/35c93884-5cca-4e72-98ff-eb52f611cb21
    ```

    ## Responses

    ### 200 OK

    The server responds to a successful request to fetch an individual resource or resource collection with a `200 OK` response.

    The server responds to a successful request to fetch a resource collection with an array of resource objects or an empty array (`[]`) as the response document’s primary data.

    The server responds to a successful request to fetch an individual resource with a resource object provided as the response document’s primary data.

    ### 401 Unauthorized

    The server responds with `401 Unauthorized` when processing a request without authentication.

    ### 403 Forbidden

    The server returns `403 Forbidden` in response to an unsupported request to retrieve a resource.

    ### 404 Not Found

    The server responds with `404 Not Found` when processing a request to fetch a single resource that does not exist.


    ## Pagination

    All endpoints that return resource collections are paginated. A default pagination is applied if no pagination parameter is provided by client.

    There are two kinds of paginations:

    - Offset based pagination
    - Cursor based pagination

    The offset based pagination is supported by all endpoints, and it is the default pagination. Additionally, some endpoints may support cursor based
    pagination. Please refer to each individual endpoint documentation for more info.

    To use cursor based pagination with endpoints that support it, then you have to set the `pageKind` query parameter with `cursor` as value.

    ### Offset based pagination

    Offset based pagination query parameters are:

      - `pageKind`: `offset`
      - `limit`: maximum number of items to return (default: `10`)
      - `offset`: number of items to skip (default: `0`)

    The `meta` top-level member in the response document contains those fields:

      - `pageKind`: `offset`
      - `limit`: the query parameter value
      - `offset`: the query parameter value
      - `total`: the total number of items on the server

    ### Cursor based pagination

    Cursor based pagination query parameters are:

      - `pageKind`: `cursor`
      - `limit`: maximum number of items to return (default: `10`)
      - `after`: a cursor value that identifies the first item to retrieve
      - `before`: a cursor value that identifies the last item to retrieve

    The `after` and `before` parameters are mutually exclusive: only one of `after` or `before` may be used.

    The `meta` top-level member in the response document contains those fields:

      - `pageKind`: `cursor`
      - `limit`: the query parameter value
      - `after`: the query parameter value
      - `before`: the query parameter value
      - `nextAfter`: a cursor value that can be used to retrieve next items with `after` query parameter
      - `prevBefore`: a cursor value that can be used to retrieve previous items with `before` query parameter


    ## Sorting

    Endpoints that return resource collections accepts additional query parameters to control sorting of returned resources:

      - `order`: sorting order (default: `asc`)
      - `sortBy`: sorting field (default: `createdAt`)

    The `meta` top-level member in the response document contains those fields:

      - `order`: the query parameter value
      - `sortBy`: the query parameter value

    The allowed `order` values are `asc` and `desc`.

    The allowed `sortBy` values are endpoint specific. Please refer to each individual endpoint documentation for more info.


    # Creating, Updating and Deleting Resources

    ## Creating Resources

    A resource can be created by sending a `POST` request to a URL that represents a collection of resources. The request includes a single resource object as primary data.

    ### Responses

    #### 201 Created

    If the requested resource has been created successfully, the server returns a `201 Created` status code.

    The response also includes a document that contains the primary resource created.

    #### 401 Unauthorized

    The server responds with `401 Unauthorized` when processing a request without authentication.

    #### 403 Forbidden

    The server returns `403 Forbidden` in response to an unsupported request to create a resource.

    #### 422 Unprocessable Entity

    The server returns `422 Unprocessable Entity` when processing a `POST` request to create a resource if the resource validation failed.


    ## Updating Resources

    A resource can be:
    - partially updated by sending a `PATCH` request to the URL that represents the resource
    - entirely replaced by sending a `PUT` request to the URL that represents the resource

    The request includes a single resource object as primary data.

    The patching mecanism follows the [JSON merge patch](https://tools.ietf.org/html/rfc7386) specification:
    - If a request does not include all of the attributes for a resource, the server interprets the missing attributes as if they were included with their current values.
    - An attribute can be deleted by explicitly sending the `null` value.
    - The server does not interpret missing attributes as `null` values.

    If you use the `PUT` method, then:
    - If a request does not include all of the attributes for a resource, the server interprets the missing attributes as if they were deleted.
    - An attribute can still be deleted by explicitly sending the `null` value.


    ### Responses

    #### 200 OK

    The server returns a `200 OK` status code if an update is successful. The response document includes a representation of the updated resource as if a `GET` request was made to the request URL.

    #### 401 Unauthorized

    The server responds with `401 Unauthorized` when processing a request without authentication.

    #### 403 Forbidden

    The server returns `403 Forbidden` in response to an unsupported request to update a resource.

    #### 404 Not Found

    The server returns `404 Not Found` when processing a request to modify a resource that does not exist.

    #### 422 Unprocessable Entity

    The server returns `422 Unprocessable Entity` when processing a `PATCH` request to update a resource if the resource validation failed.


    ## Deleting Resources

    An individual resource can be deleted by making a `DELETE` request to the resource’s URL.

    ### Responses

    #### 200 OK

    The server returns a `200 OK` status code if a deletion request is successful. The response document includes a representation of the resource before deletion.

    #### 401 Unauthorized

    The server responds with `401 Unauthorized` when processing a request without authentication.

    #### 403 Forbidden

    The server returns `403 Forbidden` in response to an unsupported request to delete a resource.

    #### 404 Not Found

    The server returns a `404 Not Found` status code if a deletion request fails due to the resource not existing.


    # Errors

    ## Processing errors

    Fairjungle uses conventional HTTP response codes to indicate the success or failure of an API request. Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate an error that failed given the information provided. Codes in the `5xx` range indicate a server error.

    Most of the time, when a `4xx` or `5xx` http code is returned, the response document consists of an `error` object.

    ## Error object

    The `error` top level member provides additional information about problems encountered while performing an operation.

    This is the `error` schema:

    <SchemaDefinition schemaRef="#/components/schemas/ValidationError" />

    The `error` object always have the following fields:

      - `code`: an application-specific error code, expressed as a string value.
      - `message`: a short, human-readable summary of the problem.

    The `error` object may have the following field:

      - `invalid`: if error `code` is `validationFailed` or `invalidParam` then that field contains an array of error details with associated invalid fields or parameters

    Items in the `invalid` array have the following fields:

      - `field`: field or parameter name
      - `value`: invalid value received
      - `code`: validation code
      - `message`: validation message

    Example for a `400 Bad Request` error:

    ```
    {
      "error": {
        "code": "badRequest",
        "message": "Top-level document 'data' member is missing"
      }
    }
    ```

    Example for a `400 Bad Request` error with invalid parameter:

    ```
    {
      "error": {
        "code": "invalidParam",
        "invalid": [
          {
            "code": "paramValue",
            "field": "limit",
            "message": "limit parameter must be between 1 and 100",
            "value": 500
          }
        ],
        "message": "Invalid pagination parameter provided"
      }
    }
    ```

    Example for a `422 Unprocessable Entity` error:

    ```
    {
      "error": {
        "code": "validationFailed",
        "invalid": [
          {
            "code": "country",
            "field": "address.country",
            "message": "The 'country' field is invalid",
            "value": "PLOP"
          },
          {
            "code": "email",
            "field": "email",
            "message": "The 'email' field is invalid",
            "value": "john @mycompany.com"
          },
          {
            "code": "required",
            "field": "name",
            "message": "The 'name' field is mandatory",
            "value": ""
          }
        ],
        "message": "Resource validation failed"
      }
    }
    ```
- name: billing-operations
  x-displayName: Billing operations
  description: |
    A billing operation represents the lowest billing granularity.

    **The `transactionKind` field:**

    A `purchase` billing operation is created:
    - when fairjungle booked a trip on your behalf (a billing operation is created for each part of the trip)
    - when your subscription invoice is emitted

    A `refund` billing operation is created when a booking is canceled, or when a manual refund is issued. There are then two cases:
    - if this is done before the corresponding `invoice` is emitted, then the `invoice` balance is adjusted and no [refund](#tag/refunds) resource is created (ie. the `refundId` attribute is `null`)
    - if this is done after the corresponding `invoice` was emitted, then a money transfer is performed, a [refund](#tag/refunds) resource is created, and the `refundId` attributed is filled

    A `dispute` billing operarion is created when our billing provider detects an issue with an already paid invoice, and automatically refunds back the invoice charge to your bank account.
    A [dispute](#tag/disputes) resource is created, and the `refundId` attributed is filled. This is a special case that must be regularized with our support team.
    Note that the [dispute](#tag/disputes) does not appear on the invoice, and no [refund](#tag/refunds) resource is created.

    **The `operationType` field:**

    An operation can be:
    - a booking related operation, with either the generic `booking` value, or with one of the more specific values: `car`, `flight`, `hotel`, `rail` or `seminar`
    - a `subscription` operation
    - an `other` operation (performed by the support team)

    In case of booking operation, the `bookingSnapshot` contains the booking informations at the time of the booking, and `tripProjectId` links to the corresponding [trip project](#tag/trip-projects).

    **The `status` field:**

    This field value depends on `transactionKind` field:
    - `purchase`: this is either the status of the corresponding [invoice](#tag/invoices) resource, or `delayed` if no [invoice](#tag/invoices) was emitted yet. Possible values: `delayed`, `open`, `paid`, `uncollectible` and `void`.
    - `refund`: this is either the status of the corresponding [refund](#tag/refunds) resource if corresponding [invoice](#tag/invoices) status is `paid`, or `delayed` if refund is performed while the corresponding [invoice](#tag/invoices) status is still `open`, otherwise `succeeded` if no [invoice](#tag/invoices) was emitted yet. Possible values: `delayed`, `waiting`, `pending`, `succeeded`, `failed` and `canceled`.
    - `dispute`: this is the status of the corresponding [dispute](#tag/disputes) resource.

    # Billing operation

    This is the `billingOperation` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/BillingOperation" />
- name: billing-profiles
  x-displayName: Billing profiles
  description: |
    Each billing profile has its own payment method and billing informations.

    **NOTE:** you can't associate a payment method to a billing profile through the API.

    # Billing profile

    This is the `billingProfile` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/BillingProfile" />
- name: cost-centers
  x-displayName: Cost centers
  description: |
    Associating users to cost centers permit to tag emitted invoices with cost centers.

    # Cost center

    This is the `costCenter` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/CostCenter" />
- name: custom-fields
  x-displayName: Custom fields
  description: |
    Associate custom fields to resources.

    # Custom field

    This is the `customField` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/CustomField" />

    This is the `customFieldOption` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/CustomFieldOption" />
- name: disputes
  x-displayName: Disputes
  description: |
    A payment dispute may be emitted by our payment provider.

    # Dispute

    This is the `dispute` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/Dispute" />
- name: events
  x-displayName: Events
  description: |
    Events occur when the state of another API resource changes. The state of that resource at the time of the change
    is embedded in the event's `data` field. For example, a `costCenter.created` event will contain a `cost center`, and an `invoice.updated`
    event will contain an `invoice`.

    Events can be sent to your applications with [webhooks](#tag/webhooks).

    **NOTE:** access to events through the API is guaranteed only for 30 days.

    # Event

    This is the `event` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/Event" />
- name: invoices
  x-displayName: Invoices
  description: |
    An emitted [invoice](#tag/invoices) is the aggregate of one or several `purchase` and `refund` billing operations.

    # Invoice

    This is the `invoice` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/Invoice" />
- name: project-codes
  x-displayName: Project codes
  description: |
    Project codes can be associated to trips, and to their corresponding invoices.

    # Project code

    This is the `projectCode` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/ProjectCode" />
- name: refunds
  x-displayName: Refunds
  description: |
    A refund is an actual money transfer from fairjungle back to your bank account.

    # Refund

    This is the `refund` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/Refund" />
- name: travel-policies
  x-displayName: Travel policies
  description: |
    Travel policies enables you to control your company travel spend, volume and safety.

    # Travel policy

    This is the `travelPolicy` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/TravelPolicy" />
- name: trip-projects
  x-displayName: Trip projects
  description: |
    A Trip Project represents a travel project with bookings and participants.

    # Trip project

    This is the `tripProject` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/TripProject" />
- name: users
  x-displayName: Users
  description: |
    This is an object representing a person associated with a fairjungle account.

    # User

    This is the `user` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/User" />
- name: webhooks
  x-displayName: Webhooks
  description: |
    Fairjungle uses webhooks to notify your application when an event happens in your account.

    If you use an HTTPS URL for your webhook endpoint, fairjungle will validate that the connection to your server is secure before sending your webhook data.
    For this to work, your server must be correctly configured to support HTTPS with a valid server certificate.

    # Notifications

    The webhook notifications are `event` resources. This `event` resource contains all the relevant information about what just happened,
    including the type of event and the data associated with that event.

    Example:
    ```
    {
      "id": "628b6efe7290e71a9e52d01b",
      "type": "event",
      "createdAt": "2022-05-23T11:24:46Z",
      "data": {
        "canceled": false,
        "createdAt": "2022-05-23T11:24:20Z",
        "id": "8e3df4c5-2070-4584-b91a-ef63b6394ef5",
        "kind": "rail",
        "rateId": "4f454c91-6654-4de8-8275-d54dcda59e62___trainline-itinerary-business-adddde0e-56ad-41e1-99b7-48b50fa943e8",
        "reference": "605515552196",
        "status": "succeeded",
        "tripProjectId": "8ec49117-68ce-4ba6-9a30-e0237e23f9b6",
        "type": "booking"
      },
      "kind": "tripProject.booking.succeeded"
    }
    ```

    To acknowledge receipt of an event, your endpoint must return a `2xx` HTTP status code. All response codes outside this range
    indicate that you did not receive the event.

    If fairjungle does not receive a `2xx` HTTP status code, the notification attempt is repeated. After multiple failures to send
    the notification, fairjungle marks the event as failed and stops trying to send it to your endpoint.

    # Signature

    Fairjungle signs the webhook notifications it sends to your endpoints by including a signature in the `Fairjungle-Signature` header. This allows
    you to verify that the events were sent by fairjungle, not by a third party.

    The `Fairjungle-Signature` header contains a timestamp and a signature. The timestamp is prefixed by `t=`, and the signature is prefixed by `s=`.

    ```
    Fairjungle-Signature: t=1590410028,s=8db0caf0c10c7a34ebd4dc98e73a7b7cd703ac34666e5bc892e52cdc6dbba0ba
    ```

    Fairjungle generates signature using a hash-based message authentication code (`HMAC`) with `SHA-256`.

    To verify the signature, you must:

    1. Extract the timestamp and signature from the header

    Split the header, using the `,` character as the separator, to get a list of elements. Then split each element, using the `= `character as the separator,
    to get a prefix and value pair.

    The value for the prefix `t` corresponds to the timestamp, and `s` corresponds to the signature.

    2. Prepare the `signed_payload` string

    The `signed_payload` string is created by concatenating:

    - The timestamp
    - The character `.`
    - The actual JSON payload

    3. Determine the expected signature

    Compute an `HMAC` with the `SHA256` hash function. Use the endpoint’s signing secret as the key, and use the `signed_payload` string as the message.

    4. Compare the signatures

    Compare the signature in the header to the expected signature. For an equality match, compute the difference between the current timestamp and the
    received timestamp, then decide if the difference is within your tolerance.

    # Webhook

    This is the `webhook` resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/Webhook" />
- name: scim-api
  x-displayName: SCIM API
  description: |
    With the [SCIM API](http://www.simplecloud.info), you can configure your identity provider to provision users on fairjungle.

    This documentation describes the supported parts of the SCIM specification.

    # Error object

    This is the `Error` response schema:

    <SchemaDefinition schemaRef="#/components/schemas/ScimError" />
- name: scim-users
  x-displayName: Users
  description: |
    Users provisioning.

    # SCIM User

    This is the SCIM User resource schema:

    <SchemaDefinition schemaRef="#/components/schemas/ScimUser" />
x-tagGroups:
- name: Fairjungle API
  tags:
  - fairjungle-api
  - billing-operations
  - billing-profiles
  - cost-centers
  - custom-fields
  - disputes
  - events
  - invoices
  - project-codes
  - refunds
  - travel-policies
  - trip-projects
  - users
  - webhooks
- name: SCIM API
  tags:
  - scim-api
  - scim-users
paths:
  "/billing-operations":
    get:
      tags:
      - billing-operations
      summary: List billing operations
      description: |
        Returns a list of billing operations.

        By default, billing operations are returned sorted by creation date with oldest operations returned first.

        The `sortBy` parameter allows you to sort billing operations by `date` field too.

        You can enable cursor based pagination by setting `pageKind` parameter with `cursor` value.
      operationId: listBillingOperations
      parameters:
      - "$ref": "#/components/parameters/collectionPageKind"
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionBefore"
      - "$ref": "#/components/parameters/collectionAfter"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/billingOperationsSortBy"
      responses:
        '200':
          "$ref": "#/components/responses/listBillingOperationsResp200"
  "/billing-operations/{id}":
    get:
      tags:
      - billing-operations
      summary: Retrieve a billing operation
      description: 'Retrieves a billing operation.

        '
      operationId: getBillingOperation
      parameters:
      - name: id
        in: path
        description: The identifier of the billing operation to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getBillingOperationResp200"
  "/billing-profiles":
    get:
      tags:
      - billing-profiles
      summary: List billing profiles
      description: |
        Returns a list of billing profiles.

        The `archived` parameter permits to returns only archived or non archived billing profiles.

        By default, billing profiles are returned sorted by creation date with oldest billing profiles returned first.

        The `sortBy` parameter allows you to sort billing operations by `name` field too.

        Cursor based pagination is not available.
      operationId: listBillingProfiles
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/billingProfilesSortBy"
      - "$ref": "#/components/parameters/archived"
      responses:
        '200':
          "$ref": "#/components/responses/listBillingProfilesResp200"
    post:
      tags:
      - billing-profiles
      summary: Create a billing profile
      description: 'Creates a new billing profile.

        '
      operationId: createBillingProfile
      requestBody:
        "$ref": "#/components/requestBodies/createBillingProfileReq"
      responses:
        '201':
          "$ref": "#/components/responses/createBillingProfileResp201"
  "/billing-profiles/{id}":
    get:
      tags:
      - billing-profiles
      summary: Retrieve a billing profile
      description: 'Retrieves a billing profile.

        '
      operationId: getBillingProfile
      parameters:
      - name: id
        in: path
        description: The identifier of the billing profile to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getBillingProfileResp200"
    patch:
      tags:
      - billing-profiles
      summary: Patch a billing profile
      description: |
        Updates a billing profile with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchBillingProfile
      parameters:
      - name: id
        in: path
        description: The identifier of the billing profile to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchBillingProfileReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchBillingProfileResp200"
    put:
      tags:
      - billing-profiles
      summary: Replace a billing profile
      description: 'Updates a billing profile by replacing the resource. Missing attributes
        are removed.

        '
      operationId: replaceBillingProfile
      parameters:
      - name: id
        in: path
        description: The identifier of the billing profile to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceBillingProfileReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceBillingProfileResp200"
    delete:
      tags:
      - billing-profiles
      summary: Delete a billing profile
      description: 'Deletes a billing profile.

        '
      operationId: deleteBillingProfile
      parameters:
      - name: id
        in: path
        description: The identifier of the billing profile to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteBillingProfileResp200"
  "/cost-centers":
    get:
      tags:
      - cost-centers
      summary: List cost centers
      description: |
        Returns a list of cost centers.

        The `archived` parameter permits to returns only archived or non archived cost centers.

        By default, cost centers are returned sorted by creation date with oldest cost centers returned first.

        The `sortBy` parameter allows you to sort cost centers by `name` field too.

        Cursor based pagination is not available.
      operationId: listCostCenters
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/costCentersSortBy"
      - "$ref": "#/components/parameters/archived"
      responses:
        '200':
          "$ref": "#/components/responses/listCostCentersResp200"
    post:
      tags:
      - cost-centers
      summary: Create a cost center
      description: 'Creates a new cost center.

        '
      operationId: createCostCenter
      requestBody:
        "$ref": "#/components/requestBodies/createCostCenterReq"
      responses:
        '201':
          "$ref": "#/components/responses/createCostCenterResp201"
  "/cost-centers/{id}":
    get:
      tags:
      - cost-centers
      summary: Retrieve a cost center
      description: 'Retrieves a cost center.

        '
      operationId: getCostCenter
      parameters:
      - name: id
        in: path
        description: The identifier of the cost center to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getCostCenterResp200"
    patch:
      tags:
      - cost-centers
      summary: Patch a cost center
      description: |
        Updates a cost center with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchCostCenter
      parameters:
      - name: id
        in: path
        description: The identifier of the cost center to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchCostCenterReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchCostCenterResp200"
    put:
      tags:
      - cost-centers
      summary: Replace a cost center
      description: 'Updates a cost center by replacing the resource. Missing attributes
        are removed.

        '
      operationId: replaceCostCenter
      parameters:
      - name: id
        in: path
        description: The identifier of the cost center to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceCostCenterReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceCostCenterResp200"
    delete:
      tags:
      - cost-centers
      summary: Delete a cost center
      description: 'Deletes a cost center.

        '
      operationId: deleteCostCenter
      parameters:
      - name: id
        in: path
        description: The identifier of the cost center to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteCostCenterResp200"
  "/custom-fields":
    get:
      tags:
      - custom-fields
      summary: List custom fields
      description: |
        Returns a list of custom fields.

        Custom fields are returned sorted by creation date, and by default oldest custom fields are returned first.

        Cursor based pagination is not available.
      operationId: listCustomFields
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listCustomFieldsResp200"
    post:
      tags:
      - custom-fields
      summary: Create a custom field
      description: 'Creates a new custom field.

        '
      operationId: createCustomField
      requestBody:
        "$ref": "#/components/requestBodies/createCustomFieldReq"
      responses:
        '201':
          "$ref": "#/components/responses/createCustomFieldResp201"
  "/custom-fields/{id}":
    get:
      tags:
      - custom-fields
      summary: Retrieve a custom field
      description: 'Retrieves a custom field.

        '
      operationId: getCustomField
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getCustomFieldResp200"
    patch:
      tags:
      - custom-fields
      summary: Patch a custom field
      description: |
        Updates a custom field with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchCustomField
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchCustomFieldReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchCustomFieldResp200"
    put:
      tags:
      - custom-fields
      summary: Replace a custom field
      description: 'Updates a custom field by replacing the resource. Missing attributes
        are removed.

        '
      operationId: replaceCustomField
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceCustomFieldReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceCustomFieldResp200"
    delete:
      tags:
      - custom-fields
      summary: Delete a custom field
      description: 'Deletes a custom field.

        '
      operationId: deleteCustomField
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteCustomFieldResp200"
  "/custom-fields/{id}/options":
    get:
      tags:
      - custom-fields
      summary: List custom field options
      description: |
        Returns a list of custom field options.

        Custom field options are returned sorted by creation date, and by default oldest custom field options are returned first.

        Cursor based pagination is not available.
      operationId: listCustomFieldOptions
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field.
        required: true
        schema:
          type: string
          format: uuid
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listCustomFieldOptionsResp200"
    post:
      tags:
      - custom-fields
      summary: Create a custom field option
      description: 'Creates a new custom field option.

        '
      operationId: createCustomFieldOption
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/createCustomFieldOptionReq"
      responses:
        '201':
          "$ref": "#/components/responses/createCustomFieldOptionResp201"
  "/custom-fields/{id}/options/{optionId}":
    get:
      tags:
      - custom-fields
      summary: Retrieve a custom field option
      description: 'Retrieves a custom field option.

        '
      operationId: getCustomFieldOption
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field.
        required: true
        schema:
          type: string
          format: uuid
      - name: optionId
        in: path
        description: The identifier of the custom field option to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getCustomFieldOptionResp200"
    patch:
      tags:
      - custom-fields
      summary: Patch a custom field option
      description: |
        Updates a custom field option with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchCustomFieldOption
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field.
        required: true
        schema:
          type: string
          format: uuid
      - name: optionId
        in: path
        description: The identifier of the custom field option to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchCustomFieldOptionReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchCustomFieldOptionResp200"
    put:
      tags:
      - custom-fields
      summary: Replace a custom field option
      description: 'Updates a custom field option by replacing the resource. Missing
        attributes are removed.

        '
      operationId: replaceCustomFieldOption
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field.
        required: true
        schema:
          type: string
          format: uuid
      - name: optionId
        in: path
        description: The identifier of the custom field option to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceCustomFieldOptionReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceCustomFieldOptionResp200"
    delete:
      tags:
      - custom-fields
      summary: Delete a custom field option
      description: 'Deletes a custom field option.

        '
      operationId: deleteCustomFieldOption
      parameters:
      - name: id
        in: path
        description: The identifier of the custom field.
        required: true
        schema:
          type: string
          format: uuid
      - name: optionId
        in: path
        description: The identifier of the custom field option to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteCustomFieldOptionResp200"
  "/disputes":
    get:
      tags:
      - disputes
      summary: List disputes
      description: |
        Returns a list of disputes.

        Disputes are returned sorted by creation date, and by default oldest disputes are returned first.

        Cursor based pagination is not available.
      operationId: listDisputes
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listDisputesResp200"
  "/disputes/{id}":
    get:
      tags:
      - disputes
      summary: Retrieve a dispute
      description: 'Retrieves a dispute.

        '
      operationId: getDispute
      parameters:
      - name: id
        in: path
        description: The identifier of the dispute to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getDisputeResp200"
  "/events":
    get:
      tags:
      - events
      summary: List events
      description: |
        Returns a list of events.

        Events are returned sorted by creation date, and by default oldest operations are returned first.

        Cursor based pagination is not available.
      operationId: listEvents
      parameters:
      - "$ref": "#/components/parameters/collectionPageKind"
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionBefore"
      - "$ref": "#/components/parameters/collectionAfter"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listEventsResp200"
  "/events/{id}":
    get:
      tags:
      - events
      summary: Retrieve an event
      description: 'Retrieves an event.

        '
      operationId: getEvent
      parameters:
      - name: id
        in: path
        description: The identifier of the event to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getEventResp200"
  "/invoices":
    get:
      tags:
      - invoices
      summary: List invoices
      description: |
        Returns a list of invoices.

        Invoices are returned sorted by creation date, and by default oldest invoices are returned first.

        Cursor based pagination is not available.
      operationId: listInvoices
      parameters:
      - "$ref": "#/components/parameters/collectionPageKind"
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionBefore"
      - "$ref": "#/components/parameters/collectionAfter"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listInvoicesResp200"
  "/invoices/{id}":
    get:
      tags:
      - invoices
      summary: Retrieve an invoice
      description: 'Retrieves an invoice.

        '
      operationId: getInvoice
      parameters:
      - name: id
        in: path
        description: The identifier of the invoice to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getInvoiceResp200"
  "/invoices/{id}/billing-operations":
    get:
      tags:
      - invoices
      summary: List invoice billing operations
      description: |
        Returns a list of billing operations corresponding to invoice.

        By default, billing operations are returned sorted by creation date with oldest operations returned first.

        The `sortBy` parameter allows you to sort billing operations by `date` field too.

        You can enable cursor based pagination by setting `pageKind` parameter with `cursor` value.
      operationId: listInvoiceBillingOperations
      parameters:
      - name: id
        in: path
        description: The identifier of the invoice.
        required: true
        schema:
          type: string
          format: uuid
      - "$ref": "#/components/parameters/collectionPageKind"
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionBefore"
      - "$ref": "#/components/parameters/collectionAfter"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/billingOperationsSortBy"
      responses:
        '200':
          "$ref": "#/components/responses/listInvoiceBillingOperationsResp200"
  "/project-codes":
    get:
      tags:
      - project-codes
      summary: List project codes
      description: |
        Returns a list of project codes.

        The `archived` parameter permits to returns only archived or non archived project codes.

        By default, project codes are returned sorted by creation date with oldest project codes returned first.

        The `sortBy` parameter allows you to sort project codes by `code` field too.

        Cursor based pagination is not available.
      operationId: listProjectCodes
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/projectCodesSortBy"
      - "$ref": "#/components/parameters/archived"
      responses:
        '200':
          "$ref": "#/components/responses/listProjectCodesResp200"
    post:
      tags:
      - project-codes
      summary: Create a project code
      description: 'Creates a new project code.

        '
      operationId: createProjectCode
      requestBody:
        "$ref": "#/components/requestBodies/createProjectCodeReq"
      responses:
        '201':
          "$ref": "#/components/responses/createProjectCodeResp201"
  "/project-codes/{id}":
    get:
      tags:
      - project-codes
      summary: Retrieve a project code
      description: 'Retrieves a project code.

        '
      operationId: getProjectCode
      parameters:
      - name: id
        in: path
        description: The identifier of the project code to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getProjectCodeResp200"
    patch:
      tags:
      - project-codes
      summary: Patch a project code
      description: |
        Updates a project code with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchProjectCode
      parameters:
      - name: id
        in: path
        description: The identifier of the project code to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchProjectCodeReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchProjectCodeResp200"
    put:
      tags:
      - project-codes
      summary: Replace a project code
      description: 'Updates a project code by replacing the resource. Missing attributes
        are removed.

        '
      operationId: replaceProjectCode
      parameters:
      - name: id
        in: path
        description: The identifier of the project code to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceProjectCodeReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceProjectCodeResp200"
    delete:
      tags:
      - project-codes
      summary: Delete a project code
      description: 'Deletes a project code.

        '
      operationId: deleteProjectCode
      parameters:
      - name: id
        in: path
        description: The identifier of the project code to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteProjectCodeResp200"
  "/refunds":
    get:
      tags:
      - refunds
      summary: List refunds
      description: |
        Returns a list of refunds.

        Refunds are returned sorted by creation date, and by default oldest refunds are returned first.

        Cursor based pagination is not available.
      operationId: listRefunds
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listRefundsResp200"
  "/refunds/{id}":
    get:
      tags:
      - refunds
      summary: Retrieve a refund
      description: 'Retrieves a refund.

        '
      operationId: getRefund
      parameters:
      - name: id
        in: path
        description: The identifier of the refund to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getRefundResp200"
  "/travel-policies":
    get:
      tags:
      - travel-policies
      summary: List travel policies
      description: |
        Returns a list of travel policies.

        Travel policies are returned sorted by creation date, and by default oldest travel policies are returned first.

        The `sortBy` parameter allows you to sort travel policies by `name` field too.

        Cursor based pagination is not available.
      operationId: listTravelPolicies
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/travelPoliciesSortBy"
      responses:
        '200':
          "$ref": "#/components/responses/listTravelPoliciesResp200"
    post:
      tags:
      - travel-policies
      summary: Create a travel policy
      description: 'Creates a new travel policy.

        '
      operationId: createTravelPolicy
      requestBody:
        "$ref": "#/components/requestBodies/createTravelPolicyReq"
      responses:
        '201':
          "$ref": "#/components/responses/createTravelPolicyResp201"
  "/travel-policies/{id}":
    get:
      tags:
      - travel-policies
      summary: Retrieve a travel policy
      description: 'Retrieves a travel policy.

        '
      operationId: getTravelPolicy
      parameters:
      - name: id
        in: path
        description: The identifier of the travel policy to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getTravelPolicyResp200"
    patch:
      tags:
      - travel-policies
      summary: Patch a travel policy
      description: |
        Updates a travel policy with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchTravelPolicy
      parameters:
      - name: id
        in: path
        description: The identifier of the travel policy to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchTravelPolicyReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchTravelPolicyResp200"
    put:
      tags:
      - travel-policies
      summary: Replace a travel policy
      description: 'Updates a travel policy by replacing the resource. Missing attributes
        are removed.

        '
      operationId: replaceTravelPolicy
      parameters:
      - name: id
        in: path
        description: The identifier of the travel policy to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceTravelPolicyReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceTravelPolicyResp200"
    delete:
      tags:
      - travel-policies
      summary: Delete a travel policy
      description: 'Deletes a travel policy.

        '
      operationId: deleteTravelPolicy
      parameters:
      - name: id
        in: path
        description: The identifier of the travel policy to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteTravelPolicyResp200"
  "/trip-projects":
    get:
      tags:
      - trip-projects
      summary: List trip projects
      description: |
        Returns a list of trip projects.

        Trip projects are returned sorted by creation date, and by default oldest trip projects are returned first.

        Cursor based pagination is not available.
      operationId: listTripProjects
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listTripProjectsResp200"
  "/trip-projects/{id}":
    get:
      tags:
      - trip-projects
      summary: Retrieve a trip project
      description: 'Retrieves a trip project.

        '
      operationId: getTripProject
      parameters:
      - name: id
        in: path
        description: The identifier of the trip project to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getTripProjectResp200"
  "/trip-projects/{id}/billing-operations":
    get:
      tags:
      - trip-projects
      summary: List trip project billing operations
      description: |
        Returns a list of billing operations corresponding to trip project.

        By default, billing operations are returned sorted by creation date with oldest operations returned first.

        The `sortBy` parameter allows you to sort billing operations by `date` field too.

        You can enable cursor based pagination by setting `pageKind` parameter with `cursor` value.
      operationId: listTripProjectBillingOperations
      parameters:
      - name: id
        in: path
        description: The identifier of the trip project.
        required: true
        schema:
          type: string
          format: uuid
      - "$ref": "#/components/parameters/collectionPageKind"
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionBefore"
      - "$ref": "#/components/parameters/collectionAfter"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/billingOperationsSortBy"
      responses:
        '200':
          "$ref": "#/components/responses/listTripProjectBillingOperationsResp200"
  "/trip-projects/{id}/travelers":
    get:
      tags:
      - trip-projects
      summary: List trip project travelers
      description: 'Returns a list of users.

        '
      operationId: listTripProjectTravelers
      parameters:
      - name: id
        in: path
        description: The identifier of the trip project.
        required: true
        schema:
          type: string
          format: uuid
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listTripProjectTravelersResp200"
  "/users":
    get:
      tags:
      - users
      summary: List users
      description: |
        Returns a list of users.

        The `archived` parameter permits to returns only archived or non archived users

        The `emails` parameter permits to returns only users that match those emails.

        The `sortBy` parameter allows you to sort users by `email` field too.

        By default, users are returned sorted by creation date with oldest users returned first.

        Cursor based pagination is not available.
      operationId: listUsers
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      - "$ref": "#/components/parameters/usersSortBy"
      - "$ref": "#/components/parameters/archived"
      - "$ref": "#/components/parameters/emails"
      responses:
        '200':
          "$ref": "#/components/responses/listUsersResp200"
    post:
      tags:
      - users
      summary: Create a user
      description: 'Creates a new user.

        '
      operationId: createUser
      requestBody:
        "$ref": "#/components/requestBodies/createUserReq"
      responses:
        '201':
          "$ref": "#/components/responses/createUserResp201"
  "/users/{id}":
    get:
      tags:
      - users
      summary: Retrieve a user
      description: 'Retrieves a user.

        '
      operationId: getUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getUserResp200"
    patch:
      tags:
      - users
      summary: Patch a user
      description: |
        Updates a user with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchUserReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchUserResp200"
    put:
      tags:
      - users
      summary: Replace a user
      description: 'Updates a user by replacing the resource. Missing attributes are
        removed.

        '
      operationId: replaceUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceUserReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceUserResp200"
    delete:
      tags:
      - users
      summary: Delete a user
      description: 'Deletes a user.

        '
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteUserResp200"
  "/webhooks":
    get:
      tags:
      - webhooks
      summary: List webhooks
      description: |
        Returns a list of webhooks.

        Webooks are returned sorted by creation date, and by default oldest webooks are returned first.

        Cursor based pagination is not available.
      operationId: listWebhooks
      parameters:
      - "$ref": "#/components/parameters/collectionLimit"
      - "$ref": "#/components/parameters/collectionOffset"
      - "$ref": "#/components/parameters/collectionOrder"
      responses:
        '200':
          "$ref": "#/components/responses/listWebhooksResp200"
    post:
      tags:
      - webhooks
      summary: Create a webhook
      description: 'Creates a new webhook.

        '
      operationId: createWebhook
      requestBody:
        "$ref": "#/components/requestBodies/createWebhookReq"
      responses:
        '201':
          "$ref": "#/components/responses/createWebhookResp201"
  "/webhooks/{id}":
    get:
      tags:
      - webhooks
      summary: Retrieve a webhook
      description: 'Retrieves a webhook.

        '
      operationId: getWebhook
      parameters:
      - name: id
        in: path
        description: The identifier of the webhook to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/getWebhookResp200"
    patch:
      tags:
      - webhooks
      summary: Patch a webhook
      description: |
        Updates a webhook with merge patching:
        - missing attributes are left unchanged
        - set `null` value to remove an attribute.
      operationId: patchWebhook
      parameters:
      - name: id
        in: path
        description: The identifier of the webhook to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/patchWebhookReq"
      responses:
        '200':
          "$ref": "#/components/responses/patchWebhookResp200"
    put:
      tags:
      - webhooks
      summary: Replace a webhook
      description: 'Updates a webhook by replacing the resource. Missing attributes
        are removed.

        '
      operationId: replaceWebhook
      parameters:
      - name: id
        in: path
        description: The identifier of the webhook to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/replaceWebhookReq"
      responses:
        '200':
          "$ref": "#/components/responses/replaceWebhookResp200"
    delete:
      tags:
      - webhooks
      summary: Delete a webhook
      description: 'Deletes a webhook.

        '
      operationId: deleteWebhook
      parameters:
      - name: id
        in: path
        description: The identifier of the webhook to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/deleteWebhookResp200"
  "/scim/v2/Users":
    get:
      tags:
      - scim-users
      summary: List users
      description: |
        Query users, as specified in [RFC 7644 - 3.4.2. Query Resources](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2).

        The `sortBy`, `sortOrder`, `attributes` and `excludedAttributes` query parameters are not supported.
      operationId: scimListUsers
      parameters:
      - "$ref": "#/components/parameters/scimStartIndex"
      - "$ref": "#/components/parameters/scimCount"
      - "$ref": "#/components/parameters/scimFilter"
      responses:
        '200':
          "$ref": "#/components/responses/scimListUsersResp200"
    post:
      tags:
      - scim-users
      summary: Create a user
      description: 'Creates a new user, as specified in [RFC 7644 - 3.3. Creating
        Resources](https://datatracker.ietf.org/doc/html/rfc7644#section-3.3).

        '
      operationId: scimCreateUser
      requestBody:
        "$ref": "#/components/requestBodies/scimCreateUserReq"
      responses:
        '201':
          "$ref": "#/components/responses/scimCreateUserResp201"
  "/scim/v2/Users/{id}":
    get:
      tags:
      - scim-users
      summary: Retrieve a user
      description: 'Retrieves a user as specified in [RFC 7644 - 3.4.1. Retrieving
        a Known Resource](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.1).

        '
      operationId: scimGetUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to retrieve.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          "$ref": "#/components/responses/scimGetUserResp200"
    patch:
      tags:
      - scim-users
      summary: Patch a user
      description: |
        Patch an existing user, as specified in [RFC 7644 - 3.5.2. Modifying with PATCH](https://datatracker.ietf.org/doc/html/rfc7644#section-3.5.2)

        Missing attributes are left unchanged. Set `null` value to remove an attribute.

        Only a limited subset of `path` expressions are supported:

        * For `add` operation:
          - `emails[type eq \"work\"].value`
          - `phoneNumbers[type eq \"work\"].value`
          - `urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:manager`

        * For `remove` and `replace` operation:
          - `active`
          - `emails`
          - `emails[type eq \"work\"].value`
          - `urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:manager`
          - `externalId`
          - `name`
          - `name.familyName`
          - `name.givenName`
          - `phoneNumbers`
          - `phoneNumbers[type eq \"work\"].value`
          - `userName`
      operationId: scimPatchUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/scimPatchUserReq"
      responses:
        '200':
          "$ref": "#/components/responses/scimPatchUserResp200"
    put:
      tags:
      - scim-users
      summary: Replace a user
      description: |
        Updates a user by replacing the resource, as specified in [RFC 7644 - 3.5.1. Replacing with PUT](https://datatracker.ietf.org/doc/html/rfc7644#section-3.5.1).

        Attributes not provided in request are removed.
      operationId: scimReplaceUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to update.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        "$ref": "#/components/requestBodies/scimReplaceUserReq"
      responses:
        '200':
          "$ref": "#/components/responses/scimReplaceUserResp200"
    delete:
      tags:
      - scim-users
      summary: Delete a user
      description: 'Deletes a user, as specified in [RFC 7644 - 3.6. Deleting Resources](https://datatracker.ietf.org/doc/html/rfc7644#section-3.6).

        '
      operationId: scimDeleteUser
      parameters:
      - name: id
        in: path
        description: The identifier of the user to delete.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '204':
          "$ref": "#/components/responses/scimDeleteUserResp204"
components:
  securitySchemes:
    API Key:
      description: |
        The fairjungle API uses API keys to authenticate requests.

        Authentication to the API is performed via HTTP `Authorization` header. Example:

        ```
          Authorization: Bearer BdA5ijnMx8m7dqX0Fnl7NmB18etmVhFI
        ```

        Your API keys carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.

        All API requests must be made over HTTPS.
      type: http
      scheme: Bearer
      bearerFormat: API Key
  parameters:
    archived:
      name: archived
      in: query
      description: If `true` then only archived resources are returned. If `false`
        then only non-archived resources are returned. If not provided then all resources
        are returned.
      schema:
        type: string
        example: 'false'
    billingOperationsSortBy:
      name: sortBy
      in: query
      description: Sorting field.
      schema:
        allOf:
        - "$ref": "#/components/schemas/BillingOperationsSortBy"
    billingProfilesSortBy:
      name: sortBy
      in: query
      description: Sorting field.
      schema:
        allOf:
        - "$ref": "#/components/schemas/BillingProfilesSortBy"
    collectionPageKind:
      name: pageKind
      in: query
      description: Pagination kind.
      schema:
        allOf:
        - "$ref": "#/components/schemas/CollectionPageKind"
    collectionLimit:
      name: limit
      in: query
      description: Maximum number of items to return.
      schema:
        type: integer
        format: int32
        default: 10
        minimum: 1
        maximum: 100
    collectionOffset:
      name: offset
      in: query
      description: Number of items to skip. Can be used only for offset based pagination.
      schema:
        type: integer
        format: int32
        default: 0
    collectionBefore:
      name: before
      in: query
      description: Cursor value that identifies the last item to retrieve. Can be
        used only for cursor based pagination.
      schema:
        type: string
        example: ZG9jX2lkOjVkOTc2OTYxYTI0YjBjMTcyNmY2NWJkMg==
    collectionAfter:
      name: after
      in: query
      description: Cursor value that identifies the first item to retrieve. Can be
        used only for cursor based pagination.
      schema:
        type: string
        example: ZG9jX2lkOjVkYWVmYThhMTg1YjNlNmNiM2Q3OTY3OA==
    collectionOrder:
      name: order
      in: query
      description: Sort order.
      schema:
        allOf:
        - "$ref": "#/components/schemas/CollectionOrder"
    costCentersSortBy:
      name: sortBy
      in: query
      description: Sorting field.
      schema:
        allOf:
        - "$ref": "#/components/schemas/CostCentersSortBy"
    emails:
      name: emails
      in: query
      description: A comma separated list of emails. Permits to filter results to
        return only resources that match those emails.
      schema:
        type: string
        example: jean@mycorp.fr,juan@mycorp.es
    include:
      name: include
      in: query
      description: A comma-separated list of field paths. A field path is a dot-separated
        list of field names.
      schema:
        type: string
        example: costCenter,billingProfile
    projectCodesSortBy:
      name: sortBy
      in: query
      description: Sorting field.
      schema:
        allOf:
        - "$ref": "#/components/schemas/ProjectCodesSortBy"
    scimCount:
      name: count
      in: query
      description: Desired maximum number of query results per page.
      schema:
        type: integer
        format: int32
        default: 10
        minimum: 0
        maximum: 100
    scimFilter:
      name: filter
      in: query
      description: |
        A filter expression to request a subset of resources ([RFC 7644 - 3.4.2.2. Filtering](https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2.2))

        Only those `filter` expressions are supported:
        - `filter=userName eq "marcel@bellivo.com"`
        - `filter=emails eq "marcel@beliveau.com"`
        - `filter=externalId eq "10u1dhhb2fkIGP7RL1d8"`
        - `filter=id eq "5fc0c238-1112-11e8-8e45-830c87bdbd75"`
      schema:
        type: string
    scimStartIndex:
      name: startIndex
      in: query
      description: The 1-based index of the first query result.
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
    travelPoliciesSortBy:
      name: sortBy
      in: query
      description: Sorting field.
      schema:
        allOf:
        - "$ref": "#/components/schemas/TravelPoliciesSortBy"
    usersSortBy:
      name: sortBy
      in: query
      description: Sorting field.
      schema:
        allOf:
        - "$ref": "#/components/schemas/UsersSortBy"
  requestBodies:
    createBillingProfileReq:
      description: Billing profile resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/BillingProfileReplace"
          examples:
            createBillingProfileReqExample:
              "$ref": "#/components/examples/createBillingProfileReqExample"
    patchBillingProfileReq:
      description: Billing profile resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/BillingProfilePatch"
          examples:
            patchBillingProfileReqExample:
              "$ref": "#/components/examples/patchBillingProfileReqExample"
    replaceBillingProfileReq:
      description: Billing profile resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/BillingProfileReplace"
          examples:
            replaceBillingProfileReqExample:
              "$ref": "#/components/examples/replaceBillingProfileReqExample"
    createCostCenterReq:
      description: Cost center resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CostCenterReplace"
          examples:
            createCostCenterReqExample:
              "$ref": "#/components/examples/createCostCenterReqExample"
    patchCostCenterReq:
      description: Cost center resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CostCenterPatch"
          examples:
            patchCostCenterReqExample:
              "$ref": "#/components/examples/patchCostCenterReqExample"
    replaceCostCenterReq:
      description: Cost center resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CostCenterReplace"
          examples:
            replaceCostCenterReqExample:
              "$ref": "#/components/examples/replaceCostCenterReqExample"
    createCustomFieldReq:
      description: Custom field resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CustomFieldReplace"
          examples:
            createCustomFieldReqExample:
              "$ref": "#/components/examples/createCustomFieldReqExample"
    patchCustomFieldReq:
      description: Custom field resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CustomFieldPatch"
          examples:
            patchCustomFieldReqExample:
              "$ref": "#/components/examples/patchCustomFieldReqExample"
    replaceCustomFieldReq:
      description: Custom field resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CustomFieldReplace"
          examples:
            replaceCustomFieldReqExample:
              "$ref": "#/components/examples/replaceCustomFieldReqExample"
    createCustomFieldOptionReq:
      description: Custom field option resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CustomFieldOptionReplace"
          examples:
            createCustomFieldOptionReqExample:
              "$ref": "#/components/examples/createCustomFieldOptionReqExample"
    patchCustomFieldOptionReq:
      description: Custom field option resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CustomFieldOptionPatch"
          examples:
            patchCustomFieldOptionReqExample:
              "$ref": "#/components/examples/patchCustomFieldOptionReqExample"
    replaceCustomFieldOptionReq:
      description: Custom field option resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/CustomFieldOptionReplace"
          examples:
            replaceCustomFieldOptionReqExample:
              "$ref": "#/components/examples/replaceCustomFieldOptionReqExample"
    createProjectCodeReq:
      description: Project code resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/ProjectCodeReplace"
          examples:
            createProjectCodeReqExample:
              "$ref": "#/components/examples/createProjectCodeReqExample"
    patchProjectCodeReq:
      description: Project code resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/ProjectCodePatch"
          examples:
            patchProjectCodeReqExample:
              "$ref": "#/components/examples/patchProjectCodeReqExample"
    replaceProjectCodeReq:
      description: Project code resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/ProjectCodeReplace"
          examples:
            replaceProjectCodeReqExample:
              "$ref": "#/components/examples/replaceProjectCodeReqExample"
    createTravelPolicyReq:
      description: Travel policy resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/TravelPolicyReplace"
          examples:
            createTravelPolicyReqExample:
              "$ref": "#/components/examples/createTravelPolicyReqExample"
    patchTravelPolicyReq:
      description: Travel policy resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/TravelPolicyPatch"
          examples:
            patchTravelPolicyReqExample:
              "$ref": "#/components/examples/patchTravelPolicyReqExample"
    replaceTravelPolicyReq:
      description: Travel policy resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/TravelPolicyReplace"
          examples:
            replaceTravelPolicyReqExample:
              "$ref": "#/components/examples/replaceTravelPolicyReqExample"
    createUserReq:
      description: User resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/UserPatch"
          examples:
            createUserReqExample:
              "$ref": "#/components/examples/createUserReqExample"
    patchUserReq:
      description: User resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/UserPatch"
          examples:
            patchUserReqExample:
              "$ref": "#/components/examples/patchUserReqExample"
    replaceUserReq:
      description: User resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/UserReplace"
          examples:
            replaceUserReqExample:
              "$ref": "#/components/examples/replaceUserReqExample"
    createWebhookReq:
      description: Webhook resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/WebhookReplace"
          examples:
            createWebhookReqExample:
              "$ref": "#/components/examples/createWebhookReqExample"
    patchWebhookReq:
      description: Webhook resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/WebhookPatch"
          examples:
            patchWebhookReqExample:
              "$ref": "#/components/examples/patchWebhookReqExample"
    replaceWebhookReq:
      description: Webhook resource
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                "$ref": "#/components/schemas/WebhookReplace"
          examples:
            replaceWebhookReqExample:
              "$ref": "#/components/examples/replaceWebhookReqExample"
    scimCreateUserReq:
      description: User resource
      required: true
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ScimUser"
          examples:
            scimCreateUserReqExample:
              "$ref": "#/components/examples/scimCreateUserReqExample"
    scimPatchUserReq:
      description: User resource
      required: true
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ScimPatchOp"
          examples:
            scimPatchUserReqExample:
              "$ref": "#/components/examples/scimPatchUserReqExample"
    scimReplaceUserReq:
      description: User resource
      required: true
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ScimUser"
          examples:
            scimReplaceUserReqExample:
              "$ref": "#/components/examples/scimReplaceUserReqExample"
  responses:
    listBillingOperationsResp200:
      description: Billing operations retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved billing operations.
                type: array
                items:
                  "$ref": "#/components/schemas/BillingOperation"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionBothPaginationsMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/BillingOperationsSortByMeta"
          examples:
            listBillingOperationsResp200Example:
              "$ref": "#/components/examples/listBillingOperationsResp200Example"
    getBillingOperationResp200:
      description: Billing operation retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved billing operation.
                allOf:
                - "$ref": "#/components/schemas/BillingOperation"
          examples:
            getBillingOperationResp200Example:
              "$ref": "#/components/examples/getBillingOperationResp200Example"
    listBillingProfilesResp200:
      description: Billing profiles retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved billing profiles.
                type: array
                items:
                  "$ref": "#/components/schemas/BillingProfile"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/BillingProfilesSortByMeta"
          examples:
            listBillingProfilesResp200Example:
              "$ref": "#/components/examples/listBillingProfilesResp200Example"
    createBillingProfileResp201:
      description: Billing profile created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created billing profile.
                allOf:
                - "$ref": "#/components/schemas/BillingProfile"
          examples:
            createBillingProfileResp201Example:
              "$ref": "#/components/examples/createBillingProfileResp201Example"
    getBillingProfileResp200:
      description: Billing profile retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved billing profile.
                allOf:
                - "$ref": "#/components/schemas/BillingProfile"
          examples:
            getBillingProfileResp200Example:
              "$ref": "#/components/examples/getBillingProfileResp200Example"
    patchBillingProfileResp200:
      description: Billing profile updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated billing profile.
                allOf:
                - "$ref": "#/components/schemas/BillingProfile"
          examples:
            patchBillingProfileResp200Example:
              "$ref": "#/components/examples/patchBillingProfileResp200Example"
    replaceBillingProfileResp200:
      description: Billing profile updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated billing profile.
                allOf:
                - "$ref": "#/components/schemas/BillingProfile"
          examples:
            replaceBillingProfileResp200Example:
              "$ref": "#/components/examples/replaceBillingProfileResp200Example"
    deleteBillingProfileResp200:
      description: Billing profile deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted billing profile.
                allOf:
                - "$ref": "#/components/schemas/BillingProfile"
          examples:
            deleteBillingProfileResp200Example:
              "$ref": "#/components/examples/deleteBillingProfileResp200Example"
    listCostCentersResp200:
      description: Cost centers retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved cost centers.
                type: array
                items:
                  "$ref": "#/components/schemas/CostCenter"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CostCentersSortByMeta"
          examples:
            listCostCentersResp200Example:
              "$ref": "#/components/examples/listCostCentersResp200Example"
    createCostCenterResp201:
      description: Cost center created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created cost center.
                allOf:
                - "$ref": "#/components/schemas/CostCenter"
          examples:
            createCostCenterResp201Example:
              "$ref": "#/components/examples/createCostCenterResp201Example"
    getCostCenterResp200:
      description: Cost center retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved cost center.
                allOf:
                - "$ref": "#/components/schemas/CostCenter"
          examples:
            getCostCenterResp200Example:
              "$ref": "#/components/examples/getCostCenterResp200Example"
    patchCostCenterResp200:
      description: Cost center updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated cost center.
                allOf:
                - "$ref": "#/components/schemas/CostCenter"
          examples:
            patchCostCenterResp200Example:
              "$ref": "#/components/examples/patchCostCenterResp200Example"
    replaceCostCenterResp200:
      description: Cost center updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated cost center.
                allOf:
                - "$ref": "#/components/schemas/CostCenter"
          examples:
            replaceCostCenterResp200Example:
              "$ref": "#/components/examples/replaceCostCenterResp200Example"
    deleteCostCenterResp200:
      description: Cost center deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted cost center.
                allOf:
                - "$ref": "#/components/schemas/CostCenter"
          examples:
            deleteCostCenterResp200Example:
              "$ref": "#/components/examples/deleteCostCenterResp200Example"
    listCustomFieldsResp200:
      description: Custom fields retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved custom fields.
                type: array
                items:
                  "$ref": "#/components/schemas/CustomField"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CollectionSortByMeta"
          examples:
            listCustomFieldsResp200Example:
              "$ref": "#/components/examples/listCustomFieldsResp200Example"
    createCustomFieldResp201:
      description: Custom field created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created custom field.
                allOf:
                - "$ref": "#/components/schemas/CustomField"
          examples:
            createCustomFieldResp201Example:
              "$ref": "#/components/examples/createCustomFieldResp201Example"
    getCustomFieldResp200:
      description: Custom field retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved custom field.
                allOf:
                - "$ref": "#/components/schemas/CustomField"
          examples:
            getCustomFieldResp200Example:
              "$ref": "#/components/examples/getCustomFieldResp200Example"
    patchCustomFieldResp200:
      description: Custom field updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated custom field.
                allOf:
                - "$ref": "#/components/schemas/CustomField"
          examples:
            patchCustomFieldResp200Example:
              "$ref": "#/components/examples/patchCustomFieldResp200Example"
    replaceCustomFieldResp200:
      description: Custom field updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated custom field.
                allOf:
                - "$ref": "#/components/schemas/CustomField"
          examples:
            replaceCustomFieldResp200Example:
              "$ref": "#/components/examples/replaceCustomFieldResp200Example"
    deleteCustomFieldResp200:
      description: Custom field deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted custom field.
                allOf:
                - "$ref": "#/components/schemas/CustomField"
          examples:
            deleteCustomFieldResp200Example:
              "$ref": "#/components/examples/deleteCustomFieldResp200Example"
    listCustomFieldOptionsResp200:
      description: Custom field options retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved custom field options.
                type: array
                items:
                  "$ref": "#/components/schemas/CustomFieldOption"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CollectionSortByMeta"
          examples:
            listCustomFieldOptionsResp200Example:
              "$ref": "#/components/examples/listCustomFieldOptionsResp200Example"
    createCustomFieldOptionResp201:
      description: Custom field option created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created custom field option.
                allOf:
                - "$ref": "#/components/schemas/CustomFieldOption"
          examples:
            createCustomFieldOptionResp201Example:
              "$ref": "#/components/examples/createCustomFieldOptionResp201Example"
    getCustomFieldOptionResp200:
      description: Custom field option retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved custom field option.
                allOf:
                - "$ref": "#/components/schemas/CustomFieldOption"
          examples:
            getCustomFieldOptionResp200Example:
              "$ref": "#/components/examples/getCustomFieldOptionResp200Example"
    patchCustomFieldOptionResp200:
      description: Custom field option updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated custom field option.
                allOf:
                - "$ref": "#/components/schemas/CustomFieldOption"
          examples:
            patchCustomFieldOptionResp200Example:
              "$ref": "#/components/examples/patchCustomFieldOptionResp200Example"
    replaceCustomFieldOptionResp200:
      description: Custom field option updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated custom field option.
                allOf:
                - "$ref": "#/components/schemas/CustomFieldOption"
          examples:
            replaceCustomFieldOptionResp200Example:
              "$ref": "#/components/examples/replaceCustomFieldOptionResp200Example"
    deleteCustomFieldOptionResp200:
      description: Custom field option deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted custom field option.
                allOf:
                - "$ref": "#/components/schemas/CustomFieldOption"
          examples:
            deleteCustomFieldOptionResp200Example:
              "$ref": "#/components/examples/deleteCustomFieldOptionResp200Example"
    listDisputesResp200:
      description: Disputes retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved disputes.
                type: array
                items:
                  "$ref": "#/components/schemas/Dispute"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CollectionSortByMeta"
          examples:
            listDisputesResp200Example:
              "$ref": "#/components/examples/listDisputesResp200Example"
    getDisputeResp200:
      description: Dispute retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved dispute.
                allOf:
                - "$ref": "#/components/schemas/Dispute"
          examples:
            getDisputeResp200Example:
              "$ref": "#/components/examples/getDisputeResp200Example"
    listEventsResp200:
      description: Events retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved events.
                type: array
                items:
                  "$ref": "#/components/schemas/Event"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionBothPaginationsMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
          examples:
            listEventsResp200Example:
              "$ref": "#/components/examples/listEventsResp200Example"
    getEventResp200:
      description: Event retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved event.
                allOf:
                - "$ref": "#/components/schemas/Event"
          examples:
            getEventResp200Example:
              "$ref": "#/components/examples/getEventResp200Example"
    listInvoicesResp200:
      description: Invoices retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved invoices.
                type: array
                items:
                  "$ref": "#/components/schemas/Invoice"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionBothPaginationsMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
          examples:
            listInvoicesResp200Example:
              "$ref": "#/components/examples/listInvoicesResp200Example"
    getInvoiceResp200:
      description: Invoice retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved invoice.
                allOf:
                - "$ref": "#/components/schemas/Invoice"
          examples:
            getInvoiceResp200Example:
              "$ref": "#/components/examples/getInvoiceResp200Example"
    listInvoiceBillingOperationsResp200:
      description: Billing operations retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved billing operations.
                type: array
                items:
                  "$ref": "#/components/schemas/BillingOperation"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionBothPaginationsMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/BillingOperationsSortByMeta"
          examples:
            listInvoiceBillingOperationsResp200Example:
              "$ref": "#/components/examples/listInvoiceBillingOperationsResp200Example"
    listProjectCodesResp200:
      description: Project codes retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved project codes.
                type: array
                items:
                  "$ref": "#/components/schemas/ProjectCode"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/ProjectCodesSortByMeta"
          examples:
            listProjectCodesResp200Example:
              "$ref": "#/components/examples/listProjectCodesResp200Example"
    createProjectCodeResp201:
      description: Project code created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created project code.
                allOf:
                - "$ref": "#/components/schemas/ProjectCode"
          examples:
            createProjectCodeResp201Example:
              "$ref": "#/components/examples/createProjectCodeResp201Example"
    getProjectCodeResp200:
      description: Project code retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved project code.
                allOf:
                - "$ref": "#/components/schemas/ProjectCode"
          examples:
            getProjectCodeResp200Example:
              "$ref": "#/components/examples/getProjectCodeResp200Example"
    patchProjectCodeResp200:
      description: Project code updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated project code.
                allOf:
                - "$ref": "#/components/schemas/ProjectCode"
          examples:
            patchProjectCodeResp200Example:
              "$ref": "#/components/examples/patchProjectCodeResp200Example"
    replaceProjectCodeResp200:
      description: Project code updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated project code.
                allOf:
                - "$ref": "#/components/schemas/ProjectCode"
          examples:
            replaceProjectCodeResp200Example:
              "$ref": "#/components/examples/replaceProjectCodeResp200Example"
    deleteProjectCodeResp200:
      description: Project code deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted project code.
                allOf:
                - "$ref": "#/components/schemas/ProjectCode"
          examples:
            deleteProjectCodeResp200Example:
              "$ref": "#/components/examples/deleteProjectCodeResp200Example"
    listRefundsResp200:
      description: Refunds retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved refunds.
                type: array
                items:
                  "$ref": "#/components/schemas/Refund"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CollectionSortByMeta"
          examples:
            listRefundsResp200Example:
              "$ref": "#/components/examples/listRefundsResp200Example"
    getRefundResp200:
      description: Refund retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved refund.
                allOf:
                - "$ref": "#/components/schemas/Refund"
          examples:
            getRefundResp200Example:
              "$ref": "#/components/examples/getRefundResp200Example"
    listTravelPoliciesResp200:
      description: Travel policies retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved travel policies.
                type: array
                items:
                  "$ref": "#/components/schemas/TravelPolicy"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CollectionSortByMeta"
          examples:
            listTravelPoliciesResp200Example:
              "$ref": "#/components/examples/listTravelPoliciesResp200Example"
    createTravelPolicyResp201:
      description: Travel policy created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created travel policy.
                allOf:
                - "$ref": "#/components/schemas/TravelPolicy"
          examples:
            createTravelPolicyResp201Example:
              "$ref": "#/components/examples/createTravelPolicyResp201Example"
    getTravelPolicyResp200:
      description: Travel policy retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved travel policy.
                allOf:
                - "$ref": "#/components/schemas/TravelPolicy"
          examples:
            getTravelPolicyResp200Example:
              "$ref": "#/components/examples/getTravelPolicyResp200Example"
    patchTravelPolicyResp200:
      description: Travel policy updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated travel policy.
                allOf:
                - "$ref": "#/components/schemas/TravelPolicy"
          examples:
            patchTravelPolicyResp200Example:
              "$ref": "#/components/examples/patchTravelPolicyResp200Example"
    replaceTravelPolicyResp200:
      description: Travel policy updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated travel policy.
                allOf:
                - "$ref": "#/components/schemas/TravelPolicy"
          examples:
            replaceTravelPolicyResp200Example:
              "$ref": "#/components/examples/replaceTravelPolicyResp200Example"
    deleteTravelPolicyResp200:
      description: Travel policy deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted travel policy.
                allOf:
                - "$ref": "#/components/schemas/TravelPolicy"
          examples:
            deleteTravelPolicyResp200Example:
              "$ref": "#/components/examples/deleteTravelPolicyResp200Example"
    listTripProjectsResp200:
      description: Trip projects retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved trip projects.
                type: array
                items:
                  "$ref": "#/components/schemas/TripProject"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CollectionSortByMeta"
          examples:
            listTripProjectsResp200Example:
              "$ref": "#/components/examples/listTripProjectsResp200Example"
    getTripProjectResp200:
      description: Trip project retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved trip project.
                allOf:
                - "$ref": "#/components/schemas/TripProject"
          examples:
            getTripProjectResp200Example:
              "$ref": "#/components/examples/getTripProjectResp200Example"
    listTripProjectBillingOperationsResp200:
      description: Billing operations retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved billing operations.
                type: array
                items:
                  "$ref": "#/components/schemas/BillingOperation"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionBothPaginationsMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/BillingOperationsSortByMeta"
          examples:
            listTripProjectBillingOperationsResp200Example:
              "$ref": "#/components/examples/listTripProjectBillingOperationsResp200Example"
    listTripProjectTravelersResp200:
      description: Users retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved users.
                type: array
                items:
                  "$ref": "#/components/schemas/User"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
          examples:
            listTripProjectTravelersExample:
              "$ref": "#/components/examples/listTripProjectTravelersExample"
    autoApprovalTripProjectResp200:
      description: Trip project updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated trip project.
                allOf:
                - "$ref": "#/components/schemas/TripProject"
          examples:
            autoApprovalTripProjectExample:
              "$ref": "#/components/examples/autoApprovalTripProjectExample"
    listUsersResp200:
      description: Users retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved users.
                type: array
                items:
                  "$ref": "#/components/schemas/User"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/UsersSortByMeta"
          examples:
            listUsersResp200Example:
              "$ref": "#/components/examples/listUsersResp200Example"
    createUserResp201:
      description: User created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created user.
                allOf:
                - "$ref": "#/components/schemas/User"
          examples:
            createUserResp201Example:
              "$ref": "#/components/examples/createUserResp201Example"
    getUserResp200:
      description: User retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved user.
                allOf:
                - "$ref": "#/components/schemas/User"
          examples:
            getUserResp200Example:
              "$ref": "#/components/examples/getUserResp200Example"
    patchUserResp200:
      description: User updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated user.
                allOf:
                - "$ref": "#/components/schemas/User"
          examples:
            patchUserResp200Example:
              "$ref": "#/components/examples/patchUserResp200Example"
    replaceUserResp200:
      description: User updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated user.
                allOf:
                - "$ref": "#/components/schemas/User"
          examples:
            replaceUserResp200Example:
              "$ref": "#/components/examples/replaceUserResp200Example"
    deleteUserResp200:
      description: User deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted user.
                allOf:
                - "$ref": "#/components/schemas/User"
          examples:
            deleteUserResp200Example:
              "$ref": "#/components/examples/deleteUserResp200Example"
    listWebhooksResp200:
      description: Webhooks retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            - meta
            properties:
              data:
                description: The retrieved webhooks.
                type: array
                items:
                  "$ref": "#/components/schemas/Webhook"
              meta:
                allOf:
                - "$ref": "#/components/schemas/CollectionOffsetPaginationMeta"
                - "$ref": "#/components/schemas/CollectionOrderMeta"
                - "$ref": "#/components/schemas/CollectionSortByMeta"
          examples:
            listWebhooksResp200Example:
              "$ref": "#/components/examples/listWebhooksResp200Example"
    createWebhookResp201:
      description: Webhook created
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The created webhook.
                allOf:
                - "$ref": "#/components/schemas/WebhookCreateRespData"
          examples:
            createWebhookResp201Example:
              "$ref": "#/components/examples/createWebhookResp201Example"
    getWebhookResp200:
      description: Webhook retrieved
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The retrieved webhook.
                allOf:
                - "$ref": "#/components/schemas/Webhook"
          examples:
            getWebhookResp200Example:
              "$ref": "#/components/examples/getWebhookResp200Example"
    patchWebhookResp200:
      description: Webhook updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated webhook.
                allOf:
                - "$ref": "#/components/schemas/Webhook"
          examples:
            patchWebhookResp200Example:
              "$ref": "#/components/examples/patchWebhookResp200Example"
    replaceWebhookResp200:
      description: Webhook updated
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The updated webhook.
                allOf:
                - "$ref": "#/components/schemas/Webhook"
          examples:
            replaceWebhookResp200Example:
              "$ref": "#/components/examples/replaceWebhookResp200Example"
    deleteWebhookResp200:
      description: Webhook deleted
      content:
        application/json:
          schema:
            type: object
            required:
            - data
            properties:
              data:
                description: The deleted webhook.
                allOf:
                - "$ref": "#/components/schemas/Webhook"
          examples:
            deleteWebhookResp200Example:
              "$ref": "#/components/examples/deleteWebhookResp200Example"
    accessForbidden:
      description: Access forbidden
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"
    invalidData:
      description: Invalid data was sent
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ValidationError"
    notFound:
      description: Resource was not found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Error"
    scimListUsersResp200:
      description: Users retrieved
      content:
        application/json:
          schema:
            type: object
            properties:
              schemas:
                description: SCIM ListResponse Schema URI.
                type: array
                items:
                  type: string
                example:
                - urn:ietf:params:scim:api:messages:2.0:ListResponse
              startIndex:
                description: The 1-based index of the first user.
                type: integer
                format: int32
                example: 1
              itemsPerPage:
                description: The number of users returned per page.
                type: integer
                format: int32
                example: 100
              totalResults:
                description: The total number of users.
                type: integer
                format: int32
                example: 427
              Resources:
                description: Users.
                type: array
                items:
                  "$ref": "#/components/schemas/ScimUser"
          examples:
            scimListUsersResp200Example:
              "$ref": "#/components/examples/scimListUsersResp200Example"
    scimCreateUserResp201:
      description: User created
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ScimUser"
          examples:
            scimCreateUserResp201Example:
              "$ref": "#/components/examples/scimCreateUserResp201Example"
    scimGetUserResp200:
      description: User retrieved
      content:
        application/json:
          schema:
            type: object
            allOf:
            - "$ref": "#/components/schemas/ScimUser"
          examples:
            scimGetUserResp200Example:
              "$ref": "#/components/examples/scimGetUserResp200Example"
    scimPatchUserResp200:
      description: User updated
      content:
        application/json:
          schema:
            type: object
            allOf:
            - "$ref": "#/components/schemas/ScimUser"
          examples:
            scimPatchUserResp200Example:
              "$ref": "#/components/examples/scimPatchUserResp200Example"
    scimReplaceUserResp200:
      description: User updated
      content:
        application/json:
          schema:
            allOf:
            - "$ref": "#/components/schemas/ScimUser"
          examples:
            scimReplaceUserResp200Example:
              "$ref": "#/components/examples/scimReplaceUserResp200Example"
    scimDeleteUserResp204:
      description: User deleted
  schemas:
    Amount:
      description: Amount of money.
      type: object
      required:
      - currency
      - total
      properties:
        base:
          description: The base amount of money, before tax. Present only if a tax
            was applied.
          readOnly: true
          type: number
          format: float
          example: 199.9
        currency:
          description: Three-letter ISO currency code, in uppercase. Always present.
          readOnly: true
          type: string
          example: EUR
        tax:
          description: Tax amount. Present only if a tax was applied.
          readOnly: true
          type: number
          format: float
          example: 39.98
        taxRate:
          description: Tax rate applied. Present only if a tax was applied.
          readOnly: true
          type: number
          format: float
          example: 20
        total:
          description: The total amount of money, after tax. Always present.
          readOnly: true
          type: number
          format: float
          example: 239.88
    BillingOperationsSortBy:
      description: Collection sorting field.
      type: string
      default: createdAt
      enum:
      - createdAt
      - date
    BillingOperationsSortByMeta:
      description: Collection sort field.
      type: object
      required:
      - sortBy
      properties:
        sortBy:
          description: Sorting field.
          allOf:
          - "$ref": "#/components/schemas/BillingOperationsSortBy"
    BillingProfilesSortBy:
      description: Collection sorting field.
      type: string
      default: createdAt
      enum:
      - createdAt
      - name
    BillingProfilesSortByMeta:
      description: Collection sort field.
      type: object
      required:
      - sortBy
      properties:
        sortBy:
          description: Sorting field.
          allOf:
          - "$ref": "#/components/schemas/BillingProfilesSortBy"
    Booking:
      type: object
      required:
      - id
      - type
      - createdAt
      - canceled
      - kind
      - status
      - tripProjectId
      properties:
        id:
          description: The booking id.
          readOnly: true
          type: string
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - booking
        createdAt:
          description: Time at which the booking was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        canceled:
          description: Whether the booking has been fully canceled. If the booking
            is only partially canceled, then this attribute will still be false.
          readOnly: true
          type: boolean
          default: false
        cancellations:
          description: Array of booking cancellation resources.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/BookingCancellation"
        kind:
          description: The booking kind.
          readOnly: true
          type: string
          enum:
          - car
          - flight
          - hotel
          - rail
          - seminar
        rateId:
          description: The rate id.
          readOnly: true
          type: string
        reference:
          description: The booking reference.
          readOnly: true
          type: string
        status:
          description: The booking status.
          readOnly: true
          type: string
          enum:
          - failed
          - inProgress
          - succeeded
        tripProjectId:
          description: Booking belongs to that trip project.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
    BookingCabinClass:
      description: Transport cabin class.
      type: string
      enum:
      - business
      - economy
      - first
      - premiumEco
      - second
    BookingCancellation:
      type: object
      required:
      - id
      - type
      - createdAt
      - bookingId
      - tripProjectId
      properties:
        id:
          description: The booking cancellation id.
          readOnly: true
          type: string
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - cancellation
        createdAt:
          description: Time at which the booking was cancelled.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        bookingId:
          description: Booking id.
          readOnly: true
          type: string
        transportSegmentIds:
          description: Array of canceled transport segment identifiers.
          readOnly: true
          type: array
          items:
            type: string
        tripProjectId:
          description: Booking cancellation belongs to that trip project.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
    BookingFareType:
      description: Transport fare type.
      type: string
      enum:
      - flex
      - notFlex
      - semiFlex
    BookingSnapshot:
      type: object
      required:
      - booker
      - channel
      - date
      - kind
      properties:
        booker:
          description: Booker info.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshotUser"
        channel:
          description: Booking channel.
          readOnly: true
          type: string
          enum:
          - offline
          - online
        date:
          description: Time at which the booking was performed.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        fairbudget:
          description: Computed fairbudget.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Amount"
        hotel:
          description: Hotel info.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshotHotel"
        kind:
          description: The booking kind.
          readOnly: true
          type: string
          enum:
          - car
          - flight
          - hotel
          - rail
          - seminar
        reference:
          description: Booking reference.
          readOnly: true
          type: string
        supplierName:
          description: Booking supplier.
          readOnly: true
          type: string
        transport:
          description: Transport info.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshotTransport"
        traveler:
          description: Traveler info.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshotUser"
    BookingSnapshotHotel:
      type: object
      required:
      - checkinLocaleDate
      - checkoutLocaleDate
      properties:
        checkinLocaleDate:
          description: The checkin date of locale place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDate"
        checkoutLocaleDate:
          description: The checkout date of locale place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDate"
        place:
          description: Hotel location.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshotPlace"
    BookingSnapshotPlace:
      type: object
      properties:
        airport:
          description: Airport code.
          readOnly: true
          type: string
        city:
          description: City name.
          readOnly: true
          type: string
        countryCode:
          description: Country code.
          readOnly: true
          type: string
    BookingSnapshotTransport:
      type: object
      required:
      - departure
      - departureLocaleDate
      - destination
      properties:
        cabinClass:
          description: Transport cabin class.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingCabinClass"
        category:
          description: City name.
          readOnly: true
          type: string
        departure:
          description: Departure place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshotPlace"
        departureLocaleDate:
          description: The departure date of locale place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDate"
        destination:
          description: Destination place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshotPlace"
        fareType:
          description: Transport fare type.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingFareType"
        itineraryType:
          description: Transport itinerary type.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingItineraryType"
        lowCost:
          description: If true, then this is a low cost transport.
          readOnly: true
          type: boolean
        returnLocaleDate:
          description: The return date of locale place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDate"
    BookingSnapshotUser:
      type: object
      required:
      - id
      - email
      - fullName
      properties:
        id:
          description: User id.
          readOnly: true
          type: string
        email:
          description: User email.
          readOnly: true
          type: string
          format: email
        fullName:
          description: User fullname.
          readOnly: true
          type: string
    BookingItineraryType:
      description: Transport itinerary type.
      type: string
      enum:
      - oneWay
      - roundTrip
    CollectionBothPaginationsMeta:
      description: Collection pagination meta data.
      type: object
      required:
      - pageKind
      - limit
      properties:
        pageKind:
          allOf:
          - "$ref": "#/components/schemas/CollectionPageKind"
        limit:
          description: Maximum number of items.
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          example: 10
        offset:
          description: |
            Number of items skipped.

            Present only if `pageKind` value is `offset`.
          type: integer
          format: int32
          example: 0
        total:
          description: |
            Total number of items on server.

            Present only if `pageKind` value is `offset`.
          type: integer
          format: int32
          example: 123
        before:
          description: |
            Cursor value requested.

            Present only if `pageKind` value is `cursor`.
          type: string
          example: ZG9jX2lkOjVkOTc2OTYxYTI0YjBjMTcyNmY2NWJkMg==
        after:
          description: |
            Cursor value requested.

            Present only if `pageKind` value is `cursor`.
          type: string
          example: ZG9jX2lkOjVkYWVmYThhMTg1YjNlNmNiM2Q3OTY3OA==
        prevBefore:
          description: |
            Cursor value that can be used to retrieve previous items with `before` query parameter.

            Present only if `pageKind` value is `cursor`.
          type: string
          example: ZG9jX2lkOjVkOWQ5NzNhYjQyN2FiNWVhYTY4NTMwMA==
        nextAfter:
          description: |
            Cursor value that can be used to retrieve next items with `after` query parameter.

            Present only if `pageKind` value is `cursor`.
          type: string
          example: ZG9jX2lkOjVkYWYwODViODFlMjk1OGU5ZmZhZDk5ZA==
    CollectionOffsetPaginationMeta:
      description: Collection pagination meta data.
      type: object
      required:
      - pageKind
      - limit
      - offset
      - total
      properties:
        pageKind:
          description: The pagination kind.
          type: string
          enum:
          - offset
        limit:
          description: Maximum number of items.
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          example: 10
        offset:
          description: Number of items skipped.
          type: integer
          format: int32
          example: 0
        total:
          description: Total number of items on server.
          type: integer
          format: int32
          example: 123
    CollectionOrder:
      description: Collection sorting order.
      type: string
      enum:
      - asc
      - desc
      default: asc
    CollectionOrderMeta:
      description: Collection sort order.
      type: object
      required:
      - order
      properties:
        order:
          description: Sort order.
          allOf:
          - "$ref": "#/components/schemas/CollectionOrder"
    CollectionPageKind:
      description: Collection pagination kind.
      type: string
      enum:
      - offset
      - cursor
      default: offset
    CollectionSortByMeta:
      description: Collection sort field.
      type: object
      required:
      - sortBy
      properties:
        sortBy:
          description: Sort field.
          type: string
          enum:
          - createdAt
          default: createdAt
    CostCentersSortBy:
      description: Collection sorting field.
      type: string
      default: createdAt
      enum:
      - createdAt
      - name
    CostCentersSortByMeta:
      description: Collection sort field.
      type: object
      required:
      - sortBy
      properties:
        sortBy:
          description: Sorting field.
          allOf:
          - "$ref": "#/components/schemas/CostCentersSortBy"
    Country:
      description: Country.
      type: object
      properties:
        code:
          description: Country code.
          readOnly: true
          type: string
          example: FR
        name:
          description: Localized country name.
          readOnly: true
          type: string
          example: France
    Email:
      description: Email address.
      type: string
      format: email
      example: john.smith@example.com
    Geoloc:
      description: Geolocation coordinates.
      type: object
      required:
      - lat
      - lng
      properties:
        lat:
          description: Latitude.
          readOnly: true
          type: number
          format: float
          example: 26.357896
        lng:
          description: Longitude.
          readOnly: true
          type: number
          format: float
          example: 127.783809
    LocaleDate:
      description: The date of locale place.
      readOnly: true
      type: string
      example: '2020-09-25'
    LocaleDateTime:
      description: The date and time of locale place.
      readOnly: true
      type: string
      example: '2020-09-25T08:42:27'
    Place:
      type: object
      required:
      - name
      - type
      properties:
        airport:
          description: Airport information. Present only if `type` is `airport`.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/PlaceAirport"
        country:
          description: Place country.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Country"
        geoloc:
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Geoloc"
        name:
          description: Place name.
          readOnly: true
          type: string
        type:
          description: Place type.
          readOnly: true
          type: string
          enum:
          - airport
          - station
          - address
          - city
          - hotel
          - point
          - any
    PlaceAirport:
      type: object
      required:
      - iataCode
      properties:
        iataCode:
          description: IATA code.
          readOnly: true
          type: string
    PlaceWithLocaleDateTime:
      type: object
      required:
      - localeDateTime
      - place
      properties:
        localeDateTime:
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDateTime"
        place:
          description: The place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Place"
    ProjectCodesSortBy:
      description: Collection sorting field.
      type: string
      default: createdAt
      enum:
      - createdAt
      - code
    ProjectCodesSortByMeta:
      description: Collection sort field.
      type: object
      required:
      - sortBy
      properties:
        sortBy:
          description: Sorting field.
          allOf:
          - "$ref": "#/components/schemas/ProjectCodesSortBy"
    Rate:
      type: object
      required:
      - id
      - type
      - createdAt
      - kind
      - price
      properties:
        id:
          description: The rate id.
          readOnly: true
          type: string
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - rate
        createdAt:
          description: Time at which the rate was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        kind:
          description: The rate kind.
          readOnly: true
          type: string
          enum:
          - flight
          - hotel
          - rail
        price:
          description: The rate price.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Amount"
    ResourceBsonID:
      description: The resource unique identifier.
      type: string
      minLength: 24
      maxLength: 24
      pattern: "^[a-f\\d]{24}$"
      example: 5de7bc72bf882f3bb31619bf
    ResourceCustomField:
      description: Custom field attached to resource.
      type: object
      required:
      - customFieldId
      - name
      - values
      properties:
        customFieldId:
          description: The ID of the custom field.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        name:
          description: Custom field name.
          readOnly: true
          type: string
        values:
          description: Custom field values.
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/ResourceCustomFieldValue"
    ResourceCustomFieldInput:
      description: Custom field to attach to resource.
      type: object
      required:
      - customFieldId
      - values
      properties:
        customFieldId:
          description: The ID of the custom field.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        values:
          description: Custom field values.
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/ResourceCustomFieldValueInput"
    ResourceCustomFieldValue:
      description: Custom field value attached to resource.
      type: object
      required:
      - data
      properties:
        customFieldOptionId:
          description: |
            The ID of the custom field option.

            Present only if custom field `dataType` property value is `option` or `options`.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        data:
          description: Custom field value data.
          type: string
        displayName:
          description: |
            Custom field value display name.

            Present only if custom field `dataType` property value is `option` or `options`.
          readOnly: true
          type: string
    ResourceCustomFieldValueInput:
      description: Custom field value to attach to resource.
      type: object
      properties:
        customFieldOptionId:
          description: |
            The ID of the custom field option.

            Mandatory only if custom field `dataType` property value is `option` or `options`.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        data:
          description: |
            Custom field value data.

            Mandatory only if custom field `dataType` property value is `text`.
          type: string
    ResourceUUID:
      description: The resource unique identifier.
      type: string
      format: uuid
      maxLength: 50
      pattern: "^[@~\\-\\.\\w]+$"
      example: 35c93884-5cca-4e72-98ff-eb52f611cb21
    ServerDateTime:
      description: Read-only timestamp, automatically assigned on back-end.
      readOnly: true
      type: string
      format: date-time
      example: '2019-09-25T07:35:42Z'
    TravelPoliciesSortBy:
      description: Collection sorting field.
      type: string
      default: createdAt
      enum:
      - createdAt
      - name
    UsersSortBy:
      description: Collection sorting field.
      type: string
      default: createdAt
      enum:
      - createdAt
      - email
    UsersSortByMeta:
      description: Collection sort field.
      type: object
      required:
      - sortBy
      properties:
        sortBy:
          description: Sorting field.
          allOf:
          - "$ref": "#/components/schemas/UsersSortBy"
    BillingOperation:
      description: The billing operation resource.
      type: object
      required:
      - id
      - type
      - createdAt
      - amount
      - date
      - operationType
      - status
      - transactionKind
      properties:
        id:
          description: Unique identifier for the billing operation.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - billingOperation
        createdAt:
          description: Time at which the billing operation resource was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        amount:
          description: The billing operation amount.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Amount"
        bookingSnapshot:
          description: Snapshot of informations at the time of booking.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/BookingSnapshot"
        costCenterId:
          description: The ID of the associated cost center.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        customFields:
          description: Array of custom fields.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/ResourceCustomField"
        date:
          description: Time at which the related action was performed. For example,
            the booking date in case of booking operation.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        description:
          description: Description.
          readOnly: true
          type: string
          example: Roundtrip flight - Diego de la Vega - Paris > Tokyo - 25SEP2020
        disputeId:
          description: The ID of the associated dispute.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        invoiceId:
          description: The ID of the associated invoice.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        operationType:
          description: Billing operation type.
          readOnly: true
          type: string
          enum:
          - booking
          - car
          - flight
          - hotel
          - other
          - rail
          - seminar
          - subscription
        projectCodeId:
          description: The ID of the associated project code.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        refundId:
          description: The ID of the associated refund.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        status:
          description: Billing operation status.
          readOnly: true
          type: string
        transactionKind:
          description: Transaction kind.
          readOnly: true
          type: string
          enum:
          - dispute
          - purchase
          - refund
        tripProjectId:
          description: The ID of the associated trip project.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
    BillingProfile:
      description: The billing profile resource.
      allOf:
      - "$ref": "#/components/schemas/BillingProfilePatch"
      required:
      - id
      - type
      - createdAt
      - archived
      - email
      - lang
      - name
    BillingProfileReplace:
      description: The billing profile resource.
      allOf:
      - "$ref": "#/components/schemas/BillingProfilePatch"
      required:
      - email
      - lang
      - name
    BillingProfilePatch:
      description: The billing profile fields to update.
      type: object
      properties:
        id:
          description: Unique identifier for the billing profile.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - billingProfile
        createdAt:
          description: Time at which the billing profile was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        address:
          "$ref": "#/components/schemas/BillingProfileAddress"
        archived:
          description: If true, then that billing profile is archived.
          type: boolean
        companyName:
          description: Full business name.
          type: string
          example: Fairjungle
        email:
          description: Email used to receive billing infos.
          allOf:
          - "$ref": "#/components/schemas/Email"
        lang:
          description: Language used for billing emails and generated invoices.
          type: string
          enum:
          - en
          - fr
          example: en
        name:
          description: Billing profile name.
          type: string
          example: France Department
        paymentMethodSummary:
          description: The payment method associated to that billing profile.
          readOnly: true
          type: string
          example: Credit card (****-4242)
        taxId:
          description: European VAT number.
          type: string
          example: DE123456789
        travelPolicyId:
          description: The ID of the travel policy associated to this billing profile.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
    BillingProfileAddress:
      description: The billing profile postal address.
      type: object
      properties:
        city:
          type: string
          example: Saint-Mandé
        country:
          description: 'An ISO 3166 country code (eg: FR)'
          type: string
          example: FR
        line1:
          description: First postal address line.
          type: string
        line2:
          description: Second postal address line.
          type: string
          example: 5 Avenue du Général de Gaulle
        postalCode:
          type: string
          example: '94160'
        state:
          description: State/Province/Region
          type: string
    CostCenter:
      description: The cost center resource.
      allOf:
      - "$ref": "#/components/schemas/CostCenterPatch"
      required:
      - id
      - type
      - createdAt
      - archived
      - name
    CostCenterReplace:
      description: The cost center resource.
      allOf:
      - "$ref": "#/components/schemas/CostCenterPatch"
      required:
      - name
    CostCenterPatch:
      description: The cost center fields to update.
      type: object
      properties:
        id:
          description: Unique identifier for the cost center.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - costCenter
        createdAt:
          description: Time at which the cost center was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        archived:
          description: If true, then that cost center is archived.
          type: boolean
        name:
          description: Cost center name.
          type: string
          example: VIP
        travelPolicyId:
          description: The ID of the travel policy associated to this cost center.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
    CustomField:
      description: The custom field resource.
      allOf:
      - "$ref": "#/components/schemas/CustomFieldPatch"
      properties:
        dataType:
          description: Custom field value data type.
          type: string
          enum:
          - text
          - option
          - optionsList
        resourceType:
          description: Custom field is attached to that resource type.
          type: string
          enum:
          - tripProject
          - user
      required:
      - id
      - type
      - createdAt
      - dataType
      - disabled
      - mandatory
      - name
      - resourceType
    CustomFieldReplace:
      description: The custom field resource.
      allOf:
      - "$ref": "#/components/schemas/CustomFieldPatch"
      required:
      - name
    CustomFieldPatch:
      description: The custom field fields to update.
      type: object
      properties:
        id:
          description: Unique identifier for the custom field.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - customField
        createdAt:
          description: Time at which the custom field was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        description:
          description: Custom field description.
          type: string
        disabled:
          description: If true, then that custom field can't be assigned to resource
            anymore.
          type: boolean
        mandatory:
          description: If true, then custom field id not optional.
          type: boolean
        name:
          description: Custom field name.
          type: string
          example: Budget Code
    CustomFieldOption:
      description: The custom field option resource.
      allOf:
      - "$ref": "#/components/schemas/CustomFieldOptionPatch"
      required:
      - id
      - type
      - createdAt
      - customFieldId
      - data
      - disabled
    CustomFieldOptionReplace:
      description: The custom field option resource.
      allOf:
      - "$ref": "#/components/schemas/CustomFieldOptionPatch"
      required:
      - data
    CustomFieldOptionPatch:
      description: The custom field option fields to update.
      type: object
      properties:
        id:
          description: Unique identifier for the custom field option.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - customFieldOption
        createdAt:
          description: Time at which the custom field option was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        customFieldId:
          description: The ID of the custom field associated to this option.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        data:
          description: custom field option value data.
          type: string
        disabled:
          description: If true, then that custom field option can't be assigned to
            resource anymore.
          type: boolean
        displayName:
          description: custom field option display name.
          type: string
    Dispute:
      description: The dispute resource.
      required:
      - id
      - type
      - createdAt
      - amount
      - invoiceId
      - reason
      - status
      properties:
        id:
          description: Unique identifier for the dispute.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - dispute
        createdAt:
          description: Time at which the dispute was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        amount:
          description: The dispute amount.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Amount"
        invoiceId:
          description: The ID of the invoice associated to this dispute.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        reason:
          description: Dispute reason
          readOnly: true
          type: string
          enum:
          - warningNeedsResponse
          - bankCannotProcess
          - creditNotProcessed
          - customerInitiated
          - debitNotAuthorized
          - duplicate
          - fraudulent
          - general
          - incorrectAccountDetails
          - insufficientFunds
          - productNotReceived
          - productUnacceptable
          - subscriptionCanceled
          - unrecognized
        status:
          description: Dispute status
          readOnly: true
          type: string
          enum:
          - warningNeedsResponse
          - warningUnderReview
          - warningClosed
          - needsResponse
          - underReview
          - chargeRefunded
          - won
          - lost
    Event:
      description: The event resource.
      required:
      - id
      - type
      - createdAt
      - data
      - kind
      properties:
        id:
          description: Unique identifier for the event.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - event
        createdAt:
          description: Time at which the event was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        data:
          description: Object containing the resource relevant to the event.
          readOnly: true
          oneOf:
          - "$ref": "#/components/schemas/BillingProfile"
          - "$ref": "#/components/schemas/Booking"
          - "$ref": "#/components/schemas/BookingCancellation"
          - "$ref": "#/components/schemas/CostCenter"
          - "$ref": "#/components/schemas/Invoice"
          - "$ref": "#/components/schemas/ProjectCode"
          - "$ref": "#/components/schemas/TravelPolicy"
          - "$ref": "#/components/schemas/TripProject"
          - "$ref": "#/components/schemas/User"
          - "$ref": "#/components/schemas/Webhook"
        kind:
          description: Event kind
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/EventKind"
        previousAttributes:
          description: Object containing the names of the attributes that have changed,
            and their previous values (sent along only with `*.updated` events).
          readOnly: true
          type: object
    EventKind:
      type: string
      enum:
      - billingProfile.created
      - billingProfile.deleted
      - billingProfile.updated
      - bookingCancellation.created
      - costCenter.created
      - costCenter.deleted
      - costCenter.updated
      - dispute.created
      - dispute.updated
      - invoice.created
      - invoice.updated
      - projectCode.created
      - projectCode.deleted
      - projectCode.updated
      - refund.created
      - refund.updated
      - travelPolicy.created
      - travelPolicy.deleted
      - travelPolicy.updated
      - tripProject.booking.failed
      - tripProject.booking.succeeded
      - tripProject.created
      - user.created
      - user.deleted
      - user.updated
      - webhook.created
      - webhook.deleted
      - webhook.updated
    Invoice:
      description: The invoice resource.
      required:
      - id
      - type
      - createdAt
      - amount
      - billingOperationsCount
      - billingProfileId
      - description
      - kind
      - status
      properties:
        id:
          description: Unique identifier for the invoice.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - invoice
        createdAt:
          description: Time at which the invoice was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        amount:
          description: The invoice amount.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Amount"
        billingOperationsCount:
          description: Number of billing operations associated to that invoice.
          readOnly: true
          type: integer
          format: int32
        billingProfileId:
          description: The ID of a billing profile associated with invoice.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        description:
          description: Description.
          readOnly: true
          type: string
          example: Monthly invoice - February 2020.
        kind:
          description: Invoice kind.
          readOnly: true
          type: string
          enum:
          - booking
          - other
          - subscription
        paymentMethodSummary:
          description: The payment method used for that invoice.
          readOnly: true
          type: string
          example: Credit card (****-4242)
        paymentReference:
          description: Payment reference.
          readOnly: true
          type: string
          example: Fairjungle p1gh025yx
        pdf:
          description: The URL for the invoice PDF.
          readOnly: true
          type: string
        reference:
          description: Invoice reference.
          readOnly: true
          type: string
          example: 5D4B4AC8-0009
        status:
          description: Invoice status.
          readOnly: true
          type: string
          enum:
          - open
          - paid
          - uncollectible
          - void
        url:
          description: The URL for the hosted invoice page.
          readOnly: true
          type: string
    ProjectCode:
      description: The project code resource.
      allOf:
      - "$ref": "#/components/schemas/ProjectCodePatch"
      required:
      - id
      - type
      - createdAt
      - archived
      - code
      - confidential
    ProjectCodeReplace:
      description: The project code resource.
      allOf:
      - "$ref": "#/components/schemas/ProjectCodePatch"
      required:
      - code
    ProjectCodePatch:
      description: The project code fields to update.
      type: object
      properties:
        id:
          description: Unique identifier for the project code.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - projectCode
        createdAt:
          description: Time at which the project code was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        approverId:
          description: User ID of approver associated with that project code.
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
        archived:
          description: If true, then that project code is archived.
          type: boolean
        billingProfileId:
          description: The ID of a billing profile associated with project code.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        code:
          description: Project code.
          type: string
          example: NextGen
        confidential:
          description: A confidential project does not appear in search input auto-completion.
          type: boolean
        name:
          description: Project code name.
          type: string
          example: The next generation
    Refund:
      description: The refund resource.
      required:
      - id
      - type
      - createdAt
      - amount
      - invoiceId
      - status
      properties:
        id:
          description: Unique identifier for the refund.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - refund
        createdAt:
          description: Time at which the refund was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        amount:
          description: The refund amount.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Amount"
        invoiceId:
          description: The ID of the invoice associated to this refund.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        pdf:
          description: The URL for the refund PDF.
          readOnly: true
          type: string
        status:
          description: Refund status
          readOnly: true
          type: string
          enum:
          - waiting
          - pending
          - succeeded
          - failed
          - canceled
    TravelPolicy:
      description: The travel policy resource.
      allOf:
      - "$ref": "#/components/schemas/TravelPolicyPatch"
      required:
      - id
      - type
      - createdAt
      - control
      - default
      - hotelBudget
      - name
      - transportBudget
    TravelPolicyReplace:
      description: The travel policy resource.
      allOf:
      - "$ref": "#/components/schemas/TravelPolicyPatch"
      required:
      - control
      - hotelBudget
      - name
      - transportBudget
    TravelPolicyPatch:
      description: The travel policy fields to update.
      type: object
      properties:
        id:
          description: Unique identifier for the travel policy.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - travelPolicy
        createdAt:
          description: Time at which the travel policy was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        control:
          description: |
            Travel control type.

            - `full`: all travels need approval
            - `none`: all travels are allowed
            - `notif`: all travels are allowed, with a notification sent to approver
            - `smart`: travel control is computed thanks to `smartSettings`
          type: string
          enum:
          - full
          - none
          - notif
          - smart
        default:
          description: This is default travel policy.
          type: boolean
          default: false
        defaultApproverId:
          description: User ID of default approver to use.
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
        hotelBudget:
          description: Settings to compute hotel budget.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyHotelBudget"
        name:
          description: Travel policy name.
          type: string
          example: The next generation
        smartSettings:
          description: Settings for smart control. Present only if `control` field
            value is `smart`.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettings"
        transportBudget:
          description: Settings to compute transport budget.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyTransportBudget"
    TravelPolicyBudgetKind:
      description: Travel policy budget kind.
      type: string
      enum:
      - comfort
      - custom
      - moderate
      - strict
    TravelPolicyFlightBudget:
      description: Settings used to compute flight budget.
      type: object
      required:
      - kind
      properties:
        custom:
          description: Custom flight budget settings. Used only if `kind` field value
            is `custom`.
          type: object
          required:
          - longHaul
          - lowCostWhenPossible
          - mediumHaul
          - shortHaul
          properties:
            longHaul:
              description: Long haul settings.
              allOf:
              - "$ref": "#/components/schemas/TravelPolicyFlightHaulWithoutDurationSettings"
            lowCostWhenPossible:
              description: Select low-cost carriers when possible.
              type: boolean
            mediumHaul:
              description: Medium haul settings.
              allOf:
              - "$ref": "#/components/schemas/TravelPolicyFlightHaulSettings"
            shortHaul:
              description: Short haul settings.
              allOf:
              - "$ref": "#/components/schemas/TravelPolicyFlightHaulSettings"
        kind:
          description: Flight budget kind.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyBudgetKind"
        skipWhenGreenerAlternative:
          description: When there is a rail alternative, then ignore flights itineraries
            when computing transport budget, and do not propose flights recommendations.
          type: boolean
    TravelPolicyFlightCabinClass:
      description: Travel policy flight cabin class.
      type: string
      enum:
      - business
      - economy
      - first
      - premiumEco
      - second
    TravelPolicyFlightHaulSettings:
      description: Flight haul settings.
      type: object
      required:
      - cabinClass
      properties:
        cabinClass:
          description: Cabin class used to compute budget.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyFlightCabinClass"
        maxDuration:
          description: Maximum duration in minutes for that haul.
          type: integer
    TravelPolicyFlightHaulWithoutDurationSettings:
      description: Flight haul settings.
      type: object
      required:
      - cabinClass
      properties:
        cabinClass:
          description: Cabin class used to compute budget.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyFlightCabinClass"
    TravelPolicyHotelBudget:
      description: Settings used to compute hotel budget.
      type: object
      required:
      - kind
      properties:
        custom:
          description: Custom hotel budget settings. Used only if `kind` field value
            is `custom`.
          type: object
          nullable: true
          required:
          - flexibilityPercentage
          properties:
            flexibilityPercentage:
              description: Allowed upgrade percentage.
              type: integer
              example: 20
        kind:
          description: Hotel budget kind.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyBudgetKind"
    TravelPolicyRailBudget:
      description: Settings used to compute rail budget.
      type: object
      required:
      - kind
      properties:
        custom:
          description: Custom rail budget settings. Used only if `kind` field value
            is `custom`.
          type: object
          required:
          - fareType
          - longHaul
          - shortHaul
          properties:
            fareType:
              description: Fare type used to compute budget.
              allOf:
              - "$ref": "#/components/schemas/BookingFareType"
            longHaul:
              description: Long haul settings.
              allOf:
              - "$ref": "#/components/schemas/TravelPolicyRailHaulWithoutDurationSettings"
            shortHaul:
              description: Short haul settings.
              allOf:
              - "$ref": "#/components/schemas/TravelPolicyRailHaulSettings"
        kind:
          description: Rail budget kind.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyBudgetKind"
    TravelPolicyRailCabinClass:
      description: Travel policy rail cabin class.
      type: string
      enum:
      - first
      - second
    TravelPolicyRailHaulSettings:
      description: Rail haul settings.
      type: object
      required:
      - cabinClass
      properties:
        cabinClass:
          description: Cabin class used to compute budget.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyRailCabinClass"
        maxDuration:
          description: Maximum duration in minutes for that haul.
          type: integer
    TravelPolicyRailHaulWithoutDurationSettings:
      description: Rail haul settings.
      type: object
      required:
      - cabinClass
      properties:
        cabinClass:
          description: Cabin class used to compute budget.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyRailCabinClass"
    TravelPolicySmartAction:
      description: Action to perform in a smart policy rule.
      type: string
      enum:
      - deny
      - forceApproval
      - notifyApprover
    TravelPolicySmartSettings:
      description: Smart control settings.
      type: object
      properties:
        maxTripFlightPrice:
          description: When flight price exceeds a fixed amount.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettingsAmount"
        maxTripHotelPrice:
          description: When hotel price exceeds a fixed amount.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettingsAmount"
        maxTripPrice:
          description: When total trip price exceeds a fixed amount.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettingsAmount"
        maxTripRailPrice:
          description: When train price exceeds a fixed amount.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettingsAmount"
        minBookingLeadTime:
          description: Action to perform when trip is booked less than the given amount
            of days before departure.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettingsLeadTime"
        tripDestination:
          description: Action to perform when trip is booked to a restricted destination.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettingsTripDestination"
        tripIsOutOfBudget:
          description: When trip exceeds budget guidelines.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartSettingsAction"
    TravelPolicySmartSettingsAction:
      type: object
      required:
      - action
      properties:
        action:
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartAction"
    TravelPolicySmartSettingsAmount:
      type: object
      required:
      - action
      - amount
      - currency
      properties:
        action:
          description: Action to perform.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartAction"
        amount:
          description: Maximum price.
          type: integer
          format: int32
        currency:
          description: Three-letter ISO currency code, in uppercase.
          type: string
          example: EUR
    TravelPolicySmartSettingsLeadTime:
      description: When the lead time is lower than fixed number of days.
      type: object
      required:
      - action
      - days
      properties:
        action:
          description: Action to perform.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicySmartAction"
        days:
          description: Minimum number of days allowed.
          type: integer
          format: int32
    TravelPolicySmartSettingsTripDestination:
      description: Smart settings for trip destination.
      type: object
      properties:
        denyCountries:
          description: Country codes for forbidden destinations.
          type: array
          items:
            type: string
        forceApprovalCountries:
          description: Country codes for destinations that trigger trip approval.
          type: array
          items:
            type: string
    TravelPolicyTransportBudget:
      description: Settings used to compute transport budget.
      type: object
      required:
      - flight
      - rail
      properties:
        common:
          description: Settings common to all transport types.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyTransportCommonBudget"
        flight:
          description: Settings specific to flight transport.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyFlightBudget"
        rail:
          description: Settings specifc to rail transport.
          allOf:
          - "$ref": "#/components/schemas/TravelPolicyRailBudget"
    TravelPolicyTransportCommonBudget:
      description: Settings used to compute transport budget.
      type: object
      required:
      - flexibilityPercentage
      properties:
        flexibilityPercentage:
          description: Allowed upgrade percentage.
          type: integer
          example: 20
    TripCompany:
      type: object
      required:
      - id
      - name
      properties:
        id:
          description: The company id.
          readOnly: true
          type: string
        name:
          description: The company name.
          readOnly: true
          type: string
    TripHotelStay:
      type: object
      required:
      - checkinLocaleDate
      - checkoutLocaleDate
      - hotelId
      - place
      - rateId
      properties:
        bookingId:
          description: Booking id.
          readOnly: true
          type: string
        checkinLocaleDate:
          description: The checkin date of locale place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDate"
        checkoutLocaleDate:
          description: The checkout date of locale place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDate"
        hotelId:
          description: The hotel id.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        place:
          description: The hotel place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Place"
        rateId:
          description: Rate id.
          readOnly: true
          type: string
    TripProject:
      description: The trip project resource.
      required:
      - id
      - type
      - createdAt
      - rates
      - search
      - travelerIds
      properties:
        id:
          description: Unique identifier for the trip project.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - tripProject
        createdAt:
          description: Time at which the trip project was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        bookings:
          description: Array of booking resources.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/Booking"
        customFields:
          description: Array of custom fields.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/ResourceCustomField"
        hotelStays:
          description: Array of hotel stays.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/TripHotelStay"
        projectCodeId:
          description: The ID of the associated project code.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        rates:
          description: Array of rates.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/Rate"
        search:
          description: The search that created that trip project.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/TripSearch"
        transportLegs:
          description: Array of transports legs.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/TripTransportLeg"
        travelerIds:
          description: Array of user ids that participate to trip project.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/ResourceUUID"
    TripSearch:
      type: object
      required:
      - arrivalPlace
      - kind
      properties:
        arrivalLocaleDateTime:
          description: The checkin date and time when `kind` is `hotelOnly`. This
            field is not present when `kind` is `oneWay` or `roundTripWithHotel`.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDateTime"
        arrivalPlace:
          description: The destination place. This field is always present.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Place"
        departureLocaleDateTime:
          description: The departure date and time when `kind` is `oneWay` or `roundTripWithHotel`.
            This field is not present when `kind` is `hotelOnly`.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDateTime"
        departurePlace:
          description: The departure place when `kind` is `oneWay` or `roundTripWithHotel`.
            This field is not present when `kind` is `hotelOnly`.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/Place"
        kind:
          description: The search kind.
          readOnly: true
          type: string
          enum:
          - hotelOnly
          - oneWay
          - roundTripWithHotel
        returnLocaleDateTime:
          description: The return date and time when kind is `roundTripWithHotel`.
            The checkout date and time when `kind` is `hotelOnly`. This field is not
            present when `kind` is `oneWay`.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/LocaleDateTime"
    TripTransportLeg:
      type: object
      required:
      - kind
      - segments
      - summary
      properties:
        kind:
          description: The transport leg kind.
          readOnly: true
          type: string
          enum:
          - car
          - flight
          - rail
        segments:
          description: Transport leg segments.
          readOnly: true
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/TripTransportSegment"
        summary:
          description: The transport leg summary.
          readOnly: true
          type: string
    TripTransportSegment:
      type: object
      required:
      - id
      - canceled
      - arrival
      - departure
      - duration
      - operatingCarrier
      - rateId
      - transportNumber
      properties:
        id:
          description: The transport segment id.
          readOnly: true
          type: string
        arrival:
          description: Arrival place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/PlaceWithLocaleDateTime"
        bookingId:
          description: Booking id.
          readOnly: true
          type: string
        canceled:
          description: Whether the transport segment booking has been canceled.
          readOnly: true
          type: boolean
          default: false
        departure:
          description: Departure place.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/PlaceWithLocaleDateTime"
        marketingCarrier:
          description: The company marketing that segment.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/TripCompany"
        operatingCarrier:
          description: The company operating that segment.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/TripCompany"
        rateId:
          description: Rate id.
          readOnly: true
          type: string
        transportNumber:
          description: The transport number.
          readOnly: true
          type: string
    User:
      description: The user resource.
      allOf:
      - "$ref": "#/components/schemas/UserBase"
      - type: object
        properties:
          customFields:
            description: Array of custom fields.
            type: array
            items:
              allOf:
              - "$ref": "#/components/schemas/ResourceCustomField"
      required:
      - id
      - type
      - createdAt
      - archived
      - email
    UserReplace:
      description: The user resource.
      allOf:
      - "$ref": "#/components/schemas/UserPatch"
    UserPatch:
      description: The user fields to update.
      allOf:
      - "$ref": "#/components/schemas/UserBase"
      - type: object
        properties:
          customFields:
            description: Array of custom fields.
            type: array
            items:
              allOf:
              - "$ref": "#/components/schemas/ResourceCustomFieldInput"
    UserBase:
      description: The user fields.
      type: object
      properties:
        id:
          description: Unique identifier for the user.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - user
        createdAt:
          description: Time at which the user was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        archived:
          description: If true, then that user is archived.
          type: boolean
        billingProfileId:
          description: The ID of a billing profile associated with user.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        costCenterId:
          description: The ID of a cost center associated with user.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        dateOfBirth:
          description: |
            Date of birth (format: `YYYY-MM-DD`).

            Example: `1977-09-25`
          type: string
          example: '1977-09-25'
        email:
          description: User email.
          allOf:
          - "$ref": "#/components/schemas/Email"
        firstName:
          description: User first name.
          type: string
          example: John
        gender:
          description: User gender.
          type: string
          enum:
          - female
          - male
        lang:
          description: User language.
          type: string
          enum:
          - en
          - fr
          example: en
        lastName:
          description: User last name.
          type: string
          example: Smith
        managerId:
          description: User ID of manager.
          allOf:
          - "$ref": "#/components/schemas/ResourceUUID"
        phoneNumber:
          description: |
            User international phone number.

            Example: `+33 661328598`.

            The space between region code and phone number if mandatory.
          type: string
          example: "+33 661328598"
        roles:
          description: Array of user roles
          type: array
          items:
            type: string
            enum:
            - accountant
            - admin
            - manager
        travelerPrefs:
          description: Traveler preferences.
          type: object
          properties:
            flightSeatPosition:
              description: Prefered flight seat position.
              type: string
              enum:
              - aisle
              - any
              - window
        travelPolicyId:
          description: The ID of the travel policy associated to this user.
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
    Webhook:
      description: The webhook resource.
      allOf:
      - "$ref": "#/components/schemas/WebhookPatch"
      required:
      - id
      - type
      - createdAt
      - disabled
      - url
    WebhookReplace:
      description: The webhook resource.
      allOf:
      - "$ref": "#/components/schemas/WebhookPatch"
      required:
      - url
    WebhookPatch:
      description: The webhook fields to update.
      type: object
      properties:
        id:
          description: Unique identifier for the webhook.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ResourceBsonID"
        type:
          description: The resource type.
          readOnly: true
          type: string
          enum:
          - webhook
        createdAt:
          description: Time at which the webhook was created.
          readOnly: true
          allOf:
          - "$ref": "#/components/schemas/ServerDateTime"
        description:
          description: What this webhook is used for.
          type: string
        disabled:
          description: Webhook is disabled.
          type: boolean
          default: false
        events:
          description: The list of events kinds enabled for this endpoint.
          type: array
          items:
            allOf:
            - "$ref": "#/components/schemas/EventKind"
        url:
          description: The endpoint URL.
          type: string
          format: url
    WebhookCreateRespData:
      description: The created wehbook resource.
      allOf:
      - "$ref": "#/components/schemas/Webhook"
      - type: object
        properties:
          secret:
            description: The endpoint’s secret, used to generate webhook signatures.
              Only returned at creation.
            readOnly: true
            type: string
      required:
      - secret
    Error:
      type: object
      required:
      - code
      - message
      properties:
        code:
          description: Error code.
          type: string
          example: validationFailed
          enum:
          - badRequest
          - forbidden
          - internalError
          - invalidParam
          - notFound
          - notImpl
          - validationFailed
        message:
          description: Short, human-readable summary of the problem type.
          type: string
          example: Your request parameters didn't validate.
    ValidationError:
      description: Invalid data was sent
      allOf:
      - "$ref": "#/components/schemas/Error"
      - type: object
        properties:
          invalidFields:
            type: array
            items:
              type: object
              properties:
                field:
                  type: string
                  description: The field name. Dot notation is used for nested object
                    field names.
                message:
                  type: string
            example:
            - field: field1
              message: field1 is invalid
            - field: subObject.field2
              message: field2 is invalid
    ScimPatchOp:
      type: object
      properties:
        schemas:
          description: SCIM PatchOp Schema URI.
          type: array
          items:
            type: string
          example:
          - urn:ietf:params:scim:api:messages:2.0:PatchOp
        Operations:
          description: Patch operations.
          type: array
          items:
            type: object
            properties:
              op:
                description: 'Operation type.

                  '
                type: string
                enum:
                - add
                - replace
                - remove
              path:
                description: Target of the operation.
                type: string
              value:
                description: Attributes to replace or remove.
                type: object
    ScimUser:
      description: The user fields.
      type: object
      properties:
        schemas:
          description: List of one or more URIs that indicate included SCIM schemas
            that are used to indicate the attributes contained within resource
          type: array
          items:
            type: string
          example:
          - urn:ietf:params:scim:schemas:core:2.0:User
          - urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
          - urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User
        id:
          description: Unique identifier for the user.
          readOnly: true
          type: string
          example: 517fac99-af7e-4791-bc7f-20613bc9e591
        meta:
          description: User metadata.
          readOnly: true
          type: object
          properties:
            resourceType:
              description: The resource type.
              readOnly: true
              type: string
              enum:
              - User
            created:
              description: Time at which the user was created.
              readOnly: true
              type: string
              format: date-time
              example: '2019-09-25T07:35:42Z'
            lastModified:
              description: Time at which the user was updated.
              readOnly: true
              type: string
              format: date-time
              example: '2019-09-26T18:26:57Z'
            location:
              description: The URI of the user.
              readOnly: true
              type: string
              example: https://api.fairjungle.com/scim/v2/Users/517fac99-af7e-4791-bc7f-20613bc9e591
        active:
          description: If `false`, then that user is archived.
          type: boolean
          example: true
        emails:
          description: |
            User email.

            This field is mandatory.

            This array must contain only one email, with:
            - `"type": "work"`
            - `"primary": true`.
          type: array
          items:
            type: object
            properties:
              primary:
                description: Primary email (must always be `true`)
                type: boolean
              type:
                description: Email type (must always be `work`)
                type: string
                enum:
                - work
              value:
                description: Email value
                type: string
                example: jean.peuplu@example.com
        externalId:
          description: An identifier for the user as defined by the provisioning client.
          type: string
          example: 00u15yqwxsIVFisi6697
        name:
          description: Components of the user's name.
          type: object
          properties:
            familyName:
              description: User last name.
              type: string
              example: Peuplu
            givenName:
              description: User first name.
              type: string
              example: Jean
        phoneNumbers:
          description: |
            User phone number.

            Only one phone number is supported, with:
            - `"type": "work"`
            - `"primary": true`.
          type: array
          items:
            type: object
            properties:
              primary:
                description: Primary phone number (must always be `true`)
                type: boolean
              type:
                description: Phone number type (must always be `work`)
                type: string
                enum:
                - work
              value:
                description: |
                  Phone number value.

                  Must be in international format (eg: `+33 661328598`).

                  The space between region code and phone number if mandatory.
                type: string
                example: "+33 661328570"
        userName:
          description: User email, used to login on fairjungle.
          type: string
          format: email
        urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
          description: Enterprise user extension.
          type: object
          properties:
            costCenter:
              description: |
                Cost center name.

                **When creating or updating user:**

                The cost center must already exist on fairjungle, with the same unambiguous name.
              type: string
              example: 123 Yepppaaaa
            manager:
              description: |
                User manager.

                **When creating or updating user:**

                The manager must already exist on fairjungle with an id corresponding to the `value` field.
              type: object
              properties:
                displayName:
                  description: Manager display name.
                  type: string
                  example: Jean-Mich Muche
                "$ref":
                  description: Manager URI.
                  type: string
                  example: https://api.fairjungle.com/scim/v2/Users/8b6d84ae-0e09-451d-8a7f-1b8ea699da54
                value:
                  description: Fairjungle user id of the manager.
                  type: string
                  example: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
        urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User:
          description: Fairjungle user extension.
          type: object
          properties:
            billingProfile:
              description: |
                User billing profile.

                **When creating or updating user:**

                The billing profile must already exist on fairjungle:
                - if only `id` is provided, then billing profile is found by `id`
                - if only `name` is provided, then only one billing profile must already exist with this unambiguous name
                - if both `id` and `name` are provided, then billing profile is found by `id` and a check is performed to verify that `name` is the same
              type: object
              properties:
                id:
                  description: Billing profile id.
                  type: string
                  example: 6045f5ec1e48d1a57b80ef51
                name:
                  description: Billing profile name.
                  type: string
                  example: Executives
            costCenter:
              description: |
                User cost center.

                **When creating or updating user:**

                The cost center must already exist on fairjungle:
                - if only `id` is provided, then cost center is found by `id`
                - if only `name` is provided, then only one cost center must already exist with this unambiguous name
                - if both `id` and `name` are provided, then cost center is found by `id` and a check is performed to verify that `name` is the same
              type: object
              properties:
                id:
                  description: Cost center id.
                  type: string
                  example: 613b079e8172dba464e5a3b4
                name:
                  description: Cost center name.
                  type: string
                  example: 123 Yepppaaaa
            dateOfBirth:
              description: |
                Date of birth (format: `YYYY-MM-DD`).

                Example: `1977-09-25`
              type: string
              example: '1977-09-25'
            gender:
              description: User gender.
              type: string
              enum:
              - female
              - male
              example: male
            manager:
              description: |
                User manager.

                **When creating or updating user:**

                The manager must already exist on fairjungle:
                - if only `id` is provided, then manager is found by `id`
                - if only `email` is provided, then manager is found by `email`
                - if both `id` and `email` are provided, then manager is found by `id` and a check is performed to verify that `email` is the same
              type: object
              properties:
                id:
                  description: Manager id.
                  type: string
                  example: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
                email:
                  description: Manager email.
                  type: string
                  format: email
                  example: jean-mich.muche@example.com
            roles:
              description: User fairjungle roles.
              type: array
              items:
                type: object
                properties:
                  display:
                    description: |
                      Role display name.

                      **Ignored when creating or updating a user.**
                    type: string
                    example: Admin
                  value:
                    description: Role value
                    type: string
                    enum:
                    - accountant
                    - admin
                    - manager
                    example: admin
            travelPolicy:
              description: |
                User travel policy.

                **When creating or updating user:**

                The travel policy must already exist on fairjungle:
                - if only `id` is provided, then travel policy is found by `id`
                - if only `name` is provided, then only one travel policy must already exist with this unambiguous name
                - if both `id` and `name` are provided, then travel policy is found by `id` and a check is performed to verify that `name` is the same
              type: object
              properties:
                id:
                  description: Travel policy id.
                  type: string
                  example: 6062d3982aa781bc8a8a43d9
                name:
                  description: Travel policy name.
                  type: string
                  example: YOLO
    ScimError:
      type: object
      properties:
        schemas:
          description: SCIM Error Schema URI.
          type: array
          items:
            type: string
          example:
          - urn:ietf:params:scim:api:messages:2.0:Error
        detail:
          description: A detailed human-readable message.
          type: string
          example: Invalid 'email' value
        scimType:
          description: A SCIM detail error keyword.
          type: string
          enum:
          - invalidFilter
          - tooMany
          - uniqueness
          - mutability
          - invalidSyntax
          - invalidPath
          - noTarget
          - invalidValue
          - invalidVers
          - sensitive
          example: invalidValue
        status:
          description: The HTTP status code expressed as a JSON string.
          type: string
          example: '400'
  examples:
    listBillingOperationsResp200Example:
      summary: Billing operations
      value:
        data:
        - id: 5e725560cdb9f6125a4acb51
          type: billingOperation
          createdAt: '2020-03-18T17:07:44Z'
          amount:
            currency: EUR
            total: 5
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: offline
            date: '2020-03-18T16:52:23Z'
            kind: car
            reference: OSEF984LOL
            supplierName: Sixt
            transport:
              departure:
                city: Rennes
              departureLocaleDate: '2020-03-20'
              destination:
                city: Paris
              returnLocaleDate: '2020-03-23'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: hubert@mycorp.fr
              fullName: Hubert Bonisseur de La Bath
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-18T17:07:44Z'
          invoiceId: 5e5feb94509e9b5aac9db538
          operationType: car
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          refundId: 5e725560cdb9f6125a4acb50
          status: succeeded
          transactionKind: refund
        - id: 5e721c08b2d0c235c4d99f88
          type: billingOperation
          createdAt: '2020-03-18T13:03:04Z'
          amount:
            currency: EUR
            total: 154.63
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: online
            date: '2020-03-18T13:02:58Z'
            fairbudget:
              currency: EUR
              total: 302
            kind: flight
            reference: UXT6AZ
            supplierName: Air France
            transport:
              cabinClass: economy
              departure:
                airport: ORY
                city: Paris
              departureLocaleDate: '2020-03-22'
              destination:
                airport: BCN
                city: Barcelona
              itineraryType: roundTrip
              returnLocaleDate: '2020-03-26'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: hubert@mycorp.fr
              fullName: Hubert Bonisseur de La Bath
          date: '2020-03-18T13:03:04Z'
          description: Roundtrip flight - Hubert Bonisseur de La Bath - Paris > Barcelona
            - 22MAR2020
          invoiceId: 5e721c08b2d0c235c4d99f87
          operationType: flight
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          status: paid
          transactionKind: purchase
          tripProjectId: 982b935d-7ffc-4b15-8535-a9cc43ae40c7
        - id: 5e7103a0c2ac7d90eeb45560
          type: billingOperation
          createdAt: '2020-03-17T17:06:40Z'
          amount:
            currency: EUR
            total: 139
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: online
            date: '2020-03-17T16:52:23Z'
            fairbudget:
              currency: EUR
              total: 182
            kind: rail
            reference: OSEF984LOL
            supplierName: TGV
            transport:
              cabinClass: second
              departure:
                city: Paris
              departureLocaleDate: '2020-03-23'
              destination:
                city: Toulouse
              fareType: semiFlex
              returnLocaleDate: '2020-03-25'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: maurice@mycorp.fr
              fullName: Maurice Mercaillon
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-17T17:06:40Z'
          description: Roundtrip train - Maurice Mercaillon - Paris > Toulouse - 23MAR2020
          invoiceId: 5e7103a0c2ac7d90eeb4555f
          operationType: rail
          status: paid
          transactionKind: purchase
          tripProjectId: b4206e50-5e08-4285-82c4-7f39413a6c36
        - id: 5e70ffd5b5db0f5bb839a4ab
          type: billingOperation
          createdAt: '2020-03-17T16:50:29Z'
          amount:
            currency: EUR
            total: 110
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: offline
            date: '2020-03-17T16:52:23Z'
            kind: car
            reference: OSEF984LOL
            supplierName: Sixt
            transport:
              cabinClass: second
              departure:
                city: Milan
              departureLocaleDate: '2020-01-28'
              destination:
                city: Milan
              fareType: flex
              returnLocaleDate: '2020-01-30'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: marie-jo@mycorp.fr
              fullName: Marie-Jo Cotin
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-17T16:50:29Z'
          description: Car rental - Marie-Jo Cotin - Milan - 28MAR2020
          invoiceId: 5e5feb94509e9b5aac9db538
          operationType: car
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          status: paid
          transactionKind: purchase
        meta:
          pageKind: cursor
          limit: 10
          prevBefore: b3BlcmF0aW9uX2RhdGU6MTU4NDY5NTg2NTkwOQ==
          nextAfter: b3BlcmF0aW9uX2RhdGU6MTU4NDY5NTkwNDYzMw==
          order: asc
          sortBy: createdAt
    getBillingOperationResp200Example:
      summary: Billing operation
      value:
        data:
          id: 5e7103a0c2ac7d90eeb45560
          type: billingOperation
          createdAt: '2020-03-17T17:06:40Z'
          amount:
            currency: EUR
            total: 13
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: online
            date: '2020-03-17T16:52:23Z'
            fairbudget:
              currency: EUR
              total: 182
            kind: rail
            reference: OSEF984LOL
            supplierName: TGV
            transport:
              cabinClass: second
              departure:
                city: Paris
              departureLocaleDate: '2020-03-23'
              destination:
                city: Toulouse
              fareType: semiFlex
              returnLocaleDate: '2020-03-25'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: maurice@mycorp.fr
              fullName: Maurice Mercaillon
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-17T17:06:40Z'
          description: Roundtrip train - Maurice Mercaillon - Paris > Toulouse - 23MAR2020
          invoiceId: 5e7103a0c2ac7d90eeb4555f
          operationType: rail
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          status: paid
          transactionKind: purchase
          tripProjectId: b4206e50-5e08-4285-82c4-7f39413a6c36
    listBillingProfilesResp200Example:
      summary: Billing profiles
      value:
        data:
        - id: 5e7e09f76cb4333b7ec64774
          type: billingProfile
          createdAt: '2020-03-27T14:13:11Z'
          archived: false
          address:
            city: Paris
            country: FR
            line1: 13 Avenue du Président Wilson
            postalCode: '75116'
          companyName: MyCorp France
          email: jean@mycorp.fr
          lang: fr
          name: French division
          paymentMethodSummary: Credit card (****-4242)
          taxId: FR12345678912
        - id: 5e7defacfe02eda5c84b43c3
          type: billingProfile
          createdAt: '2020-03-27T12:21:00Z'
          archived: false
          address:
            city: Lisboa
            country: PT
            line1: Campo de Santa Clara
            postalCode: 1100-472
          companyName: MyCorp Portugal LDA
          email: juan@mycorp.pt
          lang: fr
          name: Portugal division
          paymentMethodSummary: SEPA direct debit (****2606)
          taxId: PT123456789
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 2
          order: asc
          sortBy: createdAt
    createBillingProfileReqExample:
      summary: Billing profile
      value:
        data:
          address:
            line1: Campo de Santa Clara
            postalCode: 1100-472
            city: Lisboa
            country: PT
          companyName: MyCorp Portugal LDA
          email: juan@mycorp.pt
          lang: en
          name: Portugal division
          taxId: PT123456789
    createBillingProfileResp201Example:
      summary: Billing profile created
      value:
        data:
          id: 5e7defacfe02eda5c84b43c3
          type: billingProfile
          createdAt: '2020-03-27T12:21:00Z'
          archived: false
          address:
            city: Lisboa
            country: PT
            line1: Campo de Santa Clara
            postalCode: 1100-470
          companyName: MyCorp Portugal
          email: juan@mycorp.pt
          lang: en
          name: Portugal division
          taxId: PT123456789
    getBillingProfileResp200Example:
      summary: Billing profile
      value:
        data:
          id: 5e7defacfe02eda5c84b43c3
          type: billingProfile
          createdAt: '2020-03-27T12:21:00Z'
          archived: false
          address:
            city: Lisboa
            country: PT
            line1: Campo de Santa Clara
            postalCode: 1100-470
          companyName: MyCorp Portugal
          email: juan@mycorp.pt
          lang: en
          name: Portugal division
          taxId: PT123456789
    patchBillingProfileReqExample:
      summary: Billing profile
      value:
        data:
          address:
            postalCode: 1100-472
          companyName: MyCorp Portugal LDA
    patchBillingProfileResp200Example:
      summary: Billing profile updated
      value:
        data:
          id: 5e7defacfe02eda5c84b43c3
          type: billingProfile
          createdAt: '2020-03-27T12:21:00Z'
          archived: false
          address:
            city: Lisboa
            country: PT
            line1: Campo de Santa Clara
            postalCode: 1100-472
          companyName: MyCorp Portugal LDA
          email: juan@mycorp.pt
          lang: en
          name: Portugal division
          taxId: PT123456789
    replaceBillingProfileReqExample:
      summary: Billing profile
      value:
        data:
          address:
            city: Lisboa
            country: PT
            line1: Campo de Santa Clara
            postalCode: 1100-472
          companyName: MyCorp Portugal LDA
          email: juan@mycorp.pt
          lang: en
          name: Portugal division
    replaceBillingProfileResp200Example:
      summary: Billing profile updated
      value:
        data:
          id: 5e7defacfe02eda5c84b43c3
          type: billingProfile
          createdAt: '2020-03-27T12:21:00Z'
          archived: false
          address:
            city: Lisboa
            country: PT
            line1: Campo de Santa Clara
            postalCode: 1100-472
          companyName: MyCorp Portugal LDA
          email: juan@mycorp.pt
          lang: en
          name: Portugal division
    deleteBillingProfileResp200Example:
      summary: Billing profile deleted
      value:
        data:
          id: 5e7defacfe02eda5c84b43c3
          type: billingProfile
          createdAt: '2020-03-27T12:21:00Z'
          archived: false
          address:
            city: Lisboa
            country: PT
            line1: Campo de Santa Clara
            postalCode: 1100-472
          companyName: MyCorp Portugal LDA
          email: juan@mycorp.pt
          lang: en
          name: Portugal division
          taxId: PT123456789
    listCostCentersResp200Example:
      summary: Cost centers
      value:
        data:
        - id: 5e7e0c826cb4333b7ec64778
          type: costCenter
          createdAt: '2020-03-27T14:24:02Z'
          archived: false
          name: Management
        - id: 5e7e0c9a6cb4333b7ec64779
          type: costCenter
          createdAt: '2020-03-27T14:24:26Z'
          archived: false
          name: Marketing
        - id: 5e7e0c796cb4333b7ec64777
          type: costCenter
          createdAt: '2020-03-27T14:23:53Z'
          archived: false
          name: R&D
        - id: 5d89c6180bd67df9182f3356
          type: costCenter
          createdAt: '2019-09-24T07:30:32Z'
          archived: false
          name: default
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 4
          order: asc
          sortBy: createdAt
    createCostCenterReqExample:
      summary: Cost center
      value:
        data:
          name: HR
    createCostCenterResp201Example:
      summary: Cost center created
      value:
        data:
          id: 5e7e0bfe6cb4333b7ec64776
          type: costCenter
          createdAt: '2020-03-27T14:21:50Z'
          archived: false
          name: HR
    getCostCenterResp200Example:
      summary: Cost center
      value:
        data:
          id: 5e7e0bfe6cb4333b7ec64776
          type: costCenter
          createdAt: '2020-03-27T14:21:50Z'
          archived: false
          name: HR
    patchCostCenterReqExample:
      summary: Cost center
      value:
        data:
          name: HR & Finance
    patchCostCenterResp200Example:
      summary: Cost center updated
      value:
        data:
          id: 5e7e0bfe6cb4333b7ec64776
          type: costCenter
          createdAt: '2020-03-27T14:21:50Z'
          archived: false
          name: HR & Finance
    replaceCostCenterReqExample:
      summary: Cost center
      value:
        data:
          name: HR & Finance
    replaceCostCenterResp200Example:
      summary: Cost center updated
      value:
        data:
          id: 5e7e0bfe6cb4333b7ec64776
          type: costCenter
          createdAt: '2020-03-27T14:21:50Z'
          archived: false
          name: HR & Finance
    deleteCostCenterResp200Example:
      summary: Cost center deleted
      value:
        data:
          id: 5e7e0bfe6cb4333b7ec64776
          type: costCenter
          createdAt: '2020-03-27T14:21:50Z'
          archived: false
          name: HR & Finance
    listCustomFieldsResp200Example:
      summary: Custom fields
      value:
        data:
        - id: 5fc5127ec00e48351c12b6de
          type: customField
          createdAt: '2020-12-16T09:55:35Z'
          dataType: text
          description: A free text for your business unit
          disabled: false
          mandatory: false
          name: Business unit tag
          resourceType: tripProject
        - id: 5fce2fc333d1f42f6ee71dba
          type: customField
          createdAt: '2020-12-16T09:47:41Z'
          dataType: option
          description: Every trip project should be associated to a budget
          disabled: false
          mandatory: false
          name: Budget center
          resourceType: tripProject
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 2
          order: asc
          sortBy: createdAt
    createCustomFieldReqExample:
      summary: Custom field
      value:
        data:
          dataType: option
          description: Every trip project should be associated to a budget
          disabled: false
          name: Budget code
          resourceType: tripProject
    createCustomFieldResp201Example:
      summary: Custom field created
      value:
        data:
          id: 5fce2fc333d1f42f6ee71dba
          type: customField
          createdAt: '2020-12-16T09:47:41Z'
          dataType: option
          description: Every trip project should be associated to a budget
          disabled: false
          mandatory: false
          name: Budget code
          resourceType: tripProject
    getCustomFieldResp200Example:
      summary: Custom field
      value:
        data:
          id: 5fce2fc333d1f42f6ee71dba
          type: customField
          createdAt: '2020-12-16T09:47:41Z'
          dataType: option
          description: Every trip project should be associated to a budget
          disabled: false
          mandatory: false
          name: Budget code
          resourceType: tripProject
    patchCustomFieldReqExample:
      summary: Custom field
      value:
        data:
          name: Budget center
    patchCustomFieldResp200Example:
      summary: Custom field updated
      value:
        data:
          id: 5fce2fc333d1f42f6ee71dba
          type: customField
          createdAt: '2020-12-16T09:47:41Z'
          dataType: option
          description: Every trip project should be associated to a budget
          disabled: false
          mandatory: false
          name: Budget center
          resourceType: tripProject
    replaceCustomFieldReqExample:
      summary: Custom field
      value:
        data:
          dataType: option
          description: Every trip project should be associated to a budget
          name: Budget center
    replaceCustomFieldResp200Example:
      summary: Custom field updated
      value:
        data:
          id: 5fce2fc333d1f42f6ee71dba
          type: customField
          createdAt: '2020-12-16T09:47:41Z'
          dataType: option
          description: Every trip project should be associated to a budget
          disabled: false
          mandatory: false
          name: Budget center
          resourceType: tripProject
    deleteCustomFieldResp200Example:
      summary: Custom field deleted
      value:
        data:
          id: 5fce2fc333d1f42f6ee71dba
          type: customField
          createdAt: '2020-12-16T09:47:41Z'
          dataType: option
          description: Every trip project should be associated to a budget
          disabled: false
          mandatory: false
          name: Budget center
          resourceType: tripProject
    listCustomFieldOptionsResp200Example:
      summary: Custom field options
      value:
        data:
        - id: 5fc4bb0eb8de9273ca904b12
          type: customFieldOption
          createdAt: '2020-12-16T10:03:28Z'
          customFieldId: 5fce2fc333d1f42f6ee71dba
          data: MRA672
          disabled: false
        - id: 5fc5127ec00e48351c12b6e2
          type: customFieldOption
          createdAt: '2020-12-16T09:52:08Z'
          customFieldId: 5fce2fc333d1f42f6ee71dba
          data: BRU499
          disabled: false
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 2
          order: asc
          sortBy: createdAt
    createCustomFieldOptionReqExample:
      summary: Custom field
      value:
        data:
          data: BRU425
    createCustomFieldOptionResp201Example:
      summary: Custom field option created
      value:
        data:
          id: 5fc5127ec00e48351c12b6e2
          type: customFieldOption
          createdAt: '2020-12-16T09:52:08Z'
          customFieldId: 5fce2fc333d1f42f6ee71dba
          data: BRU425
          disabled: false
    getCustomFieldOptionResp200Example:
      summary: Custom field option
      value:
        data:
          id: 5fc5127ec00e48351c12b6e2
          type: customFieldOption
          createdAt: '2020-12-16T09:52:08Z'
          customFieldId: 5fce2fc333d1f42f6ee71dba
          data: BRU425
          disabled: false
    patchCustomFieldOptionReqExample:
      summary: Custom field option
      value:
        data:
          data: BRU499
    patchCustomFieldOptionResp200Example:
      summary: Custom field option updated
      value:
        data:
          id: 5fc5127ec00e48351c12b6e2
          type: customFieldOption
          createdAt: '2020-12-16T09:52:08Z'
          customFieldId: 5fce2fc333d1f42f6ee71dba
          data: BRU499
          disabled: false
    replaceCustomFieldOptionReqExample:
      summary: Custom field option
      value:
        data:
          data: BRU499
    replaceCustomFieldOptionResp200Example:
      summary: Custom field option updated
      value:
        data:
          id: 5fc5127ec00e48351c12b6e2
          type: customFieldOption
          createdAt: '2020-12-16T09:52:08Z'
          customFieldId: 5fce2fc333d1f42f6ee71dba
          data: BRU499
          disabled: false
    deleteCustomFieldOptionResp200Example:
      summary: Custom field option deleted
      value:
        data:
          id: 5fc5127ec00e48351c12b6e2
          type: customFieldOption
          createdAt: '2020-12-16T09:52:08Z'
          customFieldId: 5fce2fc333d1f42f6ee71dba
          data: BRU499
          disabled: false
    listDisputesResp200Example:
      summary: Disputes
      value:
        data:
        - id: 5e67b70ec22d3e295d4fa56f
          type: dispute
          createdAt: '2020-03-10T15:49:34Z'
          amount:
            currency: EUR
            total: 157.63
          invoiceId: 5e67b709c22d3e295d4fa56c
          reason: general
          status: underReview
        - id: 5e67b597f1fd724c3b30cc85
          type: dispute
          createdAt: '2020-03-10T15:43:19Z'
          amount:
            currency: EUR
            total: 161.63
          invoiceId: 5e67b58ff1fd724c3b30cc82
          reason: customerInitiated
          status: lost
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 2
          order: asc
          sortBy: createdAt
    getDisputeResp200Example:
      summary: Dispute
      value:
        data:
          id: 5e67b597f1fd724c3b30cc85
          type: dispute
          createdAt: '2020-03-10T15:43:19Z'
          amount:
            currency: EUR
            total: 161.63
          invoiceId: 5e67b58ff1fd724c3b30cc82
          reason: customerInitiated
          status: lost
    listEventsResp200Example:
      summary: Events
      value:
        data:
        - id: 5def57af52ce567ff727db33
          type: event
          createdAt: '2020-09-15T13:58:53Z'
          data:
            createdAt: '2020-09-15T13:58:53Z'
            id: 5f60c89d1bfd3165e7460ab7
            name: Finance
            archived: false
            type: costCenter
          kind: costCenter.created
        - id: 5e7a34deb3f38ff4d7dbd888
          type: event
          createdAt: '2020-09-15T13:59:26Z'
          data:
            createdAt: '2020-09-15T13:58:53Z'
            id: 5f60c89d1bfd3165e7460ab7
            name: HR
            archived: false
            type: costCenter
          kind: costCenter.updated
          previousAttributes:
            name: Finance
        meta:
          pageKind: cursor
          limit: 10
          prevBefore: ZG9jX2lkOjVkZWY1N2FmNTJjZTU2N2ZmNzI3ZGIzMw==
          nextAfter: ZG9jX2lkOjVlN2EzNGRlYjNmMzhmZjRkN2RiZDg4OA==
          order: asc
    getEventResp200Example:
      summary: Event
      value:
        data:
          id: 5e7a34deb3f38ff4d7dbd888
          type: event
          createdAt: '2020-09-15T13:59:26Z'
          data:
            createdAt: '2020-09-15T13:58:53Z'
            id: 5f60c89d1bfd3165e7460ab7
            name: HR
            archived: false
            type: costCenter
          kind: costCenter.updated
          previousAttributes:
            name: Finance
    listInvoicesResp200Example:
      summary: Invoices
      value:
        data:
        - id: 5d976961a24b0c1726f65bd2
          type: invoice
          createdAt: '2020-01-04T15:46:41Z'
          amount:
            currency: EUR
            total: 4614.83
          billingOperationsCount: 2
          billingProfileId: 5de7bc72bf882f3bb31619bf
          description: Roundtrip flight - Hubert Bonisseur de La Bath - Paris > Tokyo
            Narita - 15FEB2020
          kind: booking
          paymentMethodSummary: Credit card (****-4242)
          paymentReference: Fairjungle iwlb7idmr
          pdf: https://pay.stripe.com/invoice/acct_1E5DdUKVYdhVumja/invst_HwNrztuJKDFGuDpZ3Ml7dvD1tAXLaoT/pdf
          reference: ED445B10-0006
          status: open
          url: https://pay.stripe.com/invoice/invst_5oNgkKhhqLqY6ffRg0GgHfuhfx
        - id: 5e25b20e95a489ba33ae0e56
          type: invoice
          createdAt: '2020-01-31T23:58:38Z'
          amount:
            currency: EUR
            total: 653.87
          billingOperationsCount: 1
          billingProfileId: 5de7bc72bf882f3bb31619c0
          description: Monthly invoice - February 2020
          kind: booking
          paymentMethodSummary: SEPA direct debit (****2606)
          paymentReference: Fairjungle o8oi5mswg
          reference: 6070C440-0013
          status: paid
          url: https://pay.stripe.com/invoice/invst_REw7yB9nNTHxWofcpdfvhZ79Pt
        meta:
          pageKind: cursor
          limit: 10
          prevBefore: ZG9jX2lkOjVkYWYwOWVmZDI3YTE5ODc0YTVkMTQ3Ng==
          nextAfter: ZG9jX2lkOjVkOTc2YWEyYTI0YjBjMTcyNmY2NWJkNQ==
          order: asc
    getInvoiceResp200Example:
      summary: Invoice
      value:
        data:
          id: 5d976961a24b0c1726f65bd2
          type: invoice
          createdAt: '2020-01-04T15:46:41Z'
          amount:
            currency: EUR
            total: 4614.83
          billingOperationsCount: 2
          billingProfileId: 5de7bc72bf882f3bb31619bf
          description: Roundtrip flight - Hubert Bonisseur de La Bath - Paris > Tokyo
            Narita - 15FEB2020
          kind: booking
          paymentMethodSummary: Credit card (****-4242)
          paymentReference: Fairjungle iwlb7idmr
          pdf: https://pay.stripe.com/invoice/acct_1E5DdUKVYdhVumja/invst_HwNrztuJKDFGuDpZ3Ml7dvD1tAXLaoT/pdf
          reference: ED445B10-0006
          status: open
          url: https://pay.stripe.com/invoice/invst_5oNgkKhhqLqY6ffRg0GgHfuhfx
    listInvoiceBillingOperationsResp200Example:
      summary: Invoice billing operations
      value:
        data:
        - id: 5e725560cdb9f6125a4acb51
          type: billingOperation
          createdAt: '2020-03-18T17:07:44Z'
          amount:
            currency: EUR
            total: 5
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: offline
            date: '2020-03-18T16:52:23Z'
            kind: car
            reference: OSEF984LOL
            supplierName: Sixt
            transport:
              cabinClass: second
              departure:
                city: Rennes
              departureLocaleDate: '2020-03-20'
              destination:
                city: Paris
              fareType: flex
              returnLocaleDate: '2020-03-23'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: hubert@mycorp.fr
              fullName: Hubert Bonisseur de La Bath
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-18T17:07:44Z'
          invoiceId: 5e5feb94509e9b5aac9db538
          operationType: car
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          refundId: 5e725560cdb9f6125a4acb50
          status: succeeded
          transactionKind: refund
        - id: 5e70ffd5b5db0f5bb839a4ab
          type: billingOperation
          createdAt: '2020-03-17T16:50:29Z'
          amount:
            currency: EUR
            total: 110
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: offline
            date: '2020-03-18T16:52:23Z'
            kind: car
            reference: OSEF984LOL
            supplierName: Sixt
            transport:
              cabinClass: second
              departure:
                city: Milan
              departureLocaleDate: '2020-03-28'
              destination:
                city: Milan
              fareType: flex
              returnLocaleDate: '2020-03-30'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: marie-jo@mycorp.fr
              fullName: Marie-Jo Cotin
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-17T16:50:29Z'
          description: Car rental - Marie-Jo Cotin - Milan - 28MAR2020
          invoiceId: 5e5feb94509e9b5aac9db538
          operationType: car
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          status: paid
          transactionKind: purchase
        meta:
          pageKind: cursor
          limit: 10
          prevBefore: b3BlcmF0aW9uX2RhdGU6MTU4NDY5NTg2NTkwOQ==
          nextAfter: b3BlcmF0aW9uX2RhdGU6MTU4NDY5NTkwNDYzMw==
          order: asc
          sortBy: createdAt
    listProjectCodesResp200Example:
      summary: Project codes
      value:
        data:
        - id: 5e7e25b06cb4333b7ec6477e
          type: projectCode
          createdAt: '2020-03-27T16:11:28Z'
          archived: false
          code: GLOBAL-TRAIN
          confidential: false
          name: Gloabl Training
        - id: 5e7e253b6cb4333b7ec6477c
          type: projectCode
          createdAt: '2020-03-27T16:09:31Z'
          archived: false
          code: GB-TRAV1
          confidential: false
          name: Great Britain - Travel
        - id: 5e7e25326cb4333b7ec6477b
          type: projectCode
          createdAt: '2020-03-27T16:09:22Z'
          archived: false
          code: GB-TRAV2
          confidential: false
          name: Great Britain - Travel 2
        - id: 5d9eddbda93ab745e1f00cc7
          type: projectCode
          createdAt: '2019-10-10T07:29:01Z'
          archived: false
          code: CODEZZ2
          confidential: false
          name: Security - Cloud Infrastructure (private)
        - id: 5e7e258e6cb4333b7ec6477d
          type: projectCode
          createdAt: '2020-03-27T16:10:54Z'
          archived: false
          code: ES-EX
          confidential: false
          name: Spain - Expansion
        - id: 5e7e25e66cb4333b7ec6477f
          type: projectCode
          createdAt: '2020-03-27T16:12:22Z'
          archived: false
          code: WORLD-OWN
          confidential: false
          name: World domination
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 6
          order: asc
          sortBy: createdAt
    createProjectCodeReqExample:
      summary: Project code
      value:
        data:
          code: SECU-CLOUD
          confidential: false
          name: Security - Cloud Infra
    createProjectCodeResp201Example:
      summary: Project code created
      value:
        data:
          id: 5e7e24606cb4333b7ec6477a
          type: projectCode
          createdAt: '2020-03-27T16:05:52Z'
          archived: false
          code: SECU-CLOUD
          confidential: false
          name: Security - Cloud Infra
    getProjectCodeResp200Example:
      summary: Project code
      value:
        data:
          id: 5e7e24606cb4333b7ec6477a
          type: projectCode
          createdAt: '2020-03-27T16:05:52Z'
          archived: false
          code: SECU-CLOUD
          confidential: false
          name: Security - Cloud Infra
    patchProjectCodeReqExample:
      summary: Project code
      value:
        data:
          name: Security - Cloud Infrastructure (private)
    patchProjectCodeResp200Example:
      summary: Project code updated
      value:
        data:
          id: 5e7e24606cb4333b7ec6477a
          type: projectCode
          createdAt: '2020-03-27T16:05:52Z'
          archived: false
          code: SECU-CLOUD
          confidential: false
          name: Security - Cloud Infrastructure (private)
    replaceProjectCodeReqExample:
      summary: Project code
      value:
        data:
          code: SECU-CLOUD
          confidential: false
          name: Security - Cloud Infrastructure (private)
    replaceProjectCodeResp200Example:
      summary: Project code updated
      value:
        data:
          id: 5e7e24606cb4333b7ec6477a
          type: projectCode
          createdAt: '2020-03-27T16:05:52Z'
          archived: false
          code: SECU-CLOUD
          confidential: false
          name: Security - Cloud Infrastructure (private)
    deleteProjectCodeResp200Example:
      summary: Project code deleted
      value:
        data:
          id: 5e7e24606cb4333b7ec6477a
          type: projectCode
          createdAt: '2020-03-27T16:05:52Z'
          archived: false
          code: SECU-CLOUD
          confidential: false
          name: Security - Cloud Infrastructure (private)
    listRefundsResp200Example:
      summary: Refunds
      value:
        data:
        - id: 5e725560cdb9f6125a4acb50
          type: refund
          createdAt: '2020-03-18T17:07:44Z'
          amount:
            currency: EUR
            total: 5
          invoiceId: 5e5feb94509e9b5aac9db538
          status: succeeded
        - id: 5e6792e841bcabcc468bb21b
          type: refund
          createdAt: '2020-03-10T13:15:20Z'
          amount:
            currency: EUR
            total: 5
          invoiceId: 5e5feb94509e9b5aac9db538
          status: succeeded
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 2
          order: asc
          sortBy: createdAt
    getRefundResp200Example:
      summary: Refund
      value:
        data:
          id: 5e6792e841bcabcc468bb21b
          type: refund
          createdAt: '2020-03-10T13:15:20Z'
          amount:
            currency: EUR
            total: 5
          invoiceId: 5e5feb94509e9b5aac9db538
          status: succeeded
    listTravelPoliciesResp200Example:
      summary: Travel policies
      value:
        data:
        - id: 6062daf9769c833115147875
          type: travelPolicy
          createdAt: '2021-03-30T08:02:01Z'
          control: none
          default: true
          hotelBudget:
            kind: strict
          name: Default
          transportBudget:
            flight:
              kind: strict
            rail:
              kind: strict
        - id: 60642c74b06ede6881c7ceb3
          type: travelPolicy
          createdAt: '2021-03-31T08:01:56Z'
          control: none
          default: false
          hotelBudget:
            custom:
              flexibilityPercentage: 20
            kind: custom
          name: Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 2
          order: asc
          sortBy: createdAt
    createTravelPolicyReqExample:
      summary: Travel policy
      value:
        data:
          control: none
          hotelBudget:
            custom:
              flexibilityPercentage: 20
            kind: custom
          name: Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
    createTravelPolicyResp201Example:
      summary: Travel policy created
      value:
        data:
          id: 60642c74b06ede6881c7ceb3
          type: travelPolicy
          createdAt: '2021-03-31T08:01:56Z'
          control: none
          default: false
          hotelBudget:
            custom:
              flexibilityPercentage: 20
            kind: custom
          name: Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
    getTravelPolicyResp200Example:
      summary: Travel policy
      value:
        data:
          id: 60642c74b06ede6881c7ceb3
          type: travelPolicy
          createdAt: '2021-03-31T08:01:56Z'
          control: none
          default: false
          hotelBudget:
            custom:
              flexibilityPercentage: 20
            kind: custom
          name: Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
    patchTravelPolicyReqExample:
      summary: Travel policy
      value:
        data:
          name: The Executives
          hotelBudget:
            custom: 
            kind: strict
    patchTravelPolicyResp200Example:
      summary: Travel policy updated
      value:
        data:
          id: 60642c74b06ede6881c7ceb3
          type: travelPolicy
          createdAt: '2021-03-31T08:01:56Z'
          control: none
          default: false
          hotelBudget:
            kind: strict
          name: The Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
    replaceTravelPolicyReqExample:
      summary: Travel policy
      value:
        data:
          control: none
          default: false
          hotelBudget:
            kind: strict
          name: The Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
    replaceTravelPolicyResp200Example:
      summary: Travel policy updated
      value:
        data:
          id: 60642c74b06ede6881c7ceb3
          type: travelPolicy
          createdAt: '2021-03-31T08:01:56Z'
          control: none
          default: false
          hotelBudget:
            kind: strict
          name: The Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
    deleteTravelPolicyResp200Example:
      summary: Travel policy deleted
      value:
        data:
          id: 60642c74b06ede6881c7ceb3
          type: travelPolicy
          createdAt: '2021-03-31T08:01:56Z'
          control: none
          default: false
          hotelBudget:
            kind: strict
          name: The Executives
          transportBudget:
            common:
              flexibilityPercentage: 15
            flight:
              custom:
                longHaul:
                  cabinClass: business
                lowCostWhenPossible: true
                mediumHaul:
                  cabinClass: premiumEco
                  maxDuration: 180
                shortHaul:
                  cabinClass: economy
                  maxDuration: 60
              kind: custom
            rail:
              custom:
                fareType: semiFlex
                longHaul:
                  cabinClass: first
                shortHaul:
                  cabinClass: second
                  maxDuration: 120
              kind: custom
    listTripProjectsResp200Example:
      summary: Trip projects
      value:
        data:
        - id: 542e6004-cb56-48e8-8036-5bbc3f3f3626
          type: tripProject
          createdAt: '2020-06-26T08:49:06Z'
          bookings:
          - id: ee14b64f-ce37-428e-a121-52e58004b077
            type: booking
            createdAt: '2020-06-26T08:53:53Z'
            canceled: false
            kind: flight
            rateId: efe4215b-fc69-4621-9bdc-f53543587dd4___amadeus-itinerary-economy-cab6b2d2-b2f2-4502-a2fd-d32b9a3a1e71
            reference: N2GMFL
            status: succeeded
            tripProjectId: 542e6004-cb56-48e8-8036-5bbc3f3f3626
          - id: 5ef5b7ada1890759e7f229d0
            type: booking
            createdAt: '2020-06-26T08:54:05Z'
            canceled: false
            kind: hotel
            rateId: 5ef5b6a7a1890759e7f229cf
            reference: 5ef5b7ada1890759e7f229d1
            status: succeeded
            tripProjectId: 542e6004-cb56-48e8-8036-5bbc3f3f3626
          customFields:
          - customFieldId: 5fc5127ec00e48351c12b6de
            name: Business unit tag
            values:
            - data: Kervignac
          - customFieldId: 5fce2fc333d1f42f6ee71dba
            name: Budget center
            values:
            - customFieldOptionId: 5fc5127ec00e48351c12b6e2
              data: BRU499
          hotelStays:
          - bookingId: 5ef5b7ada1890759e7f229d0
            checkinLocaleDate: '2020-10-29'
            checkoutLocaleDate: '2020-10-30'
            hotelId: 5cee58325621bddc666e0604
            place:
              geoloc:
                lat: 40.418667
                lng: -3.704013
              name: Liabeny
              type: hotel
            rateId: 5ef5b6a7a1890759e7f229cf
          rates:
          - id: efe4215b-fc69-4621-9bdc-f53543587dd4___amadeus-itinerary-economy-cab6b2d2-b2f2-4502-a2fd-d32b9a3a1e71
            type: rate
            createdAt: '2020-06-26T08:49:06Z'
            kind: flight
            price:
              currency: EUR
              total: 266.04
          - id: 5ef5b6a7a1890759e7f229cf
            type: rate
            createdAt: '2020-06-26T08:49:06Z'
            kind: hotel
            price:
              currency: EUR
              total: 79.8
          search:
            arrivalPlace:
              country:
                code: ES
                name: Spain
              geoloc:
                lat: 40.4167754
                lng: -3.7037902
              name: Madrid
              type: address
            departureLocaleDateTime: '2020-10-29T10:00:00'
            departurePlace:
              country:
                code: FR
                name: France
              geoloc:
                lat: 48.856614
                lng: 2.3522219
              name: Paris
              type: address
            kind: roundTripWithHotel
            returnLocaleDateTime: '2020-10-30T10:00:00'
          transportLegs:
          - kind: flight
            segments:
            - id: '15'
              arrival:
                localeDateTime: '2020-10-29T11:40:00'
                place:
                  airport:
                    iataCode: MAD
                  country:
                    code: ES
                    name: Spain
                  geoloc:
                    lat: 40.472222
                    lng: -3.563333
                  name: MAD
                  type: airport
              bookingId: ee14b64f-ce37-428e-a121-52e58004b077
              canceled: false
              departure:
                localeDateTime: '2020-10-29T09:35:00'
                place:
                  airport:
                    iataCode: CDG
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: CDG
                  type: airport
              duration: 125
              operatingCarrier:
                id: AF
                name: Air France
              rateId: efe4215b-fc69-4621-9bdc-f53543587dd4___amadeus-itinerary-economy-cab6b2d2-b2f2-4502-a2fd-d32b9a3a1e71
              transportNumber: '1300'
            summary: From CDG to MAD
          - kind: flight
            segments:
            - id: '92'
              arrival:
                localeDateTime: '2020-10-30T12:05:00'
                place:
                  airport:
                    iataCode: CDG
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: CDG
                  type: airport
              bookingId: ee14b64f-ce37-428e-a121-52e58004b077
              canceled: false
              departure:
                localeDateTime: '2020-10-30T09:55:00'
                place:
                  airport:
                    iataCode: MAD
                  country:
                    code: ES
                    name: Spain
                  geoloc:
                    lat: 40.472222
                    lng: -3.563333
                  name: MAD
                  type: airport
              duration: 130
              operatingCarrier:
                id: AF
                name: Air France
              rateId: efe4215b-fc69-4621-9bdc-f53543587dd4___amadeus-itinerary-economy-cab6b2d2-b2f2-4502-a2fd-d32b9a3a1e71
              transportNumber: '1001'
            summary: From MAD to CDG
          travelerIds:
          - 35c93884-5cca-4e72-98ff-eb52f611cb21
        - id: 38c860a5-e8b3-4eb4-ad0d-3c3f123bffe3
          type: tripProject
          createdAt: '2020-06-26T08:18:03Z'
          customFields:
          - customFieldId: 5fce2fc333d1f42f6ee71dba
            name: Budget center
            values:
            - customFieldOptionId: 5fc4bb0eb8de9273ca904b12
              data: MRA672
          hotelStays:
          - checkinLocaleDate: '2020-10-26'
            checkoutLocaleDate: '2020-10-27'
            hotelId: 5cee58325621bddc666e0604
            place:
              geoloc:
                lat: 40.418667
                lng: -3.704013
              name: Liabeny
              type: hotel
            rateId: 5ef5af60a1890759e7f1d9a9
          rates:
          - id: dd447fad-c27c-4eba-ab55-d6d6f4a3844a___amadeus-itinerary-economy-09f99581-81e2-4ed0-9389-1ee6b26e2668
            type: rate
            createdAt: '2020-06-26T08:18:03Z'
            kind: flight
            price:
              currency: EUR
              total: 195.85
          - id: 5ef5af60a1890759e7f1d9a9
            type: rate
            createdAt: '2020-06-26T08:18:03Z'
            kind: hotel
            price:
              currency: EUR
              total: 79.8
          search:
            arrivalPlace:
              country:
                code: ES
                name: Spain
              geoloc:
                lat: 40.4167754
                lng: -3.7037902
              name: Madrid
              type: address
            departureLocaleDateTime: '2020-10-26T10:00:00'
            departurePlace:
              country:
                code: FR
                name: France
              geoloc:
                lat: 48.856614
                lng: 2.3522219
              name: Paris
              type: address
            kind: roundTripWithHotel
            returnLocaleDateTime: '2020-10-27T10:00:00'
          transportLegs:
          - kind: flight
            segments:
            - id: '12'
              arrival:
                localeDateTime: '2020-10-26T12:40:00'
                place:
                  airport:
                    iataCode: MAD
                  name: MAD
                  type: airport
              canceled: false
              departure:
                localeDateTime: '2020-10-26T10:35:00'
                place:
                  airport:
                    iataCode: ORY
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: ORY
                  type: airport
              duration: 125
              operatingCarrier:
                id: IB
                name: Iberia Airlines
              rateId: dd447fad-c27c-4eba-ab55-d6d6f4a3844a___amadeus-itinerary-economy-09f99581-81e2-4ed0-9389-1ee6b26e2668
              transportNumber: '3403'
            summary: From ORY to MAD
          - kind: flight
            segments:
            - id: '88'
              arrival:
                localeDateTime: '2020-10-27T11:45:00'
                place:
                  airport:
                    iataCode: ORY
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: ORY
                  type: airport
              canceled: false
              departure:
                localeDateTime: '2020-10-27T09:45:00'
                place:
                  airport:
                    iataCode: MAD
                  name: MAD
                  type: airport
              duration: 120
              operatingCarrier:
                id: IB
                name: Iberia Airlines
              rateId: dd447fad-c27c-4eba-ab55-d6d6f4a3844a___amadeus-itinerary-economy-09f99581-81e2-4ed0-9389-1ee6b26e2668
              transportNumber: '3436'
            summary: From MAD to ORY
          travelerIds:
          - 35c93884-5cca-4e72-98ff-eb52f611cb21
        meta:
          pageKind: offset
          limit: 2
          offset: 16
          total: 612
          order: asc
          sortBy: createdAt
    getTripProjectResp200Example:
      summary: Trip project
      value:
        data:
          id: d5f57c1f-dc33-4632-a5aa-681367685daf
          type: tripProject
          createdAt: '2020-06-26T08:24:45Z'
          bookings:
          - id: 8528765e-792d-4180-941b-dabce29e7638
            type: booking
            createdAt: '2020-06-26T08:27:10Z'
            canceled: false
            kind: flight
            rateId: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
            reference: N2BYRD
            status: succeeded
            tripProjectId: d5f57c1f-dc33-4632-a5aa-681367685daf
          - id: 5ef5b168a1890759e7f1f4fb
            type: booking
            createdAt: '2020-06-26T08:27:20Z'
            canceled: false
            kind: hotel
            rateId: 5ef5b10ca1890759e7f1f4fa
            reference: 5ef5b168a1890759e7f1f4fc
            status: succeeded
            tripProjectId: d5f57c1f-dc33-4632-a5aa-681367685daf
          customFields:
          - customFieldId: 5fc5127ec00e48351c12b6de
            name: Business unit tag
            values:
            - data: Kervignac
          - customFieldId: 5fce2fc333d1f42f6ee71dba
            name: Budget center
            values:
            - customFieldOptionId: 5fc5127ec00e48351c12b6e2
              data: BRU499
          hotelStays:
          - bookingId: 5ef5b168a1890759e7f1f4fb
            checkinLocaleDate: '2020-10-26'
            checkoutLocaleDate: '2020-10-27'
            hotelId: 5cee58325621bddc666e0604
            place:
              geoloc:
                lat: 40.418667
                lng: -3.704013
              name: Liabeny
              type: hotel
            rateId: 5ef5b10ca1890759e7f1f4fa
          rates:
          - id: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
            type: rate
            createdAt: '2020-06-26T08:24:45Z'
            kind: flight
            price:
              currency: EUR
              total: 195.85
          - id: 5ef5b10ca1890759e7f1f4fa
            type: rate
            createdAt: '2020-06-26T08:24:45Z'
            kind: hotel
            price:
              currency: EUR
              total: 79.8
          search:
            arrivalPlace:
              country:
                code: ES
                name: Spain
              geoloc:
                lat: 40.4167754
                lng: -3.7037902
              name: Madrid
              type: address
            departureLocaleDateTime: '2020-10-26T10:00:00'
            departurePlace:
              country:
                code: FR
                name: France
              geoloc:
                lat: 48.856614
                lng: 2.3522219
              name: Paris
              type: address
            kind: roundTripWithHotel
            returnLocaleDateTime: '2020-10-27T10:00:00'
          transportLegs:
          - kind: flight
            segments:
            - id: '12'
              arrival:
                localeDateTime: '2020-10-26T12:40:00'
                place:
                  airport:
                    iataCode: MAD
                  name: MAD
                  type: airport
              bookingId: 8528765e-792d-4180-941b-dabce29e7638
              canceled: false
              departure:
                localeDateTime: '2020-10-26T10:35:00'
                place:
                  airport:
                    iataCode: ORY
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: ORY
                  type: airport
              duration: 125
              operatingCarrier:
                id: IB
                name: Iberia Airlines
              rateId: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
              transportNumber: '3403'
            summary: From ORY to MAD
          - kind: flight
            segments:
            - id: '88'
              arrival:
                localeDateTime: '2020-10-27T11:45:00'
                place:
                  airport:
                    iataCode: ORY
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: ORY
                  type: airport
              bookingId: 8528765e-792d-4180-941b-dabce29e7638
              canceled: false
              departure:
                localeDateTime: '2020-10-27T09:45:00'
                place:
                  airport:
                    iataCode: MAD
                  name: MAD
                  type: airport
              duration: 120
              operatingCarrier:
                id: IB
                name: Iberia Airlines
              rateId: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
              transportNumber: '3436'
            summary: From MAD to ORY
          travelerIds:
          - 35c93884-5cca-4e72-98ff-eb52f611cb21
    listTripProjectBillingOperationsResp200Example:
      summary: Trip project billing operations
      value:
        data:
        - id: 5e725560cdb9f6125a4acb51
          type: billingOperation
          createdAt: '2020-03-18T17:07:44Z'
          amount:
            currency: EUR
            total: 5
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: offline
            date: '2020-03-18T16:52:23Z'
            kind: car
            reference: OSEF984LOL
            supplierName: Sixt
            transport:
              departure:
                city: Rennes
              departureLocaleDate: '2020-03-20'
              destination:
                city: Paris
              returnLocaleDate: '2020-03-23'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: hubert@mycorp.fr
              fullName: Hubert Bonisseur de La Bath
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-18T17:07:44Z'
          invoiceId: 5e5feb94509e9b5aac9db538
          operationType: car
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          refundId: 5e725560cdb9f6125a4acb50
          status: succeeded
          transactionKind: refund
          tripProjectId: d5f57c1f-dc33-4632-a5aa-681367685daf
        - id: 5e70ffd5b5db0f5bb839a4ab
          type: billingOperation
          createdAt: '2020-03-17T16:50:29Z'
          amount:
            currency: EUR
            total: 110
          bookingSnapshot:
            booker:
              id: 16e43434-6f78-44ae-bb90-90f06459e10e
              email: roger@mycorp.fr
              fullName: Roger Moulinier
            channel: offline
            date: '2020-03-17T16:52:23Z'
            kind: car
            reference: OSEF984LOL
            supplierName: Sixt
            transport:
              cabinClass: second
              departure:
                city: Milan
              departureLocaleDate: '2020-01-28'
              destination:
                city: Milan
              fareType: flex
              returnLocaleDate: '2020-01-30'
            traveler:
              id: 35c93884-5cca-4e72-98ff-eb52f611cb21
              email: marie-jo@mycorp.fr
              fullName: Marie-Jo Cotin
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          date: '2020-03-17T16:50:29Z'
          description: Car rental - Marie-Jo Cotin - Milan - 28MAR2020
          invoiceId: 5e5feb94509e9b5aac9db538
          operationType: car
          projectCodeId: 5e7e25b06cb4333b7ec6477e
          status: paid
          transactionKind: purchase
          tripProjectId: d5f57c1f-dc33-4632-a5aa-681367685daf
        meta:
          pageKind: cursor
          limit: 10
          prevBefore: b3BlcmF0aW9uX2RhdGU6MTU4NDY5NTg2NTkwOQ==
          nextAfter: b3BlcmF0aW9uX2RhdGU6MTU4NDY5NTkwNDYzMw==
          order: asc
          sortBy: createdAt
    listTripProjectTravelersExample:
      summary: Trip project travelers
      value:
        data:
        - id: 35c93884-5cca-4e72-98ff-eb52f611cb21
          type: user
          createdAt: '2020-03-27T16:28:45Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c796cb4333b7ec64777
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 1
    autoApprovalTripProjectExample:
      summary: Trip project
      value:
        data:
          id: d5f57c1f-dc33-4632-a5aa-681367685daf
          type: tripProject
          createdAt: '2020-06-26T08:24:45Z'
          bookings:
          - id: 8528765e-792d-4180-941b-dabce29e7638
            type: booking
            createdAt: '2020-06-26T08:27:10Z'
            canceled: false
            kind: flight
            rateId: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
            reference: N2BYRD
            status: succeeded
            tripProjectId: d5f57c1f-dc33-4632-a5aa-681367685daf
          - id: 5ef5b168a1890759e7f1f4fb
            type: booking
            createdAt: '2020-06-26T08:27:20Z'
            canceled: false
            kind: hotel
            rateId: 5ef5b10ca1890759e7f1f4fa
            reference: 5ef5b168a1890759e7f1f4fc
            status: succeeded
            tripProjectId: d5f57c1f-dc33-4632-a5aa-681367685daf
          customFields:
          - customFieldId: 5fc5127ec00e48351c12b6de
            name: Business unit tag
            values:
            - data: Kervignac
          - customFieldId: 5fce2fc333d1f42f6ee71dba
            name: Budget center
            values:
            - customFieldOptionId: 5fc5127ec00e48351c12b6e2
              data: BRU499
          hotelStays:
          - bookingId: 5ef5b168a1890759e7f1f4fb
            checkinLocaleDate: '2020-10-26'
            checkoutLocaleDate: '2020-10-27'
            hotelId: 5cee58325621bddc666e0604
            place:
              geoloc:
                lat: 40.418667
                lng: -3.704013
              name: Liabeny
              type: hotel
            rateId: 5ef5b10ca1890759e7f1f4fa
          rates:
          - id: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
            type: rate
            createdAt: '2020-06-26T08:24:45Z'
            kind: flight
            price:
              currency: EUR
              total: 195.85
          - id: 5ef5b10ca1890759e7f1f4fa
            type: rate
            createdAt: '2020-06-26T08:24:45Z'
            kind: hotel
            price:
              currency: EUR
              total: 79.8
          search:
            arrivalPlace:
              country:
                code: ES
                name: Spain
              geoloc:
                lat: 40.4167754
                lng: -3.7037902
              name: Madrid
              type: address
            departureLocaleDateTime: '2020-10-26T10:00:00'
            departurePlace:
              country:
                code: FR
                name: France
              geoloc:
                lat: 48.856614
                lng: 2.3522219
              name: Paris
              type: address
            kind: roundTripWithHotel
            returnLocaleDateTime: '2020-10-27T10:00:00'
          transportLegs:
          - kind: flight
            segments:
            - id: '12'
              arrival:
                localeDateTime: '2020-10-26T12:40:00'
                place:
                  airport:
                    iataCode: MAD
                  name: MAD
                  type: airport
              bookingId: 8528765e-792d-4180-941b-dabce29e7638
              canceled: false
              departure:
                localeDateTime: '2020-10-26T10:35:00'
                place:
                  airport:
                    iataCode: ORY
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: ORY
                  type: airport
              duration: 125
              operatingCarrier:
                id: IB
                name: Iberia Airlines
              rateId: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
              transportNumber: '3403'
            summary: From ORY to MAD
          - kind: flight
            segments:
            - id: '88'
              arrival:
                localeDateTime: '2020-10-27T11:45:00'
                place:
                  airport:
                    iataCode: ORY
                  country:
                    code: FR
                    name: France
                  geoloc:
                    lat: 48.856614
                    lng: 2.3522219
                  name: ORY
                  type: airport
              bookingId: 8528765e-792d-4180-941b-dabce29e7638
              canceled: false
              departure:
                localeDateTime: '2020-10-27T09:45:00'
                place:
                  airport:
                    iataCode: MAD
                  name: MAD
                  type: airport
              duration: 120
              operatingCarrier:
                id: IB
                name: Iberia Airlines
              rateId: b56fcc03-5655-4318-b4ce-99d7447da556___amadeus-itinerary-economy-5376461d-682b-415d-96a3-70b5a36d777a
              transportNumber: '3436'
            summary: From MAD to ORY
          travelerIds:
          - 35c93884-5cca-4e72-98ff-eb52f611cb21
    listUsersResp200Example:
      summary: Users
      value:
        data:
        - id: 5add4aee-df89-4fea-9f86-68450a294484
          type: user
          createdAt: '2020-03-27T17:02:37Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          email: jacky@mycorp.fr
          firstName: Jacky
          lastName: Jacquard
        - id: 35c93884-5cca-4e72-98ff-eb52f611cb21
          type: user
          createdAt: '2020-03-27T16:28:45Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c796cb4333b7ec64777
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
        - id: 16e43434-6f78-44ae-bb90-90f06459e10e
          type: user
          createdAt: '2020-03-27T17:03:07Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          email: roger@mycorp.fr
          firstName: Roger
          lastName: Moulinier
          managerId: 35c93884-5cca-4e72-98ff-eb52f611cb21
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 3
          order: asc
          sortBy: createdAt
    createUserReqExample:
      summary: User
      value:
        data:
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
          billingProfileId: 5e7e09f76cb4333b7ec64774
    createUserResp201Example:
      summary: User created
      value:
        data:
          id: 35c93884-5cca-4e72-98ff-eb52f611cb21
          type: user
          createdAt: '2020-03-27T16:28:45Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
    getUserResp200Example:
      summary: User
      value:
        data:
          id: 35c93884-5cca-4e72-98ff-eb52f611cb21
          type: user
          createdAt: '2020-03-27T16:28:45Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
    patchUserReqExample:
      summary: User
      value:
        data:
          costCenterId: 5e7e0c796cb4333b7ec64777
    patchUserResp200Example:
      summary: User updated
      value:
        data:
          id: 35c93884-5cca-4e72-98ff-eb52f611cb21
          type: user
          createdAt: '2020-03-27T16:28:45Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c796cb4333b7ec64777
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
    replaceUserReqExample:
      summary: User
      value:
        data:
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c796cb4333b7ec64777
          firstName: Hubert
          lastName: Bonisseur de La Bath
    replaceUserResp200Example:
      summary: User updated
      value:
        data:
          id: 35c93884-5cca-4e72-98ff-eb52f611cb21
          type: user
          createdAt: '2020-03-27T16:28:45Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c796cb4333b7ec64777
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
    deleteUserResp200Example:
      summary: User deleted
      value:
        data:
          id: 35c93884-5cca-4e72-98ff-eb52f611cb21
          type: user
          createdAt: '2020-03-27T16:28:45Z'
          archived: false
          billingProfileId: 5e7e09f76cb4333b7ec64774
          costCenterId: 5e7e0c9a6cb4333b7ec64779
          email: hubert@mycorp.fr
          firstName: Hubert
          lastName: Bonisseur de La Bath
    listWebhooksResp200Example:
      summary: Webhooks
      value:
        data:
        - id: 5eb006e01eae0a64503ead28
          type: webhook
          createdAt: '2020-05-11T17:08:23Z'
          description: Users observer
          disabled: false
          events:
          - costCenter.created
          - costCenter.updated
          url: https://example.com/webhook-cost-centers
        - id: 5e7e25b06cb4333b7ec6477e
          type: webhook
          createdAt: '2020-05-11T17:05:12Z'
          description: Invoices observer
          disabled: false
          events:
          - invoice.created
          - invoice.updated
          url: https://example.com/webhook-invoices
        meta:
          pageKind: offset
          limit: 10
          offset: 0
          total: 2
          order: asc
          sortBy: createdAt
    createWebhookReqExample:
      summary: Webhook
      value:
        data:
          description: Testing webhooks
          events:
          - costCenter.created
          - invoice.created
          - invoice.updated
          url: https://bef49k98.ngrok.io/webhook
    createWebhookResp201Example:
      summary: Webhook created
      value:
        data:
          id: 5e875e56fd67c2b801ad6d98
          type: webhook
          createdAt: '2020-05-11T16:59:45Z'
          description: Testing webhooks
          disabled: false
          events:
          - costCenter.created
          - invoice.created
          - invoice.updated
          secret: "...."
          url: https://bef49k98.ngrok.io/webhook
    getWebhookResp200Example:
      summary: Webhook
      value:
        data:
          id: 5e875e56fd67c2b801ad6d98
          type: webhook
          createdAt: '2020-05-11T16:59:45Z'
          description: Testing webhooks
          disabled: false
          events:
          - costCenter.created
          - invoice.created
          - invoice.updated
          url: https://bef49k98.ngrok.io/webhook
    patchWebhookReqExample:
      summary: Webhook
      value:
        data:
          events:
          - costCenter.created
          - costCenter.updated
          - invoice.created
          - invoice.updated
    patchWebhookResp200Example:
      summary: Webhook updated
      value:
        data:
          id: 5e875e56fd67c2b801ad6d98
          type: webhook
          createdAt: '2020-05-11T16:59:45Z'
          description: Testing webhooks
          disabled: false
          events:
          - costCenter.created
          - costCenter.updated
          - invoice.created
          - invoice.updated
          url: https://bef49k98.ngrok.io/webhook
    replaceWebhookReqExample:
      summary: Webhook
      value:
        data:
          description: Testing webhooks
          events:
          - costCenter.created
          - costCenter.updated
          - invoice.created
          - invoice.updated
          url: https://bef49k98.ngrok.io/webhook
    replaceWebhookResp200Example:
      summary: Webhook updated
      value:
        data:
          id: 5e875e56fd67c2b801ad6d98
          type: webhook
          createdAt: '2020-05-11T16:59:45Z'
          description: Testing webhooks
          disabled: false
          events:
          - costCenter.created
          - costCenter.updated
          - invoice.created
          - invoice.updated
          url: https://bef49k98.ngrok.io/webhook
    deleteWebhookResp200Example:
      summary: Webhook deleted
      value:
        data:
          id: 5e875e56fd67c2b801ad6d98
          type: webhook
          createdAt: '2020-05-11T16:59:45Z'
          description: Testing webhooks
          disabled: false
          events:
          - costCenter.created
          - costCenter.updated
          - invoice.created
          - invoice.updated
          url: https://bef49k98.ngrok.io/webhook
    scimListUsersResp200Example:
      summary: Users
      value:
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        startIndex: 1
        itemsPerPage: 2
        totalResults: 427
        Resources:
        - schemas:
          - urn:ietf:params:scim:schemas:core:2.0:User
          - urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
          - urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User
          id: 517fac99-af7e-4791-bc7f-20613bc9e591
          meta:
            resourceType: User
            created: '2017-10-31T23:00:00Z'
            lastModified: '2022-04-22T15:41:27Z'
            location: https://api.fairjungle.com/scim/v2/Users/517fac99-af7e-4791-bc7f-20613bc9e591
          active: true
          emails:
          - primary: true
            type: work
            value: jean.peuplu@example.com
          externalId: 00u15yqwxsIVFisi6697
          name:
            familyName: Jean
            givenName: Peuplu
          phoneNumbers:
          - primary: true
            type: work
            value: "+33 661328570"
          userName: jean.peuplu@.com
          urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
            costCenter: 123 Yepppaaaa
            manager:
              displayName: Jean-Mich Muche
              "$ref": https://api.fairjungle.com/scim/v2/Users/8b6d84ae-0e09-451d-8a7f-1b8ea699da54
              value: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
          urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User:
            billingProfile:
              id: 6045f5ec1e48d1a57b80ef51
              name: Executives
            costCenter:
              id: 613b079e8172dba464e5a3b4
              name: 123 Yepppaaaa
            dateOfBirth: '1977-09-25'
            gender: male
            manager:
              id: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
              email: jean-mich.muche@example.com
            roles:
            - display: Admin
              value: admin
            travelPolicy:
              id: 6062d3982aa781bc8a8a43d9
              name: YOLO
        - schemas:
          - urn:ietf:params:scim:schemas:core:2.0:User
          - urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
          - urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User
          id: 9433c45e-ac9e-43d8-80e2-18f4d2634a83
          meta:
            resourceType: User
            created: '2018-11-11T12:42:22Z'
            lastModified: 2022-05-23T109:38:14Z
            location: https://api.fairjungle.com/scim/v2/Users/9433c45e-ac9e-43d8-80e2-18f4d2634a83
          active: true
          emails:
          - primary: true
            type: work
            value: johnny.bigoude@example.com
          externalId: 88wffghjuykyko81ef861d
          name:
            familyName: Johnny
            givenName: Bigoude
          phoneNumbers:
          - primary: true
            type: work
            value: "+33 662128411"
          userName: johnny.bigoude@example.com
          urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
            costCenter: 123 Yepppaaaa
            manager:
              displayName: Jean-Mich Muche
              "$ref": https://api.fairjungle.com/scim/v2/Users/8b6d84ae-0e09-451d-8a7f-1b8ea699da54
              value: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
          urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User:
            billingProfile:
              id: 6045f5ec1e48d1a57b80ef51
              name: Executives
            costCenter:
              id: 613b079e8172dba464e5a3b4
              name: 123 Yepppaaaa
            dateOfBirth: '1977-09-25'
            gender: male
            manager:
              id: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
              email: jean-mich.muche@example.com
            roles:
            - display: Admin
              value: admin
            travelPolicy:
              id: 6062d3982aa781bc8a8a43d9
              name: YOLO
    scimCreateUserReqExample:
      summary: User
      value:
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        active: true
        userName: jean-mich.muche@example.com
        externalId: 88wffghjuykyko81ef861d
        name:
          givenName: Jean-Mich
          familyName: Muche
        emails:
        - primary: true
          value: jean-mich.muche@example.com
          type: work
    scimCreateUserResp201Example:
      summary: User created
      value:
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        id: 9433c45e-ac9e-43d8-80e2-18f4d2634a83
        active: true
        userName: jean-mich.muche@example.com
        externalId: 88wffghjuykyko81ef861d
        name:
          givenName: Jean-Mich
          familyName: Muche
        emails:
        - primary: true
          value: jean-mich.muche@example.com
          type: work
    scimGetUserResp200Example:
      summary: User
      value:
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        - urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
        - urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User
        id: 517fac99-af7e-4791-bc7f-20613bc9e591
        meta:
          resourceType: User
          created: '2017-10-31T23:00:00Z'
          lastModified: '2022-04-22T15:41:27Z'
          location: https://api.fairjungle.com/scim/v2/Users/517fac99-af7e-4791-bc7f-20613bc9e591
        active: true
        emails:
        - primary: true
          type: work
          value: jean.peuplu@example.com
        externalId: 00u15yqwxsIVFisi6697
        name:
          familyName: Jean
          givenName: Peuplu
        phoneNumbers:
        - primary: true
          type: work
          value: "+33 661328570"
        userName: jean.peuplu@.com
        urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
          costCenter: 123 Yepppaaaa
          manager:
            displayName: Jean-Mich Muche
            "$ref": https://api.fairjungle.com/scim/v2/Users/8b6d84ae-0e09-451d-8a7f-1b8ea699da54
            value: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
        urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User:
          billingProfile:
            id: 6045f5ec1e48d1a57b80ef51
            name: Executives
          costCenter:
            id: 613b079e8172dba464e5a3b4
            name: 123 Yepppaaaa
          dateOfBirth: '1977-09-25'
          gender: male
          manager:
            id: 8b6d84ae-0e09-451d-8a7f-1b8ea699da54
            email: jean-mich.muche@example.com
          roles:
          - display: Admin
            value: admin
          travelPolicy:
            id: 6062d3982aa781bc8a8a43d9
            name: YOLO
    scimPatchUserReqExample:
      summary: User
      value:
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:PatchOp
        Operations:
        - op: replace
          value:
            active: false
            name:
              givenName: Jean-Luc
            urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User:
              dateOfBirth: 
              gender: male
    scimPatchUserResp200Example:
      summary: User updated
      value:
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        id: 9433c45e-ac9e-43d8-80e2-18f4d2634a83
        active: false
        userName: jean-mich.muche@example.com
        externalId: 88wffghjuykyko81ef861d
        name:
          givenName: Jean-Luc
          familyName: Muche
        emails:
        - primary: true
          value: jean-mich.muche@example.com
          type: work
        urn:ietf:params:scim:schemas:extension:fairjungle:2.0:User:
          gender: male
    scimReplaceUserReqExample:
      summary: User
      value:
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        id: 9433c45e-ac9e-43d8-80e2-18f4d2634a83
        active: true
        userName: jean-mich.muche@example.com
        externalId: 88wffghjuykyko81ef861d
        name:
          givenName: Jean-Mich
          familyName: Muche
        emails:
        - primary: true
          value: jean-mich.muche@example.com
          type: work
    scimReplaceUserResp200Example:
      summary: User updated
      value:
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        id: 9433c45e-ac9e-43d8-80e2-18f4d2634a83
        active: true
        userName: jean-mich.muche@example.com
        externalId: 88wffghjuykyko81ef861d
        name:
          givenName: Jean-Mich
          familyName: Muche
        emails:
        - primary: true
          value: jean-mich.muche@example.com
          type: work
    scimDeleteUserResp200Example:
      summary: User deleted
      value:
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        id: 9433c45e-ac9e-43d8-80e2-18f4d2634a83
        active: true
        userName: jean-mich.muche@example.com
        externalId: 88wffghjuykyko81ef861d
        name:
          givenName: Jean-Mich
          familyName: Muche
        emails:
        - primary: true
          value: jean-mich.muche@example.com
          type: work
