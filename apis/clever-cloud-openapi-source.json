{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Clever-Cloud API",
    "description" : "Public API for managing Clever-Cloud data and products",
    "termsOfService" : "https://www.clever-cloud.com/terms-of-use/",
    "contact" : {
      "name" : "Support",
      "url" : "https://www.clever-cloud.com/doc/get-help/support",
      "email" : "support@clever-cloud.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.1"
  },
  "servers" : [ {
    "url" : "https://api.clever-cloud.com/v2",
    "description" : "The production API server"
  } ],
  "paths" : {
    "/authorize" : {
      "post" : {
        "tags" : [ "Auth" ],
        "operationId" : "postAuthorize",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAuthorization"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/session/signup" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getSignupForm",
        "parameters" : [ {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url_next",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscription_source",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/session/login" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getLoginForm",
        "parameters" : [ {
          "name" : "secondaryEmailKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deletionKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromAuthorize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cli_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "pass" : {
                    "type" : "string"
                  },
                  "from_authorize" : {
                    "type" : "string"
                  },
                  "cli_token" : {
                    "type" : "string"
                  },
                  "clever_flavor" : {
                    "type" : "string"
                  },
                  "oauth_token" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/session/from/{subscription_source}/signup" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getSignupFormForSource",
        "parameters" : [ {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url_next",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscription_source",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/session/mfa_login" : {
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "mfaLogin",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mfa_kind" : {
                    "type" : "string"
                  },
                  "mfa_attempt" : {
                    "type" : "string"
                  },
                  "email" : {
                    "type" : "string"
                  },
                  "auth_id" : {
                    "type" : "string"
                  },
                  "from_authorize" : {
                    "type" : "string"
                  },
                  "cli_token" : {
                    "type" : "string"
                  },
                  "clever_flavor" : {
                    "type" : "string"
                  },
                  "oauth_token" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OAuthApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions/signup" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getSignupForm_1",
        "parameters" : [ {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url_next",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscription_source",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/login" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getLoginForm_1",
        "parameters" : [ {
          "name" : "secondaryEmailKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deletionKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromAuthorize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cli_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "login_1",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "pass" : {
                    "type" : "string"
                  },
                  "from_authorize" : {
                    "type" : "string"
                  },
                  "cli_token" : {
                    "type" : "string"
                  },
                  "clever_flavor" : {
                    "type" : "string"
                  },
                  "oauth_token" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/from/{subscription_source}/signup" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getSignupFormForSource_1",
        "parameters" : [ {
          "name" : "subscription_source",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url_next",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/mfa_login" : {
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "mfaLogin_1",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mfa_kind" : {
                    "type" : "string"
                  },
                  "mfa_attempt" : {
                    "type" : "string"
                  },
                  "email" : {
                    "type" : "string"
                  },
                  "auth_id" : {
                    "type" : "string"
                  },
                  "from_authorize" : {
                    "type" : "string"
                  },
                  "cli_token" : {
                    "type" : "string"
                  },
                  "clever_flavor" : {
                    "type" : "string"
                  },
                  "oauth_token" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OAuthApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/validation/vat/{key}" : {
      "get" : {
        "tags" : [ "Payment" ],
        "operationId" : "validate",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/github/signup" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "githubSignup",
        "parameters" : [ {
          "name" : "redirectUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromAuthorize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cli_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionSource",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "terms",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "finsihGithubSignup",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "transactionId" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "otherId" : {
                    "type" : "string"
                  },
                  "otherEmail" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  },
                  "autoLink" : {
                    "type" : "string"
                  },
                  "terms" : {
                    "type" : "string"
                  },
                  "invitationKey" : {
                    "type" : "string"
                  },
                  "mfa_kind" : {
                    "type" : "string"
                  },
                  "mfa_attempt" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/github/link" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithubLink",
        "parameters" : [ {
          "name" : "transactionId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redirectUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "User" ],
        "operationId" : "deleteGithubLink",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/github" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithub",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuthTransactionView"
                }
              }
            }
          }
        }
      }
    },
    "/github/login" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithubLogin",
        "parameters" : [ {
          "name" : "redirectUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromAuthorize",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cli_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionSource",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/github/callback" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithubCallback",
        "parameters" : [ {
          "name" : "CcOAuthData",
          "in" : "cookie",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "error",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "error_description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "error_uri",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/github/keys" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithubKeys",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SshKeyView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/github/emails" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithubEmails",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/github/applications" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithubApplications",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OAuthApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/github/username" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getGithubUsername",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/github/redeploy" : {
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "postGithubRedeploy",
        "parameters" : [ {
          "name" : "User-Agent",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Github-Event",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "X-Hub-Signature",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GithubWebhookPayload"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/authorize" : {
      "get" : {
        "tags" : [ "Auth" ],
        "operationId" : "authorizeForm",
        "parameters" : [ {
          "name" : "ccid",
          "in" : "cookie",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cctk",
          "in" : "cookie",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ccid",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cli_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from_oauth",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Auth" ],
        "operationId" : "authorizeToken",
        "parameters" : [ {
          "name" : "ccid",
          "in" : "cookie",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cctk",
          "in" : "cookie",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "almighty" : {
                    "type" : "string"
                  },
                  "access_organisations" : {
                    "type" : "string"
                  },
                  "manage_organisations" : {
                    "type" : "string"
                  },
                  "manage_organisations_services" : {
                    "type" : "string"
                  },
                  "manage_organisations_applications" : {
                    "type" : "string"
                  },
                  "manage_organisations_members" : {
                    "type" : "string"
                  },
                  "access_organisations_bills" : {
                    "type" : "string"
                  },
                  "access_organisations_credit_count" : {
                    "type" : "string"
                  },
                  "access_organisations_consumption_statistics" : {
                    "type" : "string"
                  },
                  "access_personal_information" : {
                    "type" : "string"
                  },
                  "manage_personal_information" : {
                    "type" : "string"
                  },
                  "manage_ssh_keys" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/html" : { },
              "application/json" : { }
            }
          }
        }
      }
    },
    "/oauth/rights" : {
      "get" : {
        "tags" : [ "Auth" ],
        "operationId" : "getAvailableRights",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/oauth/login_data" : {
      "get" : {
        "tags" : [ "Auth" ],
        "operationId" : "getLoginData",
        "parameters" : [ {
          "name" : "oauth_key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/oauth/request_token_query" : {
      "post" : {
        "tags" : [ "Auth" ],
        "operationId" : "postReqTokenRequestQueryString",
        "parameters" : [ {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_consumer_key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_signature_method",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_signature",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_timestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_nonce",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_version",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_verifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_callback",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_token_secret",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_callback_confirmed",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/x-www-form-urlencoded" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/request_token" : {
      "post" : {
        "tags" : [ "Auth" ],
        "operationId" : "postReqTokenRequest",
        "parameters" : [ {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "oauth_consumer_key" : {
                    "type" : "string"
                  },
                  "oauth_token" : {
                    "type" : "string"
                  },
                  "oauth_signature_method" : {
                    "type" : "string"
                  },
                  "oauth_signature" : {
                    "type" : "string"
                  },
                  "oauth_timestamp" : {
                    "type" : "string"
                  },
                  "oauth_nonce" : {
                    "type" : "string"
                  },
                  "oauth_version" : {
                    "type" : "string"
                  },
                  "oauth_verifier" : {
                    "type" : "string"
                  },
                  "oauth_callback" : {
                    "type" : "string"
                  },
                  "oauth_token_secret" : {
                    "type" : "string"
                  },
                  "oauth_callback_confirmed" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/x-www-form-urlencoded" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/oauth/access_token_query" : {
      "post" : {
        "tags" : [ "Auth" ],
        "operationId" : "postAccessTokenRequestQuery",
        "parameters" : [ {
          "name" : "oauth_consumer_key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_signature_method",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_signature",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_timestamp",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_nonce",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_version",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_verifier",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_callback",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_token_secret",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oauth_callback_confirmed",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/x-www-form-urlencoded" : { }
            }
          }
        }
      }
    },
    "/oauth/access_token" : {
      "post" : {
        "tags" : [ "Auth" ],
        "operationId" : "postAccessTokenRequest",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "oauth_consumer_key" : {
                    "type" : "string"
                  },
                  "oauth_token" : {
                    "type" : "string"
                  },
                  "oauth_signature_method" : {
                    "type" : "string"
                  },
                  "oauth_signature" : {
                    "type" : "string"
                  },
                  "oauth_timestamp" : {
                    "type" : "string"
                  },
                  "oauth_nonce" : {
                    "type" : "string"
                  },
                  "oauth_version" : {
                    "type" : "string"
                  },
                  "oauth_verifier" : {
                    "type" : "string"
                  },
                  "oauth_callback" : {
                    "type" : "string"
                  },
                  "oauth_token_secret" : {
                    "type" : "string"
                  },
                  "oauth_callback_confirmed" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/x-www-form-urlencoded" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getOrganisation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "get"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "updateOrganisation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeOrganisation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "update"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteOrganisation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "delete"
      }
    },
    "/organisations/{id}/instances" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "listOrganisationInstances",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listInstances"
      }
    },
    "/organisations/{id}/deployments" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "listOrganisationDeployments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listDeployments"
      }
    },
    "/organisations/{id}/payment-info" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getOrganisationPaymentInfo",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentInfoView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "getPaymentInfo"
      }
    },
    "/organisations/{id}/avatar" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "uploadOrganisationAvatar",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UrlView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "uploadAvatar"
      }
    },
    "/organisations/{id}/namespaces" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "listOrganisationNamespaces",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NamespaceView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listNamespaces"
      }
    },
    "/organisations/{id}/addonproviders/{providerId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getProviderInfo",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonProviderInfoView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "updateProviderInfos",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProviderInfos"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonProviderInfoView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteProvider",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getProvidersInfo",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonProviderInfoFullView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "createProvider",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProvider"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonProviderInfoFullView"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/features" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getProviderFeatures",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonFeatureView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "addProviderFeature",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonFeature"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonFeatureView"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/features/{featureId}" : {
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteProviderFeature",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "featureId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/tags" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getProviderTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/plans" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getProviderPlans",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonPlanView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "addProviderPlan",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonPlan"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonPlanView"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/plans/{planId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getProviderPlan",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonPlanView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "editProviderPlan",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonPlan"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonPlanView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteProviderPlan",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "editProviderPlanFeature",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "featureName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddonFeatureInstanceView"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonPlanView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteProviderPlanFeature",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "featureName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/testers" : {
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "addBetaTester",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/sso" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getSSODataForOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonProviderSSOData"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/tags" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonTagsByOrgaIdAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "replaceAddonTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/tags/{tag}" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "addAddonTagByOrgaAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteAddonTagByOrgaAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/sso" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonSSODataForOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonProviderSSOData"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/applications" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getApplicationsLinkedToAddonByOrgaAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/env" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonEnvByOrgaAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonEnvironmentView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonByOrgaAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "updateAddonInfo",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProvision"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deprovisionAddonByOrgaAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/instances" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonInstances",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withDeleted",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuperNovaInstanceView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/instances/{instanceId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonInstance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/migrations" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonMigrations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "changePlanByOrgaAndAddonId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabePlanChange"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/migrations/preorders" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "preorderMigration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/migrations/{migrationId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonMigration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "abortAddonMigration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAddonsByOrgaId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "provisionAddonByOrgaId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProvision"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          },
          "402" : {
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/preorders" : {
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "preorderAddonByOrgaId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProvision"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRendering"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/dependencies" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getApplicationDependenciesByOrgaAndAppId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/dependencies/env" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getApplicationDependenciesEnvByOrgaAndAppId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/dependencies/{dependencyId}" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "addApplicationDependencyByOrgaAndAppId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dependencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteApplicationDependencyByOrgaAndAppId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dependencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/dependents" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getApplicationDependentsByOrgaAndAppId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/deployments/{deploymentId}/instances" : {
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "cancelApplicationDeploymentForOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/deployments" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getApplicationDeploymentsForOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeploymentView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/deployments/{deploymentId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getApplicationDeploymentForOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/tags" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List application tags",
        "operationId" : "listOrganisationApplicationTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationTags"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update application tags",
        "operationId" : "updateOrganisationApplicationTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateApplicationTags"
      }
    },
    "/organisations/{id}/applications/{appId}/tags/{tag}" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Add a tag on an application",
        "operationId" : "addOrganisationApplicationTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "addApplicationTag"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "summary" : "Remove an application tag",
        "operationId" : "removeOrganisationApplicationTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "removeApplicationTag"
      }
    },
    "/organisations/{id}/applications/{appId}/vhosts/{domain}" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "addOrganisationApplicationVirtualHost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "addApplicationVirtualHost"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "removeOrganisationApplicationVirtualhost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "removeApplicationVirtualhost"
      }
    },
    "/organisations/{id}/applications/{appId}/vhosts/favourite" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getOrganisationApplicationFavouriteVirtualHost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VhostView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "getApplicationFavouriteVirtualHost"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "updateOrganisationApplicationFavouriteVirtualHost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VhostView"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VhostView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateApplicationFavouriteVirtualHost"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "removeOrganisationApplicationFavouriteVirtualHost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "removeApplicationFavouriteVirtualHost"
      }
    },
    "/organisations/{id}/applications/{appId}/vhosts" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "listOrganisationApplicationVirtualHosts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VhostView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationVirtualHosts"
      }
    },
    "/organisations/{id}/applications/{appId}/env/{envName}" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update an existing application environment variable",
        "operationId" : "updateOrganisationApplicationEnvironmentVariable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "envName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeValue"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The edited application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateApplicationEnvironmentVariable"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "summary" : "Delete an application environment variable",
        "operationId" : "deleteOrganisationApplicationEnvironmentVariable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "envName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The edited application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "deleteApplicationEnvironmentVariable"
      }
    },
    "/organisations/{id}/applications/{appId}/env" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List application environment variables",
        "operationId" : "listOrganisationApplicationEnvironmentVariables",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of application's environment variables",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonEnvironmentView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationEnvironmentVariables"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update all existing application environment variables",
        "operationId" : "updateOrganisationApplicationEnvironmentVariables",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The edited application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateOrganisationApplicationEnvironmentVariables"
      }
    },
    "/organisations/{id}/applications/{appId}/addons/env" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List addons environment variables which are linked to the specified application",
        "operationId" : "listOrganisationApplicationAddonsEnvironmentVariables",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The addon's environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LinkedAddonEnvironmentView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationAddonEnvironmentVariables"
      }
    },
    "/organisations/{id}/applications/{appId}/exposed_env" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List accessible organisations",
        "operationId" : "listOrganisationAppplicationExposedEnvironmentVariables",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The exposed addon's environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listAppplicationExposedEnvironmentVariables"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update application exposed environment variables",
        "operationId" : "updateOrganisationApplicationExposedEnvironmentVariables",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A success message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateApplicationExposedEnvironmentVariables"
      }
    },
    "/organisations/{id}/applications/{appId}/tcpRedirs" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List application TCP redirections",
        "operationId" : "listOrganisationApplicationTCPRedirections",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of application's TCP redirections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TcpRedirView"
                  }
                }
              }
            }
          },
          "402" : {
            "description" : "A list of invoices to pay",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceRendering"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationTCPRedirections"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "summary" : "Create an application TCP redirection",
        "operationId" : "createOrganisationApplicationTCPRedirection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "payment",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeNamespace"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TcpRedirView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "createApplicationTCPRedirection"
      }
    },
    "/organisations/{id}/applications/{appId}/tcpRedirs/{sourcePort}" : {
      "delete" : {
        "tags" : [ "Organisation" ],
        "summary" : "Delete an application TCP redirection",
        "operationId" : "deleteOrganisationApplicationTCPRedirection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourcePort",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "namespace",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "deleteApplicationTCPRedirection"
      }
    },
    "/organisations/{id}/applications/{appId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "Get an application",
        "operationId" : "getOrganisationApplication",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "getApplication"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update an application",
        "operationId" : "updateOrganisationApplication",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeApplication"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns the edited application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateApplication"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "summary" : "Delete an application",
        "operationId" : "deleteOrganisationApplication",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A success message",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "deleteApplication"
      }
    },
    "/organisations/{id}/applications" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List applications",
        "operationId" : "listOrganisationApplications",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of organisation's applications",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplications"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "summary" : "Create an application",
        "operationId" : "createOrganisationApplication",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeApplication"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The created application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "createApplication"
      }
    },
    "/organisations/{id}/applications/{appId}/branches" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List accessible organisations",
        "operationId" : "listOrganisationApplicationBranches",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of Git branches for an application",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationBranches"
      }
    },
    "/organisations/{id}/applications/{appId}/branch" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update application deployment branch",
        "operationId" : "updateOrganisationApplicationBranch",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeBranch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateApplicationBranch"
      }
    },
    "/organisations/{id}/applications/{appId}/instances" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List application instances",
        "operationId" : "listOrganisationApplicationInstances",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withDeleted",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of application instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuperNovaInstanceView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationInstances"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "summary" : "Redeploy an application",
        "operationId" : "redeployOrganisationApplication",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commit",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "useCache",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "redeployApplication"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "summary" : "List accessible organisations",
        "operationId" : "stopOrganisationApplication",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of application's instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "stopApplication"
      }
    },
    "/organisations/{id}/applications/{appId}/instances/{instanceId}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "Get application instance",
        "operationId" : "getOrganisationApplicationInstance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested application's instance",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "getApplicationInstance"
      }
    },
    "/organisations/{id}/applications/{appId}/addons" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List application linked addons",
        "operationId" : "listOrganisationApplicationAddons",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of application's linked addons",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listApplicationAddons"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "summary" : "Link an addon to the specified application",
        "operationId" : "linkOrganisationApplicationAddon",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "linkApplicationAddon"
      }
    },
    "/organisations/{id}/applications/{appId}/addons/{addonId}" : {
      "delete" : {
        "tags" : [ "Organisation" ],
        "summary" : "Unlink an addon from the specified application",
        "operationId" : "unlinkOrganisationApplicationAddon",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "unlinkApplicationAddon"
      }
    },
    "/organisations/{id}/applications/{appId}/buildflavor" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update Application build instance flavor",
        "operationId" : "updateOrganisationApplicationBuildInstanceFlavor",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeBuildFlavor"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateApplicationBuildInstanceFlavor"
      }
    },
    "/organisations/{id}/consumers" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "listOrganisationConsumers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OAuth1ConsumerView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listConsumers"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "createOrganisationConsumer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeOAuth1Consumer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth1ConsumerView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "createConsumer"
      }
    },
    "/organisations/{id}/consumers/{key}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getOrganisationConsumer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth1ConsumerView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "getConsumer"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "updateOrganisationConsumer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeOAuth1Consumer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth1ConsumerView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateConsumer"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteOrganisationConsumer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "deleteConsumer"
      }
    },
    "/organisations/{id}/consumers/{key}/secret" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getOrganisationConsumerSecret",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "getConsumerSecret"
      }
    },
    "/organisations/{id}/credits" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getAmountForOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DropCountView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getAmount"
      }
    },
    "/organisations/{id}/consumptions" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getConsumptionsForOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "for",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getConsumptions"
      }
    },
    "/organisations/{id}/members/{userId}" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "summary" : "Update an organisation member",
        "operationId" : "updateOrganisationMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "updateMember"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "summary" : "Remove an organisation member",
        "operationId" : "removeOrganisationMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "removeMember"
      }
    },
    "/organisations/{id}/members" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List organisation members",
        "operationId" : "listOrganisationMembers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganisationMemberView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "listMembers"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "summary" : "Add a user to an organisation",
        "operationId" : "addOrganisationMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeMember"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "addMember"
      }
    },
    "/organisations/{id}/payments/tokens/stripe" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getStripeTokenByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BraintreeToken"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getStripeToken"
      }
    },
    "/organisations/{id}/payments/billings" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getInvoicesByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceRendering"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getInvoicesByOrga"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "buyDropsByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannaBuyPackage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRendering"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "buyDrops"
      }
    },
    "/organisations/{id}/payments/billings/{bid}.pdf" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getPdfInvoiceByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/pdf" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getPdfInvoice"
      }
    },
    "/organisations/{id}/payments/billings/{bid}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getInvoiceByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRendering"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getInvoice"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "choosePaymentProviderByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentProviderSelection"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NextInPaymentFlow"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "choosePaymentProvider"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deletePurchaseOrderByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "deletePurchaseOrder"
      }
    },
    "/organisations/{id}/payments/billings/unpaid" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getUnpaidInvoicesByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceRendering"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getUnpaidInvoices"
      }
    },
    "/organisations/{id}/payments/recurring" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getRecurrentPaymentByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecurrentPaymentView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getRecurrentPayment"
      },
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deleteRecurrentPaymentByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "deleteRecurrentPayment"
      }
    },
    "/organisations/{id}/payments/fullprice/{price}" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getPriceWithTaxByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "price",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PriceWithTaxInfo"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getPriceWithTax"
      }
    },
    "/organisations/{id}/payments/methods" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getUnpaidInvoicesByOrga_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentMethodView"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getUnpaidInvoices"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "operationId" : "addPaymentMethodByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethodView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "addPaymentMethod"
      }
    },
    "/organisations/{id}/payments/methods/newintent" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getNewSetupIntentByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SetupIntentView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getNewSetupIntent"
      }
    },
    "/organisations/{id}/payments/methods/default" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getDefaultMethodByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethodView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getDefaultMethod"
      },
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "setDefaultMethodByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "setDefaultMethod"
      }
    },
    "/organisations/{id}/payments/methods/{mId}" : {
      "delete" : {
        "tags" : [ "Organisation" ],
        "operationId" : "deletePaymentMethodByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "deletePaymentMethod"
      }
    },
    "/organisations/{id}/payments/monthlyinvoice" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "operationId" : "getMonthlyInvoiceByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "getMonthlyInvoice"
      }
    },
    "/organisations/{id}/payments/monthlyinvoice/maxcredit" : {
      "put" : {
        "tags" : [ "Organisation" ],
        "operationId" : "setMaxCreditsPerMonthByOrga",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeMaxCredits"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "organisation",
        "x-function" : "setMaxCreditsPerMonth"
      }
    },
    "/organisations" : {
      "get" : {
        "tags" : [ "Organisation" ],
        "summary" : "List accessible organisations",
        "operationId" : "listOrganisations",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OrganisationView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "list"
      },
      "post" : {
        "tags" : [ "Organisation" ],
        "summary" : "Create a new organisation",
        "operationId" : "createOrganisation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeOrganisation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganisationView"
                }
              }
            }
          }
        },
        "x-service" : "organisation",
        "x-function" : "create"
      }
    },
    "/invoice/external/paypal/{bid}" : {
      "put" : {
        "tags" : [ "User" ],
        "operationId" : "authorizePaypalTransaction",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "User" ],
        "operationId" : "cancelPaypalTransaction",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/invoice/external/{bid}" : {
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "updateInvoice",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/EndOfInvoiceResponse"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/vendor/apps/{addonId}/migration_callback" : {
      "put" : {
        "tags" : [ "Products" ],
        "operationId" : "endAddonMigration",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "plan_id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "region",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      }
    },
    "/vendor/apps" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "listApps",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonApplicationSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor/apps/{addonId}" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getApplicationInfo",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonApplicationInfo"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Products" ],
        "operationId" : "editApplicationConfiguration",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      }
    },
    "/vendor/addons" : {
      "post" : {
        "tags" : [ "Products" ],
        "operationId" : "provisionOtherAddon",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeInterAddonProvision"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/vendor/apps/{addonId}/consumptions" : {
      "post" : {
        "tags" : [ "Products" ],
        "operationId" : "billOwner",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonBilling"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/vendor/apps/{addonId}/logscollector" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "logscollector",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/application/{appId}/environment" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getEnv",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "getEnv"
          }
        }
      },
      "put" : {
        "tags" : [ "User" ],
        "operationId" : "updateEnv",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/newsfeeds/engineering" : {
      "get" : {
        "operationId" : "getEngineeringFeed",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/newsfeeds/blog" : {
      "get" : {
        "operationId" : "getBlogFeed",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/password_forgotten/{key}" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "confirmPasswordResetRequest",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "resetPasswordForgotten",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "pass" : {
                    "type" : "string"
                  },
                  "pass2" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/password_forgotten" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getPasswordForgottenForm",
        "parameters" : [ {
          "name" : "clever_flavor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "askForPasswordResetViaForm",
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "login" : {
                    "type" : "string"
                  },
                  "drop_tokens" : {
                    "type" : "string"
                  },
                  "clever_flavor" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/payments/coupons/{name}" : {
      "get" : {
        "tags" : [ "Payment" ],
        "operationId" : "getCoupon",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "501" : {
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/payments/providers" : {
      "get" : {
        "tags" : [ "Payment" ],
        "operationId" : "getAvailablePaymentProviders",
        "responses" : {
          "501" : {
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/payments/tokens/stripe" : {
      "get" : {
        "tags" : [ "Payment" ],
        "operationId" : "getStripeToken",
        "responses" : {
          "501" : {
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/payments/{bid}/end/stripe" : {
      "put" : {
        "tags" : [ "Payment" ],
        "operationId" : "updateStripePayment",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetupIntentView"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRendering"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Payment" ],
        "operationId" : "endPaymentWithStripe",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "501" : {
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/payments/assets/pay_button/{token}/button.png" : {
      "get" : {
        "tags" : [ "Payment" ],
        "operationId" : "getInvoiceStatusButton",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "image/png" : { }
            }
          }
        }
      }
    },
    "/payments/webhooks/stripe/sepa" : {
      "post" : {
        "tags" : [ "Payment" ],
        "operationId" : "stripeSepaWebhook",
        "parameters" : [ {
          "name" : "Stripe-Signature",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/products/zones" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getZones",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ZoneView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/addonproviders" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getAddonProviders",
        "parameters" : [ {
          "name" : "orgaId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonProviderInfoFullView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/mfa_kinds" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getMFAKinds",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/addonproviders/{provider_id}" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getAddonProvider",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orgaId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonProviderInfoFullView"
                }
              }
            }
          }
        }
      }
    },
    "/products/addonproviders/{provider_id}/versions" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getAddonProviderVersions",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/products/addonproviders/{provider_id}/informations" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getAddonProviderInfos",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/products/instances" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getAvailableInstances",
        "parameters" : [ {
          "name" : "for",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AvailableInstanceView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/packages" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getAvailablePackages",
        "parameters" : [ {
          "name" : "coupon",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orgaId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "currency",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PackageView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/prices" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getExcahngeRates",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DropPriceView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/countries" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getCountries",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/products/countrycodes" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getCountryCodes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/products/flavors" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getFlavors",
        "parameters" : [ {
          "name" : "context",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FlavorView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/instances/{type}-{version}" : {
      "get" : {
        "tags" : [ "Products" ],
        "operationId" : "getInstance",
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "for",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "app",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableInstanceView"
                }
              }
            }
          }
        }
      }
    },
    "/vat_check" : {
      "get" : {
        "tags" : [ "Payment" ],
        "operationId" : "checkVat",
        "parameters" : [ {
          "name" : "country",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vat",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VatResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserView"
                }
              }
            }
          }
        },
        "x-service" : "user",
        "x-function" : "get"
      }
    },
    "/users/{id}/applications" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "listUserApplications",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "user",
        "x-function" : "listApplications"
      }
    },
    "/users" : {
      "post" : {
        "tags" : [ "User" ],
        "operationId" : "createUser",
        "parameters" : [ {
          "name" : "invitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonBetaInvitationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeUser"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserView"
                }
              }
            }
          }
        },
        "x-service" : "user",
        "x-function" : "create"
      }
    },
    "/users/{userId}/git-info" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "getUserGitInformations",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "x-service" : "user",
        "x-function" : "getGitInformations"
      }
    },
    "/self/instances" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfInstancesForAllApps",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuperNovaInstanceMap"
                }
              }
            }
          }
        }
      }
    },
    "/self/payment-info" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfPaymentInfo",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentInfoView"
                }
              }
            }
          }
        }
      }
    },
    "/self/validate_email" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "validateEmail",
        "parameters" : [ {
          "name" : "validationKey",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/avatar" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "setUserAvatarFromString",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAvatarSource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UrlView"
                }
              }
            }
          }
        }
      }
    },
    "/self" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getUser_1",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "editUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeUser"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteUser",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/change_password" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "changeUserPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabePassword"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/confirmation_email" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getConfirmationEmail",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/id" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getId",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/tags" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfAddonTagsByAddonId",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/tags/{tag}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "addSelfAddonTagByAddonId",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfAddonTagByAddonId",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/sso" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getAddonSSOData",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonSSOData"
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/applications" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationsLinkedToAddonByAddonId",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/env" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfAddonEnvByAddonId",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonEnvironmentView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfAddonById",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "renameAddon",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProvision"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deprovisionSelfAddonById",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/plan" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "changeSelfAddonPlanByAddonId",
        "parameters" : [ {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabePlanChange"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      }
    },
    "/self/addons" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfAddons",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "provisionSelfAddon",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProvision"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddonView"
                }
              }
            }
          }
        }
      }
    },
    "/self/addons/preorders" : {
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "preorderSelfAddon",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeAddonProvision"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRendering"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/dependencies" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationDependenciesByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/dependencies/env" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationDependenciesEnvByAppId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/dependencies/{dependencyId}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "addSelfApplicationDependencyByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dependencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfApplicationDependencyByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dependencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/dependents" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationDependents",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/tags/{tag}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "addSelfApplicationTagByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfApplicationTagAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/tags" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationTagsByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/vhosts/{domain}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "addSelfVhostByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "removeSelfVhostByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/vhosts/favourite" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfFavouriteVhostByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VhostView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "markSelfFavouriteVhostByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VhostView"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VhostView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "unmarkSelfFavouriteVhostByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/vhosts" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfVhostByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VhostView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/env/{envName}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "editSelfApplicationEnvByAppIdAndEnvName",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "envName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeValue"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "removeSelfApplicationEnvByAppIdAndEnvName",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "envName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/env" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationEnvByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonEnvironmentView"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "editSelfApplicationEnvByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/addons/env" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfEnvOfAddonsLinkedToApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LinkedAddonEnvironmentView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/exposed_env" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfExposedEnvByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "updateSelfExposedEnvByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "editSelfApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeApplication"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/branches" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationBranchesByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/branch" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "setSelfApplicationBranchByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeBranch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/instances" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationInstancesByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withDeleted",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SuperNovaInstanceView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "redeploySelfApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commit",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "useCache",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "undeploySelfApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/instances/{instanceId}" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplicationInstanceByAppAndInstanceId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuperNovaInstanceView"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/addons" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfAddonsLinkedToApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddonView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "linkSelfAddonToApplicationByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/addons/{addonId}" : {
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "unlinkSelfddonFromApplicationByAppAndAddonId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addonId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/buildflavor" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "setSelfBuildInstanceFlavorByAppId",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeBuildFlavor"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfApplications",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApplicationView"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "addSelfApplication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeApplication"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationView"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/deployments/{deploymentId}/instances" : {
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "cancelDeploy",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/deployments/{deploymentId}" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getApplicationDeployment",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deploymentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/deployments" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getApplicationDeployments",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DeploymentView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/cli_tokens" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfCliTokens",
        "parameters" : [ {
          "name" : "cli_token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CliTokenView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/consumers" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfConsumers",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "createSelfConsumer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeOAuth1Consumer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth1ConsumerView"
                }
              }
            }
          }
        }
      }
    },
    "/self/consumers/{key}" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfConsumer",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth1ConsumerView"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "updateSelfConsumer",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeOAuth1Consumer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth1ConsumerView"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfConsumer",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/self/consumers/{key}/secret" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfConsumerSecret",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretView"
                }
              }
            }
          }
        }
      }
    },
    "/self/consumptions" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getConsumptions",
        "parameters" : [ {
          "name" : "appId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "to",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "for",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/self/credits" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfAmount",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DropCountView"
                }
              }
            }
          }
        }
      }
    },
    "/self/emails/{email}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "addEmailAddress",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "removeEmailAddress",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/emails" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getEmailAddresses",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/keys/{key}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "addSshKey",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "removeSshKey",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/self/keys" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSshKeys",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SshKeyView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self/mfa/{kind}/backupcodes" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfBackupCodes",
        "parameters" : [ {
          "name" : "kind",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MFARecoveryCode"
                  }
                }
              }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "getBackupCodes"
      }
    },
    "/self/mfa/{kind}" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "setSelfFavouriteMFA",
        "parameters" : [ {
          "name" : "kind",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeMFAFav"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "setFavouriteMFA"
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "createSelfMFA",
        "parameters" : [ {
          "name" : "kind",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "createMFA"
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfMFA",
        "parameters" : [ {
          "name" : "kind",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "deleteMFA"
      }
    },
    "/self/mfa/{kind}/confirmation" : {
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "validateSelfMFA",
        "parameters" : [ {
          "name" : "kind",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeMFACreds"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "validateMFA"
      }
    },
    "/self/payments/tokens/stripe" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfStripeToken",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BraintreeToken"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getStripeToken"
      }
    },
    "/self/payments/billings" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfInvoices",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceRendering"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getInvoices"
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "buySelfDrops",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannaBuyPackage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRendering"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "buyDrops"
      }
    },
    "/self/payments/billings/{bid}.pdf" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfPdfInvoiceById",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/pdf" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getInvoiceAsPDF"
      }
    },
    "/self/payments/billings/{bid}" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfInvoice",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRendering"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getInvoice"
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "chooseSelfPaymentProvider",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentProviderSelection"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NextInPaymentFlow"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "choosePaymentProvider"
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfPurchaseOrder",
        "parameters" : [ {
          "name" : "bid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "deletePurchaseOrder"
      }
    },
    "/self/payments/methods" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfPaymentMethods",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentMethodView"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getPaymentMethods"
      },
      "post" : {
        "tags" : [ "Self" ],
        "operationId" : "addSelfPaymentMethod",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethodView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "addPaymentMethod"
      }
    },
    "/self/payments/methods/{mId}" : {
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfCard",
        "parameters" : [ {
          "name" : "mId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "deleteCard"
      }
    },
    "/self/payments/recurring" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfRecurrentPayment",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecurrentPaymentView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getRecurrentPayment"
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "deleteSelfRecurrentPayment",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "deleteRecurrentPayment"
      }
    },
    "/self/payments/fullprice/{price}" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfPriceWithTax",
        "parameters" : [ {
          "name" : "price",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PriceWithTaxInfo"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getPriceWithTax"
      }
    },
    "/self/payments/methods/default" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfDefaultMethod",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethodView"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getDefaultMethod"
      },
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "setSelfDefaultMethod",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentData"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "setDefaultMethod"
      }
    },
    "/self/payments/monthlyinvoice" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSelfMonthlyInvoice",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "getMonthlyInvoice"
      }
    },
    "/self/payments/monthlyinvoice/maxcredit" : {
      "put" : {
        "tags" : [ "Self" ],
        "operationId" : "setSelfMaxCreditsPerMonth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WannabeMaxCredits"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WannabeMaxCredits"
                }
              }
            }
          }
        },
        "deprecated" : true,
        "x-service" : "self",
        "x-function" : "setMaxCreditsPerMonth"
      }
    },
    "/self/tokens/{token}" : {
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "revokeSelfToken",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "revokeToken"
      }
    },
    "/self/tokens" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "listSelfTokens",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OAuth1AccessTokenView"
                  }
                }
              }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "listTokens"
      },
      "delete" : {
        "tags" : [ "Self" ],
        "operationId" : "revokeSelfTokens",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "x-service" : "self",
        "x-function" : "revokeTokens"
      }
    },
    "/summary" : {
      "get" : {
        "tags" : [ "Self" ],
        "operationId" : "getSummary",
        "parameters" : [ {
          "name" : "full",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Summary"
                }
              }
            }
          }
        },
        "x-service" : "summary",
        "x-function" : "get"
      }
    }
  },
  "components" : {
    "schemas" : {
      "Message" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "error", "warning", "success", "info" ]
          }
        }
      },
      "WannabeAuthorization" : {
        "type" : "object",
        "properties" : {
          "verb" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string"
          },
          "authorization" : {
            "type" : "string"
          },
          "payload" : {
            "type" : "string"
          },
          "nonce" : {
            "type" : "string"
          },
          "mac" : {
            "type" : "string"
          }
        }
      },
      "OAuthApplicationView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "owner" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "gitUrl" : {
            "type" : "string"
          },
          "defaultBranch" : {
            "type" : "string"
          },
          "priv" : {
            "type" : "boolean"
          }
        }
      },
      "OAuthTransactionView" : {
        "type" : "object",
        "properties" : {
          "transactionId" : {
            "type" : "string"
          },
          "redirectUri" : {
            "type" : "string"
          }
        }
      },
      "SshKeyView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "fingerprint" : {
            "type" : "string"
          }
        }
      },
      "GithubCommit" : {
        "type" : "object",
        "properties" : {
          "sha" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "GithubWebhookPayload" : {
        "type" : "object",
        "properties" : {
          "ref" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          },
          "repository" : {
            "$ref" : "#/components/schemas/GithubWebhookRepository"
          },
          "sender" : {
            "$ref" : "#/components/schemas/GithubWebhookSender"
          },
          "pusher" : {
            "$ref" : "#/components/schemas/GithubWebhookPusher"
          },
          "head_commit" : {
            "$ref" : "#/components/schemas/GithubCommit"
          }
        }
      },
      "GithubWebhookPusher" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          }
        }
      },
      "GithubWebhookRepository" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "GithubWebhookSender" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "OrganisationView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "billingEmail" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "VAT" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          },
          "vatState" : {
            "type" : "string",
            "enum" : [ "INVALID", "PENDING_VALIDATION", "VALID", "NOT_NEEDED", "NOT_APPLICABLE" ]
          },
          "customerFullName" : {
            "type" : "string"
          },
          "canPay" : {
            "type" : "boolean"
          },
          "cleverEnterprise" : {
            "type" : "boolean"
          },
          "emergencyNumber" : {
            "type" : "string"
          },
          "canSEPA" : {
            "type" : "boolean"
          },
          "isTrusted" : {
            "type" : "boolean"
          }
        }
      },
      "WannabeOrganisation" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "customerFullName" : {
            "type" : "string"
          },
          "VAT" : {
            "type" : "string"
          },
          "billingEmail" : {
            "type" : "string"
          }
        }
      },
      "PaymentInfoView" : {
        "type" : "object",
        "properties" : {
          "fromOrga" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "vatNumber" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "UrlView" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          }
        }
      },
      "WannabeAvatarSource" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          }
        }
      },
      "NamespaceView" : {
        "type" : "object",
        "properties" : {
          "namespace" : {
            "type" : "string"
          }
        }
      },
      "AddonFeatureInstanceView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BOOLEAN", "INTERVAL", "FILESIZE", "NUMBER", "PERCENTAGE", "STRING", "OBJECT", "BYTES", "BOOLEAN_SHARED" ]
          },
          "value" : {
            "type" : "string"
          },
          "computable_value" : {
            "type" : "string"
          },
          "name_code" : {
            "type" : "string"
          }
        }
      },
      "AddonFeatureView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BOOLEAN", "INTERVAL", "FILESIZE", "NUMBER", "PERCENTAGE", "STRING", "OBJECT", "BYTES", "BOOLEAN_SHARED" ]
          },
          "name_code" : {
            "type" : "string"
          }
        }
      },
      "AddonPlanView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "price" : {
            "type" : "number"
          },
          "price_id" : {
            "type" : "string"
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddonFeatureInstanceView"
            }
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AddonProviderInfoFullView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "website" : {
            "type" : "string"
          },
          "supportEmail" : {
            "type" : "string"
          },
          "googlePlusName" : {
            "type" : "string"
          },
          "twitterName" : {
            "type" : "string"
          },
          "analyticsId" : {
            "type" : "string"
          },
          "shortDesc" : {
            "type" : "string"
          },
          "longDesc" : {
            "type" : "string"
          },
          "logoUrl" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ALPHA", "BETA_PRIV", "BETA_PUB", "RELEASE", "DELETED" ]
          },
          "openInNewTab" : {
            "type" : "boolean"
          },
          "canUpgrade" : {
            "type" : "boolean"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "plans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddonPlanView"
            }
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddonFeatureView"
            }
          }
        }
      },
      "AddonProviderInfoView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "website" : {
            "type" : "string"
          },
          "supportEmail" : {
            "type" : "string"
          },
          "googlePlusName" : {
            "type" : "string"
          },
          "twitterName" : {
            "type" : "string"
          },
          "analyticsId" : {
            "type" : "string"
          },
          "shortDesc" : {
            "type" : "string"
          },
          "longDesc" : {
            "type" : "string"
          },
          "logoUrl" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ALPHA", "BETA_PRIV", "BETA_PUB", "RELEASE", "DELETED" ]
          },
          "openInNewTab" : {
            "type" : "boolean"
          },
          "canUpgrade" : {
            "type" : "boolean"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "WannabeAddonProviderInfos" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "website" : {
            "type" : "string"
          },
          "supportEmail" : {
            "type" : "string"
          },
          "googlePlusName" : {
            "type" : "string"
          },
          "twitterName" : {
            "type" : "string"
          },
          "analyticsId" : {
            "type" : "string"
          },
          "shortDesc" : {
            "type" : "string"
          },
          "longDesc" : {
            "type" : "string"
          },
          "logoUrl" : {
            "type" : "string"
          }
        }
      },
      "WannabeAddonFeature" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BOOLEAN", "INTERVAL", "FILESIZE", "NUMBER", "PERCENTAGE", "STRING", "OBJECT", "BYTES", "BOOLEAN_SHARED" ]
          }
        }
      },
      "WannabeAddonPlan" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "price" : {
            "type" : "number"
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddonFeatureInstanceView"
            }
          }
        }
      },
      "AddonProviderSSOData" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "macaroon" : {
            "type" : "string"
          }
        }
      },
      "WannabeAddonProvider" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "api" : {
            "$ref" : "#/components/schemas/WannabeAddonProviderAPI"
          }
        }
      },
      "WannabeAddonProviderAPI" : {
        "type" : "object",
        "properties" : {
          "config_vars" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "password" : {
            "type" : "string"
          },
          "sso_salt" : {
            "type" : "string"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "production" : {
            "$ref" : "#/components/schemas/WannabeAddonProviderAPIUrl"
          },
          "test" : {
            "$ref" : "#/components/schemas/WannabeAddonProviderAPIUrl"
          }
        }
      },
      "WannabeAddonProviderAPIUrl" : {
        "type" : "object",
        "properties" : {
          "base_url" : {
            "type" : "string"
          },
          "sso_url" : {
            "type" : "string"
          }
        }
      },
      "ApplicationView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "zone" : {
            "type" : "string"
          },
          "instance" : {
            "$ref" : "#/components/schemas/InstanceView"
          },
          "deployment" : {
            "$ref" : "#/components/schemas/DeploymentInfoView"
          },
          "vhosts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VhostView"
            }
          },
          "creationDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "last_deploy" : {
            "type" : "integer",
            "format" : "int32"
          },
          "archived" : {
            "type" : "boolean"
          },
          "stickySessions" : {
            "type" : "boolean"
          },
          "homogeneous" : {
            "type" : "boolean"
          },
          "favourite" : {
            "type" : "boolean"
          },
          "cancelOnPush" : {
            "type" : "boolean"
          },
          "webhookUrl" : {
            "type" : "string"
          },
          "webhookSecret" : {
            "type" : "string"
          },
          "separateBuild" : {
            "type" : "boolean"
          },
          "buildFlavor" : {
            "$ref" : "#/components/schemas/FlavorView"
          },
          "ownerId" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "SHOULD_BE_UP", "SHOULD_BE_DOWN", "WANTS_TO_BE_UP", "MODERATED", "DEFAULT_OF_PAYMENT" ]
          },
          "commitId" : {
            "type" : "string"
          },
          "appliance" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "forceHttps" : {
            "type" : "string",
            "enum" : [ "ENABLED", "DISABLED" ]
          },
          "deployUrl" : {
            "type" : "string"
          }
        }
      },
      "DeploymentInfoView" : {
        "type" : "object",
        "properties" : {
          "shutdownable" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "GIT", "SFTP", "FTP" ]
          },
          "repoState" : {
            "type" : "string",
            "enum" : [ "CREATING", "CREATED", "NOT_NEEDED", "DELETED" ]
          },
          "url" : {
            "type" : "string"
          },
          "httpUrl" : {
            "type" : "string"
          }
        }
      },
      "FlavorView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "mem" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cpus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "gpus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "disk" : {
            "type" : "integer",
            "format" : "int32"
          },
          "price" : {
            "type" : "number"
          },
          "available" : {
            "type" : "boolean"
          },
          "microservice" : {
            "type" : "boolean"
          },
          "machine_learning" : {
            "type" : "boolean"
          },
          "nice" : {
            "type" : "integer",
            "format" : "int32"
          },
          "price_id" : {
            "type" : "string"
          },
          "memory" : {
            "$ref" : "#/components/schemas/ValueWithUnit"
          }
        }
      },
      "InstanceVariantView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "slug" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "deployType" : {
            "type" : "string"
          },
          "logo" : {
            "type" : "string"
          }
        }
      },
      "InstanceView" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "variant" : {
            "$ref" : "#/components/schemas/InstanceVariantView"
          },
          "minInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxAllowedInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minFlavor" : {
            "$ref" : "#/components/schemas/FlavorView"
          },
          "maxFlavor" : {
            "$ref" : "#/components/schemas/FlavorView"
          },
          "flavors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlavorView"
            }
          },
          "defaultEnv" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "lifetime" : {
            "type" : "string",
            "enum" : [ "REGULAR", "MIGRATION", "TASK" ]
          },
          "instanceAndVersion" : {
            "type" : "string"
          }
        }
      },
      "ValueWithUnit" : {
        "type" : "object",
        "properties" : {
          "unit" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          },
          "formatted" : {
            "type" : "string"
          }
        }
      },
      "VhostView" : {
        "type" : "object",
        "properties" : {
          "fqdn" : {
            "type" : "string"
          }
        }
      },
      "AddonEnvironmentView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "AddonView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "realId" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "provider" : {
            "$ref" : "#/components/schemas/AddonProviderInfoView"
          },
          "plan" : {
            "$ref" : "#/components/schemas/AddonPlanView"
          },
          "creationDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "configKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SetupIntentView" : {
        "type" : "object",
        "properties" : {
          "ownerId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "clientSecret" : {
            "type" : "string"
          },
          "customer" : {
            "type" : "string"
          }
        },
        "description" : "PaymentIntent id from Stripe"
      },
      "WannabeAddonProvision" : {
        "required" : [ "plan", "providerId", "region" ],
        "type" : "object",
        "properties" : {
          "providerId" : {
            "type" : "string",
            "description" : "Id of the add-on provider"
          },
          "plan" : {
            "type" : "string",
            "description" : "Id of the price plan"
          },
          "linkedApp" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the future add-on, for display."
          },
          "region" : {
            "type" : "string",
            "description" : "Region to provision the add-on in."
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Options to add to the provision call."
            },
            "description" : "Options to add to the provision call."
          },
          "version" : {
            "type" : "string",
            "description" : "Version of the add-on"
          },
          "paymentIntent" : {
            "$ref" : "#/components/schemas/SetupIntentView"
          },
          "paymentMethodType" : {
            "type" : "string",
            "description" : "Payment method type",
            "enum" : [ "CREDITCARD", "PAYPAL", "SEPA_DEBIT" ]
          },
          "sepaSourceId" : {
            "type" : "string",
            "description" : "Id of the SEPA debit source"
          }
        }
      },
      "SuperNovaFlavor" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "mem" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cpus" : {
            "type" : "integer",
            "format" : "int32"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "SuperNovaInstanceView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "ip" : {
            "type" : "string"
          },
          "appPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "BOOTING", "STARTING", "DEPLOYING", "MIGRATION_IN_PROGRESS", "TASK_IN_PROGRESS", "READY", "UP", "GHOST", "STOPPING", "DELETED" ]
          },
          "flavor" : {
            "$ref" : "#/components/schemas/SuperNovaFlavor"
          },
          "commit" : {
            "type" : "string"
          },
          "deployNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deployId" : {
            "type" : "string"
          },
          "instanceNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "displayName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "WannabePlanChange" : {
        "type" : "object",
        "properties" : {
          "planId" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "InvoiceLineRendering" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "subDescription" : {
            "type" : "string"
          },
          "pack" : {
            "type" : "string"
          },
          "VAT" : {
            "type" : "number"
          },
          "price" : {
            "type" : "number"
          }
        }
      },
      "InvoiceRendering" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PAID", "CANCELED", "PROCESSING", "FAIL", "REFUNDED", "PENDING", "TEST", "TOBEREFUNDED", "WONTPAY", "PAYMENT_HELD" ]
          },
          "emissionDate" : {
            "type" : "string"
          },
          "paymentDate" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "target" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "zipCode" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "countryCode" : {
            "type" : "string"
          },
          "vatNumber" : {
            "type" : "string"
          },
          "fromSubscription" : {
            "type" : "boolean"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceLineRendering"
            }
          },
          "originalTotal" : {
            "type" : "number"
          },
          "totalHT" : {
            "type" : "number"
          },
          "totalVAT" : {
            "type" : "number"
          },
          "totalTTC" : {
            "type" : "number"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "INVOICE", "CREDITNOTE", "PURCHASE_ORDER", "ADDON_PREORDER" ]
          },
          "payingUser" : {
            "$ref" : "#/components/schemas/OrganisationMemberView"
          },
          "errorCode" : {
            "type" : "string"
          },
          "errorShortMsg" : {
            "type" : "string"
          },
          "errorLongMsg" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "targetId" : {
            "type" : "string"
          },
          "forId" : {
            "type" : "string"
          },
          "customerOrderId" : {
            "type" : "string"
          },
          "customerCostCenter" : {
            "type" : "string"
          },
          "vatRate" : {
            "type" : "number"
          },
          "payWhen" : {
            "type" : "string",
            "enum" : [ "PAY_NOW", "PAY_NEXT_MONTH" ]
          }
        }
      },
      "OrganisationMemberUserView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          },
          "preferredMFA" : {
            "type" : "string",
            "enum" : [ "NONE", "TOTP" ]
          }
        }
      },
      "OrganisationMemberView" : {
        "type" : "object",
        "properties" : {
          "member" : {
            "$ref" : "#/components/schemas/OrganisationMemberUserView"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "NONE", "ADMIN", "ACCOUNTING", "DEVELOPER", "MANAGER" ]
          },
          "job" : {
            "type" : "string"
          }
        }
      },
      "Author" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "DeploymentView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "uuid" : {
            "type" : "string"
          },
          "date" : {
            "type" : "integer",
            "format" : "int64"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "TASK_RUNNING", "WIP", "FAIL", "CANCELLED", "OK" ]
          },
          "action" : {
            "type" : "string",
            "enum" : [ "DEPLOY", "UNDEPLOY", "UPSCALE", "DOWNSCALE", "REPLACE", "CANCEL", "NONE" ]
          },
          "commit" : {
            "type" : "string"
          },
          "cause" : {
            "type" : "string"
          },
          "instances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "author" : {
            "$ref" : "#/components/schemas/Author"
          }
        }
      },
      "WannabeValue" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          }
        }
      },
      "LinkedAddonEnvironmentView" : {
        "type" : "object",
        "properties" : {
          "provider_id" : {
            "type" : "string"
          },
          "addon_id" : {
            "type" : "string"
          },
          "addon_name" : {
            "type" : "string"
          },
          "env" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddonEnvironmentView"
            }
          }
        }
      },
      "TcpRedirView" : {
        "type" : "object",
        "properties" : {
          "namespace" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "WannabeNamespace" : {
        "type" : "object",
        "properties" : {
          "namespace" : {
            "type" : "string"
          },
          "minPort" : {
            "type" : "integer",
            "format" : "int64"
          },
          "maxPort" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "WannabeBranch" : {
        "type" : "object",
        "properties" : {
          "branch" : {
            "type" : "string"
          }
        }
      },
      "WannabeApplication" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "zone" : {
            "type" : "string"
          },
          "deploy" : {
            "type" : "string"
          },
          "shutdownable" : {
            "type" : "boolean"
          },
          "instanceType" : {
            "type" : "string"
          },
          "instanceVersion" : {
            "type" : "string"
          },
          "instanceVariant" : {
            "type" : "string",
            "format" : "uuid"
          },
          "instanceLifetime" : {
            "type" : "string",
            "enum" : [ "REGULAR", "MIGRATION", "TASK" ]
          },
          "minInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minFlavor" : {
            "type" : "string"
          },
          "maxFlavor" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "archived" : {
            "type" : "boolean"
          },
          "stickySessions" : {
            "type" : "boolean"
          },
          "homogeneous" : {
            "type" : "boolean"
          },
          "favourite" : {
            "type" : "boolean"
          },
          "cancelOnPush" : {
            "type" : "boolean"
          },
          "separateBuild" : {
            "type" : "boolean"
          },
          "buildFlavor" : {
            "type" : "string"
          },
          "oauthService" : {
            "type" : "string"
          },
          "oauthAppId" : {
            "type" : "string"
          },
          "oauthApp" : {
            "$ref" : "#/components/schemas/WannabeOauthApp"
          },
          "applianceId" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "forceHttps" : {
            "type" : "string",
            "enum" : [ "ENABLED", "DISABLED" ]
          }
        }
      },
      "WannabeOauthApp" : {
        "type" : "object",
        "properties" : {
          "owner" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "WannabeBuildFlavor" : {
        "type" : "object",
        "properties" : {
          "flavorName" : {
            "type" : "string"
          }
        }
      },
      "OAuth1ConsumerView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "picture" : {
            "type" : "string"
          },
          "baseUrl" : {
            "type" : "string"
          },
          "rights" : {
            "$ref" : "#/components/schemas/OAuthRightsView"
          }
        }
      },
      "OAuthRightsView" : {
        "type" : "object",
        "properties" : {
          "almighty" : {
            "type" : "boolean"
          },
          "access_organisations" : {
            "type" : "boolean"
          },
          "manage_organisations" : {
            "type" : "boolean"
          },
          "manage_organisations_services" : {
            "type" : "boolean"
          },
          "manage_organisations_applications" : {
            "type" : "boolean"
          },
          "manage_organisations_members" : {
            "type" : "boolean"
          },
          "access_organisations_bills" : {
            "type" : "boolean"
          },
          "access_organisations_credit_count" : {
            "type" : "boolean"
          },
          "access_organisations_consumption_statistics" : {
            "type" : "boolean"
          },
          "access_personal_information" : {
            "type" : "boolean"
          },
          "manage_personal_information" : {
            "type" : "boolean"
          },
          "manage_ssh_keys" : {
            "type" : "boolean"
          }
        }
      },
      "WannabeOAuth1Consumer" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "picture" : {
            "type" : "string"
          },
          "baseUrl" : {
            "type" : "string"
          },
          "rights" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          }
        }
      },
      "SecretView" : {
        "type" : "object",
        "properties" : {
          "secret" : {
            "type" : "string"
          }
        }
      },
      "DropCountView" : {
        "type" : "object",
        "properties" : {
          "ownerId" : {
            "type" : "string"
          },
          "count" : {
            "type" : "number"
          },
          "dropPrice" : {
            "$ref" : "#/components/schemas/DropPriceView"
          }
        }
      },
      "DropPriceView" : {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          }
        }
      },
      "WannabeMember" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "type" : "string"
          },
          "job" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "BraintreeToken" : {
        "type" : "object",
        "properties" : {
          "merchantId" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          }
        }
      },
      "WannaBuyPackage" : {
        "type" : "object",
        "properties" : {
          "packageId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currency" : {
            "type" : "string"
          },
          "coupon" : {
            "type" : "string"
          },
          "dropQuantity" : {
            "type" : "number"
          }
        }
      },
      "NextInPaymentFlow" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          }
        }
      },
      "PaymentProviderSelection" : {
        "type" : "object",
        "properties" : {
          "provider" : {
            "type" : "string",
            "enum" : [ "PAYPAL", "CREDITCARD", "COUPON", "BITCOIN", "TRANSFER", "FREE", "SEPA_DEBIT" ]
          }
        }
      },
      "OwnerView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "identity" : {
            "type" : "string"
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RecurrentPaymentView" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/UserView"
          },
          "target" : {
            "$ref" : "#/components/schemas/OwnerView"
          },
          "thresholdAmount" : {
            "type" : "number"
          },
          "monthlyAmount" : {
            "type" : "number"
          },
          "threshold" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          }
        }
      },
      "UserView" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lang" : {
            "type" : "string"
          },
          "emailValidated" : {
            "type" : "boolean"
          },
          "oauthApps" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "admin" : {
            "type" : "boolean"
          },
          "canPay" : {
            "type" : "boolean"
          },
          "preferredMFA" : {
            "type" : "string",
            "enum" : [ "NONE", "TOTP" ]
          },
          "hasPassword" : {
            "type" : "boolean"
          }
        }
      },
      "PriceWithTaxInfo" : {
        "type" : "object",
        "properties" : {
          "price" : {
            "type" : "integer",
            "format" : "int64"
          },
          "taxFreePrice" : {
            "type" : "integer",
            "format" : "int64"
          },
          "vatRatio" : {
            "type" : "integer",
            "format" : "int64"
          },
          "invoicedOwner" : {
            "type" : "string"
          }
        }
      },
      "PaymentMethodView" : {
        "type" : "object",
        "properties" : {
          "ownerId" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CREDITCARD", "PAYPAL", "SEPA_DEBIT" ]
          },
          "token" : {
            "type" : "string"
          },
          "imageUrl" : {
            "type" : "string"
          },
          "isDefault" : {
            "type" : "boolean"
          },
          "holderName" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "expirationDate" : {
            "type" : "string"
          },
          "isExpired" : {
            "type" : "boolean"
          },
          "cardType" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "bankCode" : {
            "type" : "string"
          },
          "branchCode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "fingerprint" : {
            "type" : "string"
          }
        }
      },
      "PaymentData" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "NEW_CARD", "EXISTING_CARD" ]
          },
          "token" : {
            "type" : "string"
          },
          "deviceData" : {
            "type" : "string"
          }
        }
      },
      "WannabeMaxCredits" : {
        "type" : "object",
        "properties" : {
          "max" : {
            "type" : "number"
          }
        }
      },
      "EndOfInvoiceError" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "messages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "EndOfInvoiceResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "posData" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "new", "paid", "confirmed", "complete", "expired", "invalid" ]
          },
          "btcPrice" : {
            "type" : "string"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string"
          },
          "invoiceTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "currentTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "expirationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "error" : {
            "$ref" : "#/components/schemas/EndOfInvoiceError"
          }
        }
      },
      "WannabeAddonConfig" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AddonApplicationSummary" : {
        "type" : "object",
        "properties" : {
          "provider_id" : {
            "type" : "string"
          },
          "heroku_id" : {
            "type" : "string"
          },
          "callback_url" : {
            "type" : "string"
          },
          "plan" : {
            "type" : "string"
          },
          "owner_id" : {
            "type" : "string"
          }
        }
      },
      "AddonApplicationInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "config" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "callback_url" : {
            "type" : "string"
          },
          "owner_email" : {
            "type" : "string"
          },
          "owner_id" : {
            "type" : "string"
          },
          "owner_name" : {
            "type" : "string"
          },
          "owner_emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "region" : {
            "type" : "string"
          },
          "domains" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "WannabeInterAddonProvision" : {
        "type" : "object",
        "properties" : {
          "organisationId" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          },
          "providerId" : {
            "type" : "string"
          },
          "addonId" : {
            "type" : "string"
          },
          "plan" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "options" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "WannabeAddonBilling" : {
        "type" : "object",
        "properties" : {
          "cost" : {
            "type" : "number"
          }
        }
      },
      "ZoneView" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "internal" : {
            "type" : "boolean"
          },
          "correspondingRegion" : {
            "type" : "string"
          }
        }
      },
      "AvailableInstanceView" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "variant" : {
            "$ref" : "#/components/schemas/InstanceVariantView"
          },
          "description" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "comingSoon" : {
            "type" : "boolean"
          },
          "maxInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "deployments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "flavors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlavorView"
            }
          },
          "defaultFlavor" : {
            "$ref" : "#/components/schemas/FlavorView"
          },
          "buildFlavor" : {
            "$ref" : "#/components/schemas/FlavorView"
          }
        }
      },
      "PackageView" : {
        "type" : "object",
        "properties" : {
          "dropsQuantity" : {
            "type" : "number"
          },
          "dropPrice" : {
            "$ref" : "#/components/schemas/DropPriceView"
          },
          "title" : {
            "type" : "string"
          },
          "price" : {
            "type" : "number"
          },
          "originalPrice" : {
            "type" : "number"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "VatResult" : {
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          }
        }
      },
      "WannabeUser" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "zipcode" : {
            "type" : "string"
          },
          "country" : {
            "type" : "string"
          },
          "lang" : {
            "type" : "string"
          },
          "terms" : {
            "type" : "boolean"
          },
          "subscriptionSource" : {
            "type" : "string"
          }
        }
      },
      "SuperNovaInstanceMap" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "$ref" : "#/components/schemas/SuperNovaInstanceView"
        }
      },
      "WannabePassword" : {
        "type" : "object",
        "properties" : {
          "oldPassword" : {
            "type" : "string"
          },
          "newPassword" : {
            "type" : "string"
          },
          "dropTokens" : {
            "type" : "boolean"
          }
        }
      },
      "AddonSSOData" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "token" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "nav-data" : {
            "type" : "string"
          }
        }
      },
      "CliTokenView" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "secret" : {
            "type" : "string"
          }
        }
      },
      "MFARecoveryCode" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          }
        }
      },
      "WannabeMFACreds" : {
        "type" : "object",
        "properties" : {
          "revokeTokens" : {
            "type" : "boolean"
          },
          "code" : {
            "type" : "string"
          }
        }
      },
      "WannabeMFAFav" : {
        "type" : "object",
        "properties" : {
          "favourite" : {
            "type" : "boolean"
          }
        }
      },
      "OAuth1AccessTokenView" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          },
          "consumer" : {
            "$ref" : "#/components/schemas/OAuth1ConsumerView"
          },
          "creationDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastUtilisation" : {
            "type" : "integer",
            "format" : "int64"
          },
          "rights" : {
            "$ref" : "#/components/schemas/OAuthRightsView"
          }
        }
      },
      "AddonSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "realId" : {
            "type" : "string"
          },
          "providerId" : {
            "type" : "string"
          },
          "logoUrl" : {
            "type" : "string"
          }
        }
      },
      "ApplicationSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "instanceType" : {
            "type" : "string"
          },
          "instanceVariant" : {
            "type" : "string"
          },
          "variantSlug" : {
            "type" : "string"
          },
          "archived" : {
            "type" : "boolean"
          },
          "homogeneous" : {
            "type" : "boolean"
          },
          "variantLogoUrl" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "SHOULD_BE_UP", "SHOULD_BE_DOWN", "WANTS_TO_BE_UP", "MODERATED", "DEFAULT_OF_PAYMENT" ]
          },
          "commit" : {
            "type" : "string"
          }
        }
      },
      "OAuth1ConsumerSummary" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "picture" : {
            "type" : "string"
          }
        }
      },
      "OrganisationSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          },
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationSummary"
            }
          },
          "addons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddonSummary"
            }
          },
          "consumers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OAuth1ConsumerSummary"
            }
          },
          "role" : {
            "type" : "string",
            "enum" : [ "NONE", "ADMIN", "ACCOUNTING", "DEVELOPER", "MANAGER" ]
          },
          "providers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProviderSummary"
            }
          },
          "vatState" : {
            "type" : "string",
            "enum" : [ "INVALID", "PENDING_VALIDATION", "VALID", "NOT_NEEDED", "NOT_APPLICABLE" ]
          },
          "canPay" : {
            "type" : "boolean"
          },
          "canSEPA" : {
            "type" : "boolean"
          },
          "cleverEnterprise" : {
            "type" : "boolean"
          },
          "emergencyNumber" : {
            "type" : "string"
          },
          "isTrusted" : {
            "type" : "boolean"
          }
        }
      },
      "ProviderSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Summary" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/UserSummary"
          },
          "organisations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrganisationSummary"
            }
          }
        }
      },
      "UserSummary" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          },
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationSummary"
            }
          },
          "addons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddonSummary"
            }
          },
          "consumers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OAuth1ConsumerSummary"
            }
          },
          "email" : {
            "type" : "string"
          },
          "lang" : {
            "type" : "string"
          },
          "admin" : {
            "type" : "boolean"
          },
          "canSEPA" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}