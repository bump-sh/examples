---
swagger: '2.0'
info:
  title: Hiboutik Rest API
  contact:
    name: Le Hibou
    url: https://demoapi.hiboutik.com/api/
  version: '2.0'
host: demoapi.hiboutik.com
basePath: "/api"
schemes:
- https
consumes:
- application/x-www-form-urlencoded
- application/json
produces:
- application/json
paths:
  "/action_links":
    get:
      tags:
      - action_links
      summary: Returns action links/buttons
      description: 'Returns action links/buttons<br />Scope for public applications
        : none'
      operationId: api.action_links.get
      produces:
      - application/json
      responses:
        '200':
          description: Action buttons
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/action_links/":
    post:
      tags:
      - action_links
      summary: Add an action link/button
      description: Add an action link/button
      operationId: api.action_links.add
      produces:
      - application/json
      parameters:
      - name: action_link_label
        in: formData
        description: The text that will appear to the merchant. It should be task
          oriented, and not just the name of your app.
        required: true
        type: string
      - name: action_link_location
        in: formData
        description: The page where this link should appear to the merchant. Try to
          place it only where it makes logical sense for the user. In general, avoid
          adding admin links to every page.
        required: true
        type: string
        enum:
        - sale
        - product
        - salebtn
        - stock_order
        - customer
        - timestamp
        - main_menu
        - stock_transfer
        - salebtnleft
        - dailystats
        - sale_line_item
        - kitchen_screen
      - name: action_link_url
        in: formData
        description: The URL where your app is hosted, or a specific URL for this
          task. If your url is non valid or if it drops an error, your action will
          be blocked
        required: true
        type: string
      - name: action_link_type
        in: formData
        description: 'How the url should be called. page for a simple link, embedded
          to appear within a frame in the application or silent for a curl-like scheme.
          Possible values : silent , embedded, page. Default value : page'
        required: false
        type: string
        enum:
        - page
        - embedded
        - silent
      - name: action_link_target
        in: formData
        description: The target if action_link_type = page i.e. if your link opens
          a page outside the application. If empty, default value is _self.
        required: false
        type: string
        enum:
        - _self
        - _blank
        - _top
      - name: app_link_id
        in: formData
        description: The unique link id if used by an app (if already exists, it will
          be replaced). Max 80 chars.
        required: false
        type: string
      - name: action_link_store_id
        in: formData
        description: The store id where the link should be displayed. If value is
          0, the link will be displayed in every store. If empty, default value is
          0.
        required: false
        type: integer
      - name: action_link_user_id
        in: formData
        description: The user id For wich the link should be displayed. If value is
          0, the link will be displayed for all users. If empty, default value is
          0
        required: false
        type: integer
      responses:
        '200':
          description: Action link/button successfully added
        '500':
          description: Server Error
        '401':
          description: Unauthorized action
  "/action_link_exec/":
    post:
      tags:
      - action_links
      summary: Execute an action link/button. If the action_link_type is 0 (embeded)
        the action_link_url is triggered else action_link_url is returned
      description: Execute an action link/button
      operationId: api.action_links.exec
      produces:
      - application/json
      parameters:
      - name: action_link_id
        in: formData
        description: action_link_id
        required: true
        type: string
      - name: action_link_ressource_id
        in: formData
        description: action_link_ressource_id
        required: true
        type: string
      - name: store_id
        in: formData
        description: store_id
        required: true
        type: string
      - name: ip_address
        in: formData
        description: ip_address
        required: true
        type: string
      responses:
        '200':
          description: Action link/button successfully executed
        '500':
          description: Server Error
        '401':
          description: Unauthorized action
  "/action_links/{action_link_id}":
    delete:
      tags:
      - action_links
      summary: Delete action_link_id
      description: Delete action_link_id.
      operationId: api.action_links.delete
      produces:
      - application/json
      parameters:
      - name: action_link_id
        in: path
        description: action_link_id to delete
        required: true
        type: integer
      responses:
        '200':
          description: Action link/button successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/brands":
    get:
      tags:
      - brands
      summary: Returns brands by ID
      description: 'Returns brands by ID (ORDER BY brand_id DESC)<br />Scope for public
        applications : read_products<br />Results per page : 250'
      operationId: api.brands.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Brands overview
          schema:
            "$ref": "#/definitions/brands"
        '401':
          description: Unauthorized - invalid authentication
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
    put:
      tags:
      - brands
      summary: Update a brand
      description: 'Update a brand<br />Scope for public applications : write_products'
      operationId: api.brands.update
      produces:
      - application/json
      parameters:
      - name: brand_id
        in: formData
        description: ID of the brand that needs to be updated
        required: true
        type: integer
      - name: brand_name
        in: formData
        description: New name of the brand that needs to be updated
        required: false
        type: string
      responses:
        '200':
          description: Brand successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - brands
      summary: Create a new brand
      description: 'Create a new brand<br />Scope for public applications : write_products'
      operationId: api.brands.add
      produces:
      - application/json
      parameters:
      - name: brand_name
        in: formData
        description: Name of the brand that needs to be added
        required: false
        type: string
      - name: brand_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      responses:
        '201':
          description: Brand successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/calendar/events/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - calendar
      summary: Returns calendar events for store_id for a specific day
      description: 'Returns calendar events for store_id for a specific day<br />Scope
        for public applications : read_calendar_events'
      operationId: api.calendar.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Taxes
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/calendar/event/{event_id}":
    get:
      tags:
      - calendar
      summary: Returns calendar event_id
      description: 'Returns calendar event_id<br />Scope for public applications :
        read_calendar_events'
      operationId: api.calendar.event_id.index
      produces:
      - application/json
      parameters:
      - name: event_id
        in: path
        description: event_id
        required: true
        type: integer
      responses:
        '200':
          description: Taxes
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/calendar/events/":
    post:
      tags:
      - calendar
      summary: Add a calendar event
      description: 'Add a calendar event<br />Scope for public applications : write_calendar_events'
      operationId: api.calendar.add_event
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: store_id
        required: true
        type: string
      - name: title
        in: formData
        description: title
        required: true
        type: string
      - name: start
        in: formData
        description: 'start | format : YYYY-MM-DD HH:MM:SS'
        required: true
        type: string
      - name: end
        in: formData
        description: 'end | format : YYYY-MM-DD HH:MM:SS'
        required: false
        type: string
      - name: url
        in: formData
        description: url
        required: false
        type: string
      - name: allDay
        in: formData
        description: 'allDay | format : null OR 1'
        required: false
        type: string
      - name: ressource_id
        in: formData
        description: ressource_id
        required: false
        type: string
      - name: vendor_id
        in: formData
        description: vendor_id
        required: false
        type: string
      - name: customer_id
        in: formData
        description: customer_id
        required: false
        type: string
      - name: sale_id
        in: formData
        description: sale_id
        required: false
        type: string
      - name: comments
        in: formData
        description: comments
        required: false
        type: string
      - name: color
        in: formData
        description: 'color | default : #ff6600 | regex : #[A-Fa-f0-9]'
        required: false
        type: string
      - name: textColor
        in: formData
        description: 'textColor | default : #ffffff | regex : #[A-Fa-f0-9]'
        required: false
        type: string
      responses:
        '201':
          description: Tag successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
        '400':
          description: Client error
  "/calendar/events/{id}/":
    delete:
      tags:
      - calendar
      summary: Delete a calendar event
      description: 'Delete a calendar event<br />Scope for public applications : write_calendar_events'
      operationId: api.calendar.delete_event
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: Calendar id
        required: true
        type: integer
      responses:
        '200':
          description: Event successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/categories":
    get:
      tags:
      - categories
      summary: Returns categories by ID
      description: 'Returns categories by ID (ORDER BY category_id DESC)<br />Scope
        for public applications : read_products<br />Results per page : 250'
      operationId: api.categories.index
      produces:
      - application/json
      parameters:
      - name: order_by
        in: query
        description: Order by
        required: false
        type: string
        enum:
        - category_id
        - category_name
        - category_id_parent
        - category_position
      - name: sort
        in: query
        description: Sort
        required: false
        type: string
        enum:
        - DESC
        - ASC
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Categories overview
          schema:
            "$ref": "#/definitions/category"
        '401':
          description: Unauthorized action
    put:
      tags:
      - categories
      summary: Update a category
      description: 'Update a category<br />Scope for public applications : write_products'
      operationId: api.categories.update
      produces:
      - application/json
      parameters:
      - name: category_id
        in: formData
        description: ID of the category that needs to be updated
        required: true
        type: integer
      - name: category_attribute
        in: formData
        description: 'One of the following category attribute : category_name, category_id_parent,
          category_enabled, category_enabled_www, category_position, category_bck_color,
          category_color, category_desc, accounting_account, category_ref_ext'
        required: true
        type: string
        enum:
        - category_name
        - category_id_parent
        - category_enabled
        - category_enabled_www
        - category_position
        - category_bck_color
        - category_color
        - category_desc
        - accounting_account
        - category_ref_ext
      - name: new_value
        in: formData
        description: New value for the category attribute
        required: false
        type: string
      responses:
        '200':
          description: Category successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - categories
      summary: Create a new category
      description: 'Create a new category<br />Scope for public applications : write_products'
      operationId: api.categories.add
      produces:
      - application/json
      parameters:
      - name: category_name
        in: formData
        description: Name of the category that needs to be added
        required: false
        type: string
      - name: category_parent_id
        in: formData
        description: Parent ID of the category that needs to be added
        required: false
        type: integer
      - name: category_enabled
        in: formData
        description: Enabled ? 0|1 (default:1)
        required: false
        type: integer
      - name: category_bck_color
        in: formData
        description: Background color (default:#FF8C00)
        required: false
        type: string
      - name: category_color
        in: formData
        description: Font color (default:#FFFFFF)
        required: false
        type: string
      - name: category_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      responses:
        '201':
          description: Brand successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/credit_notes/{store_id}":
    get:
      tags:
      - credit notes
      summary: Returns pending credit notes in a store_id
      description: 'Returns pending credit notes in a store_id<br />Scope for public
        applications : read_reports<br />Results per page : 250'
      operationId: api.credit_notes.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Open sales
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers/":
    get:
      tags:
      - customers
      summary: Returns customers by ID
      description: 'Returns customers by ID (ORDER BY customers_id DESC)<br />Scope
        for public applications : read_customers<br />Results per page : 250'
      operationId: api.customers.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customers overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - customers
      summary: Create a new customer
      description: 'Create a new customer<br />Scope for public applications : write_customers'
      operationId: api.customers.add
      produces:
      - application/json
      parameters:
      - name: customers_first_name
        in: formData
        description: First name of the customer that needs to be added
        required: false
        type: string
      - name: customers_last_name
        in: formData
        description: Last name of the customer that needs to be added
        required: false
        type: string
      - name: customers_company
        in: formData
        description: Company of the customer that needs to be added
        required: false
        type: string
      - name: customers_email
        in: formData
        description: Email of the customer that needs to be added
        required: false
        type: string
      - name: customers_country
        in: formData
        description: Country of the customer that needs to be added (iso_code_3/iso_alpha3)
        required: false
        type: string
      - name: customers_tax_number
        in: formData
        description: Tax number of the customer that needs to be added
        required: false
        type: string
      - name: customers_phone_number
        in: formData
        description: Phone number of the customer that needs to be added
        required: false
        type: string
      - name: customers_birth_date
        in: formData
        description: Birth date of the customer that needs to be added (YYYY-MM-DD)
        required: false
        type: string
      - name: customers_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      - name: customers_misc
        in: formData
        description: Misc
        required: false
        type: string
      responses:
        '201':
          description: Customer successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_birthday/{month}/{day}":
    get:
      tags:
      - customers
      summary: Returns customers born on a specific day
      description: 'Returns customers born on a specific day<br />Scope for public
        applications : read_customers'
      operationId: api.customers_birthday.index
      produces:
      - application/json
      parameters:
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Customers lists
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers/lists/":
    get:
      tags:
      - customers
      summary: Returns customers lists by ID
      description: 'Returns customers lists (ORDER BY list_id DESC)<br />Scope for
        public applications : read_customers<br />Results per page : 250'
      operationId: api.customers_lists.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customers lists overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers/lists/{list_id}":
    get:
      tags:
      - customers
      summary: Returns customers from a specific list
      description: 'Returns customers from a specific list<br />Scope for public applications
        : read_customers<br />Results per page : 250'
      operationId: api.customers_lists.list_id.search
      produces:
      - application/json
      parameters:
      - name: list_id
        in: path
        description: List ID
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customers details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/number_of_customers":
    post:
      tags:
      - customers
      summary: Set number of customers in shop_id at date
      description: 'Set number of customers in shop_id at date<br />Scope for public
        applications : write_reports'
      operationId: api.customers.set_number
      produces:
      - application/json
      parameters:
      - name: number_of_customers
        in: formData
        description: Number of customers
        required: false
        type: string
      - name: date
        in: formData
        description: 'Date | format : YYYY-MM-DD'
        required: false
        type: string
      - name: shop_id
        in: formData
        description: shop_id
        required: false
        type: integer
      responses:
        '200':
          description: Number of customers successfully saved
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_addresses/{address_id}":
    get:
      tags:
      - customers
      summary: Returns details of a customer address
      description: 'Returns details of a customer address<br />Scope for public applications
        : read_customers'
      operationId: api.customers_addresses.address_id
      produces:
      - application/json
      parameters:
      - name: address_id
        in: path
        description: address_id
        required: true
        type: integer
      responses:
        '200':
          description: Sale details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    delete:
      tags:
      - customers
      summary: Delete a customer address
      description: 'Delete a customer address<br />Scope for public applications :
        write_customers'
      operationId: api.customers_addresses.delete
      produces:
      - application/json
      parameters:
      - name: address_id
        in: path
        description: address_id
        required: true
        type: integer
      responses:
        '200':
          description: Address successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_addresses":
    post:
      tags:
      - customers
      summary: Add a customer address
      description: 'Add a customer address<br />Scope for public applications : write_customers'
      operationId: api.customers_addresses.add
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: formData
        description: customers_id
        required: false
        type: integer
      responses:
        '201':
          description: Customer address successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_addresses/{address_id}/":
    put:
      tags:
      - customers
      summary: Update a customer address
      description: 'Update a customer address<br />Scope for public applications :
        write_customers'
      operationId: api.customers_addresses.update
      produces:
      - application/json
      parameters:
      - name: address_id
        in: path
        description: address_id
        required: true
        type: integer
      - name: address_attribute
        in: formData
        description: 'One of the following address attribute : gender (0:unknown|1:male|2:female),
          first_name, last_name, email, phone, company, address, zip_code, city, state,
          country (iso_code_3), display (0|1), other, default (0|1)'
        required: true
        type: string
        enum:
        - gender
        - first_name
        - last_name
        - email
        - phone
        - company
        - address
        - zip_code
        - city
        - state
        - country
        - display
        - other
        - default
      - name: new_value
        in: formData
        description: New value for the address attribute
        required: false
        type: string
      responses:
        '200':
          description: Product attribute successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customer/{customers_id}":
    get:
      tags:
      - customers
      summary: Returns details of a customers_id
      description: 'Returns details of a customers_id<br />Scope for public applications
        : read_customers'
      operationId: api.customer.customers_id
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: path
        description: customers_id
        required: true
        type: integer
      responses:
        '200':
          description: Customer details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    delete:
      tags:
      - customers
      summary: Delete a customer
      description: 'Delete a customer<br />Scope for public applications : write_customers'
      operationId: api.customer.delete
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: path
        description: customers_id
        required: true
        type: integer
      responses:
        '200':
          description: Customer successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customer/{customers_id}/products_solds/":
    get:
      tags:
      - customers
      summary: Returns products sold to a specific customers_id
      description: 'Returns products sold to a specific customers_id (ORDER BY date_z
        DESC)<br />Scope for public applications : read_customers<br />Results per
        page : 250'
      operationId: api.customer.customers_id.products_solds
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: path
        description: customers_id
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customer details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customer/{customers_id}/":
    put:
      tags:
      - customers
      summary: Update a customer
      description: 'Update a customer<br />Scope for public applications : write_customers'
      operationId: api.customer.update
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: path
        description: ID of the customer
        required: true
        type: integer
      - name: customers_attribute
        in: formData
        description: 'One of the following customer attribute : gender (0:unknown|1:male|2:female),
          last_name, first_name, email, company, phone, vat, country, date_of_birth,
          customers_code, comments, intial_loyalty_points, validity, customers_id_referrer,
          accounting_account, customers_ref_ext, password, customers_misc'
        required: true
        type: string
        enum:
        - gender
        - last_name
        - first_name
        - email
        - company
        - phone
        - vat
        - country
        - date_of_birth
        - customers_code
        - comments
        - intial_loyalty_points
        - validity
        - customers_id_referrer
        - accounting_account
        - customers_ref_ext
        - password
        - customers_misc
      - name: new_value
        in: formData
        description: New value for the customers_attribute
        required: false
        type: string
      responses:
        '200':
          description: Customer successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_credit/{customers_id}":
    get:
      tags:
      - customers_credit
      summary: Returns store credit lines for a customers_id
      description: 'Returns store credit lines for a customers_id<br />Scope for public
        applications : read_store_credit<br />Results per page : 250'
      operationId: api.customers_credit.customers_id
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: path
        description: customers_id
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customers store credit details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_credit/":
    post:
      tags:
      - customers_credit
      summary: Add a store credit line to a customers_id
      description: 'Add a store credit line to a customers_id<br />Scope for public
        applications : write_store_credit'
      operationId: api.customers_credit.add_line
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: Store ID
        required: true
        type: integer
      - name: customers_id
        in: formData
        description: customers_id
        required: true
        type: integer
      - name: amount
        in: formData
        description: amount
        required: true
        type: number
      - name: currency_code
        in: formData
        description: Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes
        required: true
        type: string
      - name: payment_type
        in: formData
        description: payment_type
        required: true
        type: string
      - name: comments
        in: formData
        description: comments
        required: false
        type: string
      responses:
        '200':
          description: Credit line successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/tags/customers/":
    get:
      tags:
      - customers
      - tags
      summary: Returns tags for customers
      description: 'Returns tags for customers<br />Scope for public applications
        : read_customers'
      operationId: api.tags.customers
      produces:
      - application/json
      responses:
        '200':
          description: Tags
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_tags/{customer_id}":
    get:
      tags:
      - customers
      - tags
      summary: Returns tags for a specific customer_id
      description: 'Returns tags for a specific customer_id<br />Scope for public
        applications : read_customers'
      operationId: api.tags.customer_id
      produces:
      - application/json
      parameters:
      - name: customer_id
        in: path
        description: Customer ID
        required: true
        type: integer
      responses:
        '200':
          description: Tag ID
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - customers
      - tags
      summary: Add a tag to a specific customer_id
      description: 'Add a tag to a specific customer_id<br />Scope for public applications
        : write_customers'
      operationId: api.customers_tags.add
      produces:
      - application/json
      parameters:
      - name: customer_id
        in: path
        description: Customer ID for which you need to add a tag ID
        required: true
        type: integer
      - name: tag_id
        in: formData
        description: Tag ID that needs to be added
        required: true
        type: integer
      responses:
        '201':
          description: Tag successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_tags/{customer_id}/{tag_id}":
    delete:
      tags:
      - customers
      - tags
      summary: Delete a tag to a specific customer_id
      description: 'Delete a tag to a specific customer_id<br />Scope for public applications
        : write_customers'
      operationId: api.customers_tags.delete
      produces:
      - application/json
      parameters:
      - name: customer_id
        in: path
        description: Customer ID for which you need to delete a tag ID
        required: true
        type: integer
      - name: tag_id
        in: path
        description: Tag ID that needs to be deleted. 0 to delete all tags
        required: true
        type: integer
      responses:
        '200':
          description: Tag successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_inputs/":
    get:
      tags:
      - products
      - inventory_inputs
      summary: Returns the list of stock orders
      description: 'Returns the list of stock orders<br />Scope for public applications
        : read_inventory<br />Results per page : 250'
      operationId: api.inventory_inputs.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Inventory inputs
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - products
      - inventory_inputs
      summary: Create a stock order
      description: 'Create a stock order<br />Scope for public applications : write_inventory'
      operationId: api.inventory_inputs.add
      produces:
      - application/json
      parameters:
      - name: stock_id
        in: formData
        description: Stock ID
        required: true
        type: integer
      - name: supplier_id
        in: formData
        description: Supplier ID
        required: false
        type: integer
      - name: label
        in: formData
        description: Inventory input label
        required: false
        type: string
      responses:
        '201':
          description: Customers address successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_inputs/{inventory_input_id}":
    get:
      tags:
      - products
      - inventory_inputs
      summary: Returns details of a stock order
      description: 'Returns details of a stock order<br />Scope for public applications
        : read_inventory'
      operationId: api.inventory_inputs_info.index
      produces:
      - application/json
      parameters:
      - name: inventory_input_id
        in: path
        description: inventory_input_id
        required: true
        type: integer
      responses:
        '200':
          description: Inventory input details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_input_details/{inventory_input_id}":
    get:
      tags:
      - products
      - inventory_inputs
      summary: Returns details for a stock order
      description: 'Returns details for a stock order<br />Scope for public applications
        : read_inventory'
      operationId: api.inventory_input_details.index
      produces:
      - application/json
      parameters:
      - name: inventory_input_id
        in: path
        description: Inventory input ID
        required: true
        type: integer
      responses:
        '200':
          description: Inventory input details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - products
      - inventory_inputs
      summary: Add a product line to a stock order
      description: 'Add a product line to a stock order<br />Scope for public applications
        : write_inventory'
      operationId: api.inventory_input_details.add_product
      produces:
      - application/json
      parameters:
      - name: inventory_input_id
        in: path
        description: Inventory_input ID
        required: true
        type: integer
      - name: product_id
        in: formData
        description: Product ID you need to add to inventory_input_id
        required: true
        type: integer
      - name: product_size
        in: formData
        description: Product size you need to add to inventory_input_id
        required: true
        type: integer
      - name: quantity
        in: formData
        description: Quantity (if empty value is 1)
        required: false
        type: integer
      - name: product_price
        in: formData
        description: Product supply price (if empty value will be supply price)
        required: false
        type: integer
      - name: product_serial_number
        in: formData
        description: Product serial number
        required: false
        type: integer
      responses:
        '201':
          description: Product successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_input_details/{inventory_input_detail_id}/":
    put:
      tags:
      - products
      - inventory_inputs
      summary: Update an inventory_input_detail_id
      description: 'Update an inventory_input_detail_id<br />Scope for public applications
        : write_inventory'
      operationId: api.inventory_input_detail_id.update
      produces:
      - application/json
      parameters:
      - name: inventory_input_detail_id
        in: path
        description: inventory_input_detail_id
        required: true
        type: integer
      - name: inventory_input_detail_id_attribute
        in: formData
        description: 'One of the following sale attribute : product_serial_number,
          product_price, quantity'
        required: true
        type: string
        enum:
        - product_serial_number
        - product_price
        - quantity
      - name: new_value
        in: formData
        description: New value for the inventory_input_detail_id attribute
        required: false
        type: string
      responses:
        '200':
          description: Inventory input detail attribute successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_input_validate/":
    post:
      tags:
      - products
      - inventory_inputs
      summary: Validate a stock order
      description: 'Validate a stock order<br />Scope for public applications : write_inventory'
      operationId: api.inventory_input.validate
      produces:
      - application/json
      parameters:
      - name: inventory_input_id
        in: formData
        description: Inventory input ID
        required: true
        type: integer
      responses:
        '200':
          description: Stock order successfully validated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_inputs_on_hold/":
    get:
      tags:
      - products
      - inventory_inputs
      summary: Returns the list of stock orders details on hold
      description: 'Returns the list of stock orders details on hold<br />Scope for
        public applications : read_inventory<br />Results per page : 250'
      operationId: api.inventory_inputs_on_hold.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Inventory inputs details on hold
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/kitchen/open_tables":
    get:
      tags:
      - kitchen
      summary: Returns pending sales sent to kitchen
      description: 'Returns pending sales sent to kitchen<br />Scope for public applications
        : read_kitchen_screen'
      operationId: api.kitchen.open_tables
      produces:
      - application/json
      responses:
        '200':
          description: Pending open tables
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/kitchen/cooking_stations":
    get:
      tags:
      - kitchen
      summary: Returns cooking stations
      description: 'Returns cooking stations<br />Scope for public applications :
        read_kitchen_screen'
      operationId: api.kitchen.cooking_stations
      produces:
      - application/json
      responses:
        '200':
          description: cooking stations
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/kitchen/sales/{sale_id}":
    get:
      tags:
      - kitchen
      summary: Returns sale details
      description: 'Returns sale details<br />Scope for public applications : read_kitchen_screen'
      operationId: api.kitchen.sale_details
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: sale_id
        required: true
        type: integer
      responses:
        '200':
          description: Sale details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/kitchen/line_item":
    post:
      tags:
      - kitchen
      summary: Add item to the kitchen screen
      description: 'Add item to the kitchen screen<br />Scope for public applications
        : write_kitchen_screen'
      operationId: api.kitchen.add_line_item
      produces:
      - application/json
      parameters:
      - name: item_id
        in: formData
        description: item_id
        required: true
        type: integer
      responses:
        '200':
          description: Item successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/kitchen/line_items":
    post:
      tags:
      - kitchen
      summary: Add sale items to the kitchen screen
      description: 'Add item to the kitchen screen<br />Scope for public applications
        : write_kitchen_screen'
      operationId: api.kitchen.add_line_items
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: sale_id
        required: true
        type: integer
      responses:
        '200':
          description: Sale is empty | Items successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/kitchen/item_status":
    post:
      tags:
      - kitchen
      summary: Update item status
      description: 'Update item status<br />Scope for public applications : write_kitchen_screen'
      operationId: api.kitchen.update_item_status
      produces:
      - application/json
      parameters:
      - name: item_id
        in: formData
        description: item_id
        required: true
        type: integer
      - name: status
        in: formData
        description: status (0|1|2)
        required: true
        type: integer
      responses:
        '200':
          description: Item status successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/kitchen/sales/{sale_id}/":
    delete:
      tags:
      - kitchen
      summary: Delete a sale from the kitchen screen
      description: 'Delete a sale from the kitchen screen<br />Scope for public applications
        : write_kitchen_screen'
      operationId: api.kitchen.delete_sale
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: Sale id
        required: true
        type: integer
      responses:
        '200':
          description: Sale successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/message/":
    post:
      tags:
      - message
      summary: Post a new message
      description: Post a new message
      operationId: api.message.add
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: store_id
        required: true
        type: integer
      - name: thread
        in: formData
        description: 'One of the following types : notifications'
        required: true
        type: string
        enum:
        - notifications
      - name: object
        in: formData
        description: 'One of the following objects : none (default), sale, product,
          client, planning'
        required: true
        type: string
        enum:
        - none
        - sale
        - product
        - client
        - planning
      - name: object_id
        in: formData
        description: sale_id or product_id
        required: false
        type: integer
      - name: title
        in: formData
        description: title
        required: false
        type: string
      - name: message
        in: formData
        description: message
        required: false
        type: string
      responses:
        '200':
          description: Message successfully sent
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/modifiers/":
    get:
      tags:
      - modifiers
      summary: Returns the list of modifiers
      description: 'Returns modifiers<br />Scope for public applications : read_products'
      operationId: api.modifiers.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Modifiers
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - modifiers
      summary: Create a modifier
      description: 'Create a modifier<br />Scope for public applications : write_products'
      operationId: api.modifiers.add
      produces:
      - application/json
      parameters:
      - name: modifier_label
        in: formData
        description: Name of the modifier
        required: false
        type: string
      - name: modifier_group_id
        in: formData
        description: 'Modifier group ID to which the modifer belongs to. If 0 the
          modifier is created as a modifier group '
        required: false
        type: integer
      - name: modifier_enabled
        in: formData
        description: Enabled ? 0|1 (default:1)
        required: false
        type: integer
      - name: modifier_enabled_www
        in: formData
        description: Enabled for web ? 0|1 (default:0)
        required: false
        type: integer
      - name: modifier_required
        in: formData
        description: Required ? 0|1 (default:0) / Only if modifier_group_id == 0
        required: false
        type: integer
      - name: modifier_price
        in: formData
        description: Price / Only if modifier_group_id <> 0
        required: false
        type: string
      - name: modifier_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      responses:
        '201':
          description: Modifier successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/modifiers/{modifier_id}/":
    put:
      tags:
      - modifiers
      summary: Update a modifier
      description: 'Update a modifier<br />Scope for public applications : write_products'
      operationId: api.modifiers.update
      produces:
      - application/json
      parameters:
      - name: modifier_id
        in: path
        description: ID of the modifier
        required: true
        type: integer
      - name: modifier_attribute
        in: formData
        description: 'One of the following modifier attribute : modifier_label, modifier_group_id,
          modifier_enabled (0|1), modifier_enabled_www (0|1), modifier_required (0|1),
          modifier_price, modifier_ref_ext'
        required: true
        type: string
        enum:
        - modifier_label
        - modifier_group_id
        - modifier_enabled
        - modifier_enabled_www
        - modifier_required
        - modifier_price
        - modifier_ref_ext
      - name: new_value
        in: formData
        description: New value for the modifier_attribute
        required: false
        type: string
      responses:
        '200':
          description: Modifier successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/payment_types/{store_id}/":
    get:
      tags:
      - payments
      summary: Returns payment types for store_id
      description: 'Returns payment types for store_id<br />Scope for public applications
        : read_settings'
      operationId: api.payment_types.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      responses:
        '200':
          description: Payment types
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/payments/due_date/{store_id}/":
    get:
      tags:
      - payments
      summary: Returns the list of payments with due dates for a specific store_id
      description: 'Returns the list of payments with due dates for a specific store_id<br
        />Scope for public applications : read_sales<br />Results per page : 250'
      operationId: api.payments_due_date.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Payment types
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/prepaid_purchases/":
    get:
      tags:
      - prepaid_purchases
      summary: Returns prepaid purchases lines
      description: 'Returns prepaid purchases lines<br />Scope for public applications
        : read_customers<br />Results per page : 250'
      operationId: api.prepaid_purchases.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Prepaid purchases details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - prepaid_purchases
      summary: Add a prepaid purchase line to a customers_id
      description: 'Add a prepaid purchase line to a customers_id<br />Scope for public
        applications : write_customers'
      operationId: api.prepaid_purchases.add_line
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: formData
        description: customers_id
        required: true
        type: integer
      - name: sale_id
        in: formData
        description: sale_id
        required: true
        type: number
      - name: amount
        in: formData
        description: amount
        required: true
        type: number
      - name: currency_code
        in: formData
        description: Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes
        required: true
        type: string
      - name: comments
        in: formData
        description: comments
        required: false
        type: string
      responses:
        '200':
          description: Prepaid purchase line successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/prepaid_purchases/{customers_id}":
    get:
      tags:
      - prepaid_purchases
      summary: Returns prepaid purchases lines for a customers_id
      description: 'Returns prepaid purchases lines for a customers_id<br />Scope
        for public applications : read_customers<br />Results per page : 250'
      operationId: api.prepaid_purchases.customers_id
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: path
        description: customers_id
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customers prepaid purchases details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/print/misc/":
    post:
      tags:
      - print
      summary: Print a document
      description: 'Print a document<br />Scope for public applications : print<br
        /><br />In order to be able to print with this method you need to :<br />-
        On Hiboutik in ''General Settings'' set the public IP address of your point
        of sale. You can use a DYN DNS service if you don''t have a public static
        IP address. <br />- Set a port forwarding on you router from the port of your
        choice (the one you will fill below) to the port 9100 on your local printer'
      operationId: api.print.misc
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: Store ID
        required: true
        type: integer
      - name: ip_address
        in: formData
        description: IP address - Leave blank for default
        required: false
        type: string
      - name: port
        in: formData
        description: Port number - Leave blank for default
        required: false
        type: integer
      - name: printer
        in: formData
        description: 'One of the following : receipt, kitchen, label. If empty default
          is receipt'
        required: false
        type: string
      - name: data
        in: formData
        description: The data to print
        required: false
        type: string
      responses:
        '201':
          description: Document successfully printed
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/":
    get:
      tags:
      - products
      summary: Returns products by ID
      description: 'Returns products (default sorting is by ID DESC)<br />Scope for
        public applications : read_products<br />Results per page : 250'
      operationId: api.products.index
      produces:
      - application/json
      parameters:
      - name: order_by
        in: query
        description: Order by
        required: false
        type: string
        enum:
        - product_id
        - product_model
        - product_price
        - product_supply_price
        - product_size_type
        - product_display
        - product_display_www
        - product_arch
        - updated_at
        - product_order
      - name: sort
        in: query
        description: Sort
        required: false
        type: string
        enum:
        - DESC
        - ASC
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products overview
          schema:
            "$ref": "#/definitions/product"
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - products
      summary: Create a new product
      description: 'Create a new product<br />Scope for public applications : write_products'
      operationId: api.products.add
      produces:
      - application/json
      parameters:
      - name: product_model
        in: formData
        description: product_model
        required: false
        type: string
      - name: product_barcode
        in: formData
        description: product_barcode
        required: false
        type: string
      - name: product_brand
        in: formData
        description: product_brand
        required: false
        type: integer
      - name: product_supplier
        in: formData
        description: product_supplier
        required: false
        type: integer
      - name: product_price
        in: formData
        description: product_price
        required: false
        type: string
      - name: product_discount_price
        in: formData
        description: product_discount_price
        required: false
        type: string
      - name: product_supply_price
        in: formData
        description: product_supply_price
        required: false
        type: string
      - name: product_category
        in: formData
        description: product_category
        required: false
        type: integer
      - name: product_size_type
        in: formData
        description: product_size_type
        required: false
        type: integer
      - name: product_stock_management
        in: formData
        description: product_stock_management
        required: false
        type: integer
      - name: product_supplier_reference
        in: formData
        description: product_supplier_reference
        required: false
        type: string
      - name: product_package
        in: formData
        description: product_package
        required: false
        type: integer
      - name: product_vat
        in: formData
        description: product_vat
        required: false
        type: integer
      - name: products_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      responses:
        '201':
          description: Product successfully created
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_images/{product_id}/":
    post:
      tags:
      - products
      summary: Add a product image
      description: 'Add a product image<br />Scope for public applications : write_products'
      operationId: api.products_images.add
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: ID of the product
        required: true
        type: integer
      - name: image
        in: formData
        description: Image of the product. You must provide a valid square .jpeg or
          .jpg image file, no bigger than 1Mb. Final image will be resized to 100x100px.
        required: true
        type: file
      - name: framing_type
        in: formData
        description: 'One of the following line_item attribute : default, center_zoom
          or frame'
        required: false
        type: string
        enum:
        - default
        - center_zoom
        - frame
      responses:
        '200':
          description: Product image successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_images_1000x1000/{product_id}/":
    post:
      tags:
      - products
      summary: Add a product image
      description: 'Add a product image<br />Scope for public applications : write_products'
      operationId: api.products_images_1000x1000.add
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: ID of the product
        required: true
        type: integer
      - name: image
        in: formData
        description: Image of the product. You must provide a valid square .jpeg or
          .jpg image file, no bigger than 1Mb. Final image will be resized to 1000x1000px.
        required: true
        type: file
      - name: framing_type
        in: formData
        description: 'One of the following line_item attribute : default, center_zoom
          or frame'
        required: false
        type: string
        enum:
        - default
        - center_zoom
        - frame
      - name: image_id
        in: formData
        description: You can upload up to 4 images
        required: false
        type: string
        enum:
        - '1'
        - '2'
        - '3'
        - '4'
      responses:
        '200':
          description: Product image successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_barcode/{store_id}/{product_id}/{size_id}/":
    get:
      tags:
      - products
      summary: Returns product barcode for a store_id & product_id & size_id
      description: 'Returns product barcode for a store_id & product_id & size_id<br
        />Scope for public applications : read_products'
      operationId: api.products_barcode.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: product_id
        in: path
        description: product_id
        required: true
        type: integer
      - name: size_id
        in: path
        description: size_id
        required: true
        type: integer
      responses:
        '200':
          description: Product barcode for a store_id & product_id & size_id
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_sold/{store_id}/{year}/{month}/{day}/":
    get:
      tags:
      - products
      - sales
      summary: Returns products sold in a store_id at a specific date
      description: 'Returns products sold in a store_id at a specific date<br />Scope
        for public applications : read_reports<br />Results per page : 250'
      operationId: api.products_sold.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      - name: customer_id
        in: query
        description: customer_id
        required: false
        type: string
      - name: vendor_id
        in: query
        description: vendor_id
        required: false
        type: string
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products solds
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_purchased/{warehouse_id}/{year}/{month}/{day}/":
    get:
      tags:
      - products
      - inventory_inputs
      summary: Returns products purchased in a warehouse_id at a specific date
      description: 'Returns products purchased in a warehouse_id at a specific date<br
        />Scope for public applications : read_reports<br />Results per page : 250'
      operationId: api.products_purchased.index
      produces:
      - application/json
      parameters:
      - name: warehouse_id
        in: path
        description: warehouse_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products solds
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_returned/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - reports
      summary: Returns product returned for store_id for a specific day
      description: 'Returns product returned for store_id for a specific day<br />Scope
        for public applications : read_reports<br />Results per page : 250'
      operationId: api.products_returned.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Report of products returned
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/product/{product_id}/":
    put:
      tags:
      - products
      summary: Update a product
      description: 'Update a product<br />Scope for public applications : write_products'
      operationId: api.product.update
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: ID of the product
        required: true
        type: integer
      - name: size_id
        in: formData
        description: size_id
        required: false
        type: integer
      - name: shop_id
        in: formData
        description: shop_id
        required: false
        type: integer
      - name: product_attribute
        in: formData
        description: 'One of the following product attribute : product_model, product_barcode,
          product_brand, product_supplier, product_price, product_discount_price,
          product_supply_price, points_in, points_out, product_category, product_stock_management,
          product_supplier_reference, product_vat, product_display, product_display_www,
          product_font_color, product_bck_btn_color, product_arch, product_desc, product_storage_location,
          products_ref_ext, product_size_type, accounting_account'
        required: true
        type: string
        enum:
        - product_model
        - product_barcode
        - product_brand
        - product_supplier
        - product_price
        - product_discount_price
        - product_supply_price
        - points_in
        - points_out
        - product_category
        - product_stock_management
        - product_supplier_reference
        - product_vat
        - product_display
        - product_display_www
        - product_font_color
        - product_bck_btn_color
        - product_arch
        - product_desc
        - product_storage_location
        - products_ref_ext
        - product_size_type
        - accounting_account
      - name: new_value
        in: formData
        description: New value for the product attribute
        required: false
        type: string
      responses:
        '200':
          description: Product attribute successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/{product_id}":
    get:
      tags:
      - products
      summary: Returns product details
      description: 'Returns product details<br />Scope for public applications : read_products'
      operationId: api.products.id
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: ID of the product
        required: true
        type: integer
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/name/{q}":
    get:
      tags:
      - products
      - search
      summary: Returns products search results by name
      description: 'Returns products search results by name<br />Scope for public
        applications : read_products<br />Results per page : 250'
      operationId: api.products.name.search
      produces:
      - application/json
      parameters:
      - name: q
        in: path
        description: Search value
        required: true
        type: string
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/barcode/{q}/":
    get:
      tags:
      - products
      - search
      summary: Returns products search results by barcode
      description: 'Returns products search results by barcode<br />Scope for public
        applications : read_products'
      operationId: api.products.barcode.search
      produces:
      - application/json
      parameters:
      - name: q
        in: path
        description: Search value
        required: true
        type: string
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/supplier_reference/{q}/":
    get:
      tags:
      - products
      - search
      summary: Returns products search results by supplier reference
      description: 'Returns products search results by supplier reference<br />Scope
        for public applications : read_products'
      operationId: api.products.supplier_reference.search
      produces:
      - application/json
      parameters:
      - name: q
        in: path
        description: Search value
        required: true
        type: string
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/category/{category_id}":
    get:
      tags:
      - products
      - categories
      - search
      summary: Returns products search results by category_id
      description: 'Returns products search results by category_id<br />Scope for
        public applications : read_products<br />Results per page : 250'
      operationId: api.products.category_id.search
      produces:
      - application/json
      parameters:
      - name: category_id
        in: path
        description: Cadegory ID
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/taxes/{tax_id}":
    get:
      tags:
      - products
      - taxes
      - search
      summary: Returns products search results by tax_id
      description: 'Returns products search results by tax_id<br />Scope for public
        applications : read_products<br />Results per page : 250'
      operationId: api.products.tax_id.search
      produces:
      - application/json
      parameters:
      - name: tax_id
        in: path
        description: Tax ID
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/tags/{tag_id}":
    get:
      tags:
      - products
      - search
      summary: Returns products search results by tag_id
      description: 'Returns products search results by tag_id<br />Scope for public
        applications : read_products<br />Results per page : 250'
      operationId: api.products.tag_id.search
      produces:
      - application/json
      parameters:
      - name: tag_id
        in: path
        description: Tag ID
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/open_packages":
    get:
      tags:
      - products
      - search
      summary: Returns open package products
      description: 'Returns open package products<br />Scope for public applications
        : read_products<br />Results per page : 250'
      operationId: api.products.open_packages.search
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Products details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/product_specific_rules/{shop_id}/{product_id}/{size_id}":
    delete:
      tags:
      - products
      summary: Delete a product specific rule
      description: 'Delete a product specific rule<br />Scope for public applications
        : write_products'
      operationId: api.product_specific_rules.delete
      produces:
      - application/json
      parameters:
      - name: shop_id
        in: path
        description: Shop ID for which you need to delete the product specific rule
          or 0 for all shops
        required: true
        type: integer
      - name: product_id
        in: path
        description: Product ID for which you need to delete the product specific
          rule or 0 for all products
        required: true
        type: integer
      - name: size_id
        in: path
        description: Size ID for which you need to delete the product specific rule
          or 999 for all sizes
        required: true
        type: integer
      responses:
        '200':
          description: Tag successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_modifiers/{product_id}":
    get:
      tags:
      - products
      - modifiers
      summary: Returns modifiers for a specific product_id
      description: 'Returns modifiers for a specific product_id<br />Scope for public
        applications : read_products'
      operationId: api.modifiers.product_id
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: Product ID
        required: true
        type: integer
      responses:
        '200':
          description: Modifier ID & label
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - products
      - modifiers
      summary: Add a modifier to a specific product_id
      description: 'Add a modifier to a specific product_id<br />Scope for public
        applications : write_products'
      operationId: api.products_modifiers.add
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: Product ID for which you need to add a modifier ID
        required: true
        type: integer
      - name: modifier_id
        in: formData
        description: Modifier ID that needs to be added
        required: true
        type: integer
      responses:
        '200':
          description: Modifier successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_modifiers/":
    get:
      tags:
      - products
      - modifiers
      summary: Returns modifiers for products
      description: 'Returns modifiers products<br />Scope for public applications
        : read_products'
      operationId: api.modifiers.products.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Modifier ID & label
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_modifiers/{product_id}/{modifier_id}":
    delete:
      tags:
      - products
      - modifiers
      summary: Delete a modifier to a specific product_id
      description: 'Delete a modifier to a specific product_id<br />Scope for public
        applications : write_products'
      operationId: api.products_modifiers.delete
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: Product ID for which you need to delete a modifier ID
        required: true
        type: integer
      - name: modifier_id
        in: path
        description: Modifier ID that needs to be deleted
        required: true
        type: integer
      responses:
        '200':
          description: Modifier successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/tags/products/":
    get:
      tags:
      - products
      - tags
      summary: Returns tags for products
      description: 'Returns tags for products<br />Scope for public applications :
        read_products'
      operationId: api.tags.products
      produces:
      - application/json
      responses:
        '200':
          description: Tags
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_tags/{product_id}":
    get:
      tags:
      - products
      - tags
      summary: Returns tags for a specific product_id
      description: 'Returns tags for a specific product_id<br />Scope for public applications
        : read_products'
      operationId: api.tags.product_id
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: Product ID
        required: true
        type: integer
      responses:
        '200':
          description: Tag ID
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - products
      - tags
      summary: Add a tag to a specific product_id
      description: 'Add a tag to a specific product_id<br />Scope for public applications
        : write_products'
      operationId: api.products_tags.add
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: Product ID for which you need to add a tag ID
        required: true
        type: integer
      - name: tag_id
        in: formData
        description: Tag ID that needs to be added
        required: true
        type: integer
      responses:
        '200':
          description: Tag successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_tags/":
    get:
      tags:
      - products
      - tags
      summary: Returns tags products
      description: 'Returns tags for products<br />Scope for public applications :
        read_products'
      operationId: api.tags.products.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Tag ID
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products_tags/{product_id}/{tag_id}":
    delete:
      tags:
      - products
      - tags
      summary: Delete a tag to a specific product_id
      description: 'Delete a tag to a specific product_id<br />Scope for public applications
        : write_products'
      operationId: api.products_tags.delete
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: Product ID for which you need to delete a tag ID
        required: true
        type: integer
      - name: tag_id
        in: path
        description: Tag ID that needs to be deleted
        required: true
        type: integer
      responses:
        '200':
          description: Tag successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reset/":
    post:
      tags:
      - reset
      summary: Reset account
      description: 'Reset account<br />Scope for public applications : write_settings<br
        />Account must be in demo mode'
      operationId: api.reset.misc
      produces:
      - application/json
      parameters:
      - name: reset_action
        in: formData
        description: 'What you want to reset : sales_and_stock sale, sales_keep_stock,
          sales_and_products, clients, everything'
        required: true
        type: string
        enum:
        - sales_and_stock
        - sales_keep_stock
        - sales_and_products
        - clients
        - everything
      responses:
        '201':
          description: Account successfully reseted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reset/customers/loyalty_points":
    post:
      tags:
      - reset
      summary: Reset customers loyalty points
      description: 'Reset loyalty points for customers_id<br />Scope for public applications
        : write_settings<br />Account must be in demo mode'
      operationId: api.reset.customers.misc
      produces:
      - application/json
      parameters:
      - name: customers_id
        in: formData
        description: customers_id
        required: true
        type: integer
      responses:
        '201':
          description: Loyalty points successfully reseted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/rooms/":
    get:
      tags:
      - ressources
      summary: Returns rooms by ID
      description: Returns rooms by ID
      operationId: api.rooms.index
      produces:
      - application/json
      responses:
        '200':
          description: Rooms overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/ressources/":
    get:
      tags:
      - ressources
      summary: Returns ressources by ID
      description: Returns ressources by ID
      operationId: api.ressources.index
      produces:
      - application/json
      responses:
        '200':
          description: Ressources overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/ressources/{ressource_id}/":
    get:
      tags:
      - ressources
      summary: Returns ressource details
      description: Returns ressource details
      operationId: api.ressources.id
      produces:
      - application/json
      parameters:
      - name: ressource_id
        in: path
        description: ID of the ressource
        required: true
        type: integer
      responses:
        '200':
          description: Ressource details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/comments/":
    post:
      tags:
      - sales
      summary: Add/Update comments
      description: 'Add/Update comments<br />Scope for public applications : write_sales'
      operationId: api.sales.comments.add
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: Sale ID
        required: true
        type: integer
      - name: comments
        in: formData
        description: Sale comments
        required: false
        type: string
      responses:
        '200':
          description: Comments successfully added/modified
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/":
    post:
      tags:
      - sales
      summary: Create a new sale
      description: 'Create a new sale<br />Scope for public applications : write_sales'
      operationId: api.sales.add
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: Store ID
        required: true
        type: integer
      - name: customer_id
        in: formData
        description: Customer ID
        required: false
        type: integer
      - name: duty_free_sale
        in: formData
        description: Duty-free sale (0|1)
        required: false
        type: integer
      - name: prices_without_taxes
        in: formData
        description: Prices are without taxes (0|1)
        required: false
        type: integer
      - name: currency_code
        in: formData
        description: Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes
        required: true
        type: string
      - name: vendor_id
        in: formData
        description: Vendor ID
        required: false
        type: string
      responses:
        '201':
          description: Sale successfully created
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/add_product/":
    post:
      tags:
      - sales
      summary: Add a product on a sale
      description: 'Add a product on a sale<br />Scope for public applications : write_sales'
      operationId: api.sales.add_product
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: Sale ID
        required: true
        type: integer
      - name: product_id
        in: formData
        description: Product ID
        required: true
        type: integer
      - name: size_id
        in: formData
        description: Size ID
        required: false
        type: integer
      - name: quantity
        in: formData
        description: Quantity
        required: false
        type: integer
      - name: product_price
        in: formData
        description: Unit product price
        required: false
        type: string
      - name: product_points
        in: formData
        description: Product points earned / used
        required: false
        type: string
      - name: stock_withdrawal
        in: formData
        description: 'Product stock_withdrawal 0 OR 1 (default : 0)'
        required: false
        type: string
      - name: product_comments
        in: formData
        description: Product comments
        required: false
        type: string
      - name: serial_number
        in: formData
        description: Product serial number
        required: false
        type: string
      - name: kitchen_pos
        in: formData
        description: 'Kitchen position from 0 to 5 (default : 1)'
        required: false
        type: string
      responses:
        '200':
          description: Product successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/add_credit_note/":
    post:
      tags:
      - sales
      summary: Add a credit note on a sale
      description: 'Add a credit note on a sale<br />Scope for public applications
        : write_sales'
      operationId: api.sales.add_credit_note
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: Sale ID
        required: true
        type: integer
      - name: credit_note_code
        in: formData
        description: Credit note code
        required: true
        type: integer
      responses:
        '200':
          description: Credit note successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/close/":
    post:
      tags:
      - sales
      summary: Close a sale
      description: 'Close a sale<br />Scope for public applications : write_sales'
      operationId: api.sales.close
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: Sale ID
        required: true
        type: integer
      responses:
        '200':
          description: Sale successfully closed
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales_payment_div/":
    post:
      tags:
      - sales
      summary: Add a DIV payment to a sale
      description: 'Add a DIV payment to a sale<br />Scope for public applications
        : write_sales'
      operationId: api.sales.payment_div
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: Sale ID
        required: true
        type: integer
      - name: payment_type
        in: formData
        description: Payment type
        required: true
        type: string
      - name: payment_amount
        in: formData
        description: Amount
        required: true
        type: string
      - name: payment_date
        in: formData
        description: Date payment
        required: false
        type: string
      responses:
        '200':
          description: Payment successfully added
        '500':
          description: Server Error
        '401':
          description: Unauthorized action
  "/sales_payment_div/{payment_detail_id}/":
    put:
      tags:
      - sales
      summary: Update a DIV payment
      description: 'Update a DIV payment<br />Scope for public applications : write_sales'
      operationId: api.sale.payment_div.update
      produces:
      - application/json
      parameters:
      - name: payment_detail_id
        in: path
        description: payment_detail_id
        required: true
        type: integer
      - name: payment_div_attribute
        in: formData
        description: 'One of the following DIV payment attribute : payment_date (format
          YYYY-MM-DD), payment_date_paid (format YYYY-MM-DD), comments'
        required: true
        type: string
        enum:
        - payment_date
        - payment_date_paid
        - comments
      - name: new_value
        in: formData
        description: New value for the DIV payment attribute
        required: false
        type: string
      responses:
        '200':
          description: DIV payment successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales_payment_div/{payment_detail_id}":
    delete:
      tags:
      - sales
      summary: Delete DIV payment
      description: 'Delete DIV payment<br />Scope for public applications : write_sales'
      operationId: api.sales.payment_div.delete
      produces:
      - application/json
      parameters:
      - name: payment_detail_id
        in: path
        description: payment_detail_id to delete
        required: true
        type: integer
      responses:
        '200':
          description: DIV payment successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sale/{sale_id}/":
    put:
      tags:
      - sales
      summary: Update a sale attribute
      description: 'Update a sale attribute<br />Scope for public applications : write_sales'
      operationId: api.sale.update
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: sale_id
        required: true
        type: integer
      - name: sale_attribute
        in: formData
        description: 'One of the following sale attribute : vendor_id, customer_id,
          billing_address, shipping_address, payment, ext_ref, store_id, takeaway,
          ressource_id, currency, pickup_date, guests_number'
        required: true
        type: string
        enum:
        - vendor_id
        - customer_id
        - billing_address
        - shipping_address
        - payment
        - ext_ref
        - store_id
        - takeaway
        - ressource_id
        - currency
        - pickup_date
        - guests_number
      - name: new_value
        in: formData
        description: New value for the sale attribute
        required: false
        type: string
      responses:
        '200':
          description: Sale attribute successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sale/{sale_id}":
    delete:
      tags:
      - sales
      summary: Delete sale
      description: 'Delete sale. Sale must be empty and should not have any CREDIT
        like payments.<br />Scope for public applications : write_sales'
      operationId: api.sales.delete
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: sale_id to delete
        required: true
        type: integer
      responses:
        '200':
          description: Sale successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sale_line_item/{line_item_id}":
    get:
      tags:
      - sales
      summary: Returns details of a line_item_id
      description: 'Returns details of a line_item_id<br />Scope for public applications
        : read_sales'
      operationId: api.sales.line_item_id
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: line_item_id
        required: true
        type: integer
      responses:
        '200':
          description: line_item_id details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    delete:
      tags:
      - sales
      summary: Delete line_item
      description: 'Delete line_item<br />Scope for public applications : write_sales'
      operationId: api.sale_line_item.delete
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: line_item_id
        required: true
        type: integer
      responses:
        '200':
          description: Line_item successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sale_line_item/{line_item_id}/":
    put:
      tags:
      - sales
      summary: Update a line_item attribute
      description: 'Update a line_item attribute<br />Scope for public applications
        : write_sales'
      operationId: api.sale_line_item.update
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: line_item_id
        required: true
        type: integer
      - name: line_item_attribute
        in: formData
        description: 'One of the following line_item attribute : points, product_comments,
          serial_number, stock_withdrawal, product_price, vat, quantity, discount,
          product_supply_price'
        required: true
        type: string
        enum:
        - points
        - product_comments
        - serial_number
        - stock_withdrawal
        - product_price
        - vat
        - quantity
        - discount
        - product_supply_price
      - name: new_value
        in: formData
        description: New value for the line_item attribute
        required: false
        type: string
      responses:
        '200':
          description: Line item attribute successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/{sale_id}":
    get:
      tags:
      - sales
      summary: Returns details of a sale
      description: 'Returns details of a sale<br />Scope for public applications :
        read_sales'
      operationId: api.sales.sale_id
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: sale_id
        required: true
        type: integer
      responses:
        '200':
          description: Sale details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/closed_sales/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - sales
      summary: Returns closed sales in a store_id for a specific day or month
      description: 'Returns closed sales in a store_id for a specific day or month<br
        />Scope for public applications : read_reports<br />Results per page : 250'
      operationId: api.closed_sales.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Closed sales
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/closed_sales_by_tag/{tag_id}/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - sales
      summary: Returns closed sales for a specific tag_id in a store_id for a specific
        day or month
      description: 'Returns closed sales for a specific tag_id in a store_id for a
        specific day or month<br />Scope for public applications : read_reports<br
        />Results per page : 250'
      operationId: api.closed_sales_by_tag.index
      produces:
      - application/json
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        type: integer
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Closed sales
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/open_sales/{store_id}":
    get:
      tags:
      - sales
      summary: Returns open sales in a store_id
      description: 'Returns open sales in a store_id (ORDER BY sale_id DESC)<br />Scope
        for public applications : read_reports<br />Results per page : 250'
      operationId: api.open_sales.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: order_by
        in: query
        description: Order by
        required: false
        type: string
        enum:
        - sale_id
        - created_at
        - vendor_id
        - customer_id
        - resource_id
        - guests_number
        - pickup_date
        - total
      - name: sort
        in: query
        description: Sort
        required: false
        type: string
        enum:
        - DESC
        - ASC
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Open sales
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sale_line_item_modifier/{line_item_id}/{modifier_id}/":
    post:
      tags:
      - sales
      summary: Add a modifier to a line_item
      description: 'Add a modifier to a line_item<br />Scope for public applications
        : write_sales'
      operationId: api.sale_line_item_modifier.add
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: line_item_id
        required: true
        type: integer
      - name: modifier_id
        in: path
        description: modifier_id
        required: true
        type: integer
      responses:
        '200':
          description: Line item modifier successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    delete:
      tags:
      - sales
      summary: Delete a modifier on a line_item
      description: 'Delete a modifier on a line_item<br />Scope for public applications
        : write_sales'
      operationId: api.sale_line_item_modifier.delete
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: line_item_id
        required: true
        type: integer
      - name: modifier_id
        in: path
        description: modifier_id
        required: true
        type: integer
      responses:
        '200':
          description: Line item modifier successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sale_line_item_exchange/{line_item_id}/{stock_id}/":
    put:
      tags:
      - sales
      summary: Exchange a line_item
      description: 'Exchange a line_item<br />Scope for public applications : write_sales'
      operationId: api.sale_line_item.exchange
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: line_item_id
        required: true
        type: integer
      - name: stock_id
        in: path
        description: stock_id on which the product should be restocked. 0 to restock
          the product in it's original stock. otherwise a transfer will be created
        required: true
        type: integer
      responses:
        '200':
          description: Line item attribute successfully exchanhed
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/add_global_discount/":
    post:
      tags:
      - sales
      summary: Global discount
      description: 'Global discount<br />Scope for public applications : write_sales'
      operationId: api.add_global_discount
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: sale_id
        required: true
        type: integer
      - name: type
        in: formData
        description: discount type 1 (absolute) | 2 (relative)
        required: true
        type: integer
      - name: amount
        in: formData
        description: discount amount
        required: true
        type: number
      responses:
        '200':
          description: Global discount applied
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/open_package/":
    post:
      tags:
      - sales
      - package
      summary: Add an open package on a sale
      description: 'Add an open package on a sale<br />Scope for public applications
        : write_sales'
      operationId: api.sales.add_open_package
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: Sale ID
        required: true
        type: integer
      - name: product_id
        in: formData
        description: Product ID
        required: true
        type: integer
      - name: product_comments
        in: formData
        description: Product comments
        required: false
        type: string
      - name: kitchen_pos
        in: formData
        description: 'Kitchen position from 0 to 5 (default : 1)'
        required: false
        type: string
      responses:
        '200':
          description: Open package successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/open_package/pack/{pack_line_item_id}/{product_line_item_id}":
    put:
      tags:
      - sales
      - package
      summary: Pack a product in an open package
      description: 'Pack a product in an open package<br />Scope for public applications
        : write_sales'
      operationId: api.open_package.pack
      produces:
      - application/json
      parameters:
      - name: pack_line_item_id
        in: path
        description: Line item ID of the open package
        required: true
        type: integer
      - name: product_line_item_id
        in: path
        description: Line item ID of the product you want to pack
        required: true
        type: string
      responses:
        '200':
          description: Line item successfully packed
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/open_package/unpack/{line_item_id}":
    put:
      tags:
      - sales
      - package
      summary: Unpack a line item id (either a product or an open package)
      description: 'Unpack a line item id (either a product or an open package)<br
        />Scope for public applications : write_sales'
      operationId: api.open_package.unpack
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: Line item ID to unpack
        required: true
        type: integer
      responses:
        '200':
          description: Line item successfully unpacked
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/open_package/{line_item_id}":
    delete:
      tags:
      - sales
      - package
      summary: Delete an open package (must be completely unpacked)
      description: 'Delete an open package (must be completely unpacked)<br />Scope
        for public applications : write_sales'
      operationId: api.open_package.delete
      produces:
      - application/json
      parameters:
      - name: line_item_id
        in: path
        description: line_item_id
        required: true
        type: integer
      responses:
        '200':
          description: Line_item successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/tags/sales/":
    get:
      tags:
      - sales
      - tags
      summary: Returns tags for sales
      description: 'Returns tags for sales<br />Scope for public applications : read_sales'
      operationId: api.tags.sales
      produces:
      - application/json
      responses:
        '200':
          description: Tags
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales_tags/{sale_id}":
    get:
      tags:
      - sales
      - tags
      summary: Returns tags for a specific sale_id
      description: 'Returns tags for a specific sale_id<br />Scope for public applications
        : read_sales'
      operationId: api.tags.sale_id
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: Sale ID
        required: true
        type: integer
      responses:
        '200':
          description: Sale tags
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - sales
      - tags
      summary: Add a tag to a specific sale_id
      description: 'Add a tag to a specific sale_id<br />Scope for public applications
        : write_sales'
      operationId: api.sales_tags.add
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: Sale ID for which you need to add a tag ID
        required: true
        type: integer
      - name: tag_id
        in: formData
        description: Tag ID that needs to be added
        required: true
        type: integer
      responses:
        '201':
          description: Tag successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales_tags/{sale_id}/{tag_id}":
    delete:
      tags:
      - sales
      - tags
      summary: Delete a tag to a specific sale_id
      description: 'Delete a tag to a specific sale_id<br />Scope for public applications
        : write_sales'
      operationId: api.sales_tags.delete
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: Sale ID for which you need to delete a tag ID
        required: true
        type: integer
      - name: tag_id
        in: path
        description: Tag ID that needs to be deleted. 0 to delete all tags
        required: true
        type: integer
      responses:
        '200':
          description: Tag successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers/search/":
    get:
      tags:
      - customers
      - search
      summary: Search for customers that match a supplied query
      description: 'Search for customers that match a supplied query<br />Scope for
        public applications : read_customers<br />Results per page : 250'
      operationId: api.search.customers.index
      produces:
      - application/json
      parameters:
      - name: last_name
        in: query
        description: last_name
        required: false
        type: string
      - name: first_name
        in: query
        description: first_name
        required: false
        type: string
      - name: email
        in: query
        description: email
        required: false
        type: string
      - name: phone
        in: query
        description: phone
        required: false
        type: string
      - name: vat
        in: query
        description: vat
        required: false
        type: string
      - name: country
        in: query
        description: country
        required: false
        type: string
      - name: date_of_birth
        in: query
        description: date_of_birth
        required: false
        type: string
      - name: validity
        in: query
        description: 'validity | format : YYYY-MM-DD equal by default, if you need
          > (or <, or <=, or >=) send >YYYY-MM-DD for example'
        required: false
        type: string
      - name: customers_code
        in: query
        description: customers_code
        required: false
        type: string
      - name: customers_ref_ext
        in: query
        description: customers_ref_ext
        required: false
        type: string
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customers
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers/search/tags/{tag_id}":
    get:
      tags:
      - customers
      - search
      summary: Returns customers search results by tag_id
      description: 'Returns customers search results by tag_id<br />Scope for public
        applications : read_customers<br />Results per page : 250'
      operationId: api.customers.tag_id.search
      produces:
      - application/json
      parameters:
      - name: tag_id
        in: path
        description: Tag ID
        required: true
        type: integer
      - name: order_by
        in: query
        description: Order by
        required: false
        type: string
        enum:
        - customers_id
        - last_name
        - country
        - date_of_birth
        - validity
        - customers_code
      - name: sort
        in: query
        description: Sort
        required: false
        type: string
        enum:
        - DESC
        - ASC
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Customers details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_transfer/search/":
    get:
      tags:
      - stock_transfer
      - search
      summary: Search for stock_transfer that match a supplied query
      description: 'Search for stock_transfer that match a supplied query<br />Scope
        for public applications : read_inventory<br />Results per page : 250'
      operationId: api.search.stock_transfer.index
      produces:
      - application/json
      parameters:
      - name: date
        in: query
        description: 'Date format : YYYY-MM-DD or YYYY-MM or YYYY'
        required: false
        type: string
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Stock transfer
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/products/search/":
    get:
      tags:
      - products
      - search
      summary: Search for products that match a supplied query
      description: 'Search for products that match a supplied query<br />Scope for
        public applications : read_products<br />Results per page : 250'
      operationId: api.search.products.index
      produces:
      - application/json
      parameters:
      - name: product_model
        in: query
        description: product_model
        required: false
        type: string
      - name: product_category
        in: query
        description: Product category (int category_id)
        required: false
        type: integer
      - name: product_brand
        in: query
        description: Product brand (int brand_id)
        required: false
        type: integer
      - name: product_supplier
        in: query
        description: product_supplier (int supplier_id)
        required: false
        type: integer
      - name: product_arch
        in: query
        description: product_arch (1 OR 0 OR null)
        required: false
        type: integer
      - name: product_stock_management
        in: query
        description: product_stock_management (1 OR 0 OR null)
        required: false
        type: integer
      - name: product_supplier_reference
        in: query
        description: product_supplier_reference
        required: false
        type: string
      - name: product_vat
        in: query
        description: product_vat
        required: false
        type: integer
      - name: products_ref_ext
        in: query
        description: products_ref_ext
        required: false
        type: string
      - name: accounting_account
        in: query
        description: accounting_account
        required: false
        type: string
      - name: product_package
        in: query
        description: product_package
        required: false
        type: string
      - name: product_display_www
        in: query
        description: product_display_www
        required: false
        type: string
      - name: product_display
        in: query
        description: product_display
        required: false
        type: string
      - name: order_by
        in: query
        description: Order by
        required: false
        type: string
        enum:
        - product_id
        - product_model
        - product_price
        - product_supply_price
        - product_size_type
        - product_display
        - product_display_www
        - product_arch
        - updated_at
        - product_order
      - name: sort
        in: query
        description: Sort
        required: false
        type: string
        enum:
        - DESC
        - ASC
      - name: p
        in: query
        description: Page number
        required: false
        type: integer
      responses:
        '200':
          description: Products
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sales/search/ext_ref/{q}":
    get:
      tags:
      - sales
      - search
      summary: Returns sales search results by ext_ref
      description: 'Returns sales search results by ext_ref<br />Scope for public
        applications : read_sales<br />Results per page : 250'
      operationId: api.sales.ext_ref.search
      produces:
      - application/json
      parameters:
      - name: q
        in: path
        description: Search value
        required: true
        type: string
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Sales details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/shoutbox/":
    post:
      tags:
      - shoutbox
      summary: Post a new message
      description: 'Post a new message<br />Scope for public applications : read_customers'
      operationId: api.shoutbox.add
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: 'Store ID : 0 is message is visible for all the stores'
        required: true
        type: integer
      - name: message
        in: formData
        description: message
        required: false
        type: string
      responses:
        '200':
          description: Message successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sizes/{size_type_id}":
    get:
      tags:
      - sizes
      summary: Returns variants for a specific variant type ID
      description: 'Returns variants for a specific variant type ID<br />Scope for
        public applications : read_products'
      operationId: api.sizes.stock_id
      produces:
      - application/json
      parameters:
      - name: size_type_id
        in: path
        description: ID of the size type
        required: true
        type: integer
      responses:
        '200':
          description: Returns different sizes for a defined size type ID
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sizes/":
    post:
      tags:
      - sizes
      summary: Create a new size
      description: 'Create a new size<br />Scope for public applications : write_products'
      operationId: api.sizes.add
      produces:
      - application/json
      parameters:
      - name: size_type_id
        in: formData
        description: Size type id
        required: true
        type: string
      - name: size_name
        in: formData
        description: Size name
        required: true
        type: string
      - name: size_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      responses:
        '201':
          description: Size successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/size_types":
    get:
      tags:
      - sizes
      summary: Returns variant types by ID
      description: 'Returns variant types by ID<br />Scope for public applications
        : read_products'
      operationId: api.size_types.id
      produces:
      - application/json
      responses:
        '200':
          description: Size types by ID
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/size_types/":
    post:
      tags:
      - sizes
      summary: Create a new size type
      description: 'Create a new size type<br />Scope for public applications : write_products'
      operationId: api.size_types.add
      produces:
      - application/json
      parameters:
      - name: size_type_name
        in: formData
        description: Size type name
        required: true
        type: string
      - name: size_type_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      responses:
        '201':
          description: Size type successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sizes_pretty/":
    get:
      tags:
      - sizes
      summary: Returns variants types by ID - Pretty
      description: 'Returns variant types by ID - Pretty<br />Scope for public applications
        : read_products'
      operationId: api.sizes_pretty.stock_id
      produces:
      - application/json
      responses:
        '200':
          description: Returns different sizes
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/sizes_specific_rules":
    get:
      tags:
      - sizes
      summary: Returns specific rules for sizes
      description: 'Returns specific rules for sizes<br />Scope for public applications
        : read_products<br />Results per page : 250'
      operationId: api.sizes_specific_rules.id
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: integer
      responses:
        '200':
          description: Size specific rules
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/turnover/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - reports
      summary: Returns sales total for store_id for a specific day or month
      description: 'Returns sales total for store_id for a specific day or month <br
        />Scope for public applications : read_reports<br />Results per page : 250'
      operationId: api.stats.turnover.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Sales total report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/product/{product_id}/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - reports
      summary: Returns sales for a specific product id
      description: 'Returns sales for a specific product id<br />Scope for public
        applications : read_reports<br />Results per page : 250'
      operationId: api.stats.product.index
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        type: integer
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Sales total report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/products_tags/{store_id}/{year}/{month}":
    get:
      tags:
      - reports
      summary: Returns sales for a specific product id
      description: 'Returns sales total for store_id for a specific month by products
        tags<br />Scope for public applications : read_reports<br />Results per page
        : 250'
      operationId: api.stats.products_tags.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Sales total report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/sales_by_tag/{tag_id}/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - reports
      summary: Returns sales for a specific tag_id id
      description: 'Returns sales for a specific tag_id<br />Scope for public applications
        : read_reports<br />Results per page : 250<br />The only mandatoty parameter
        is store_id'
      operationId: api.stats.sales_by_tag.index
      produces:
      - application/json
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        type: integer
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Sales total report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/products/{store_id}/{year}/{month}":
    get:
      tags:
      - reports
      summary: Returns product sold for store_id for a specific month
      description: 'Returns product sold for store_id for a specific month<br />Scope
        for public applications : read_reports<br />Results per page : 250'
      operationId: api.stats.products.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Report of products solds
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/categories/{store_id}/{year}/{month}":
    get:
      tags:
      - reports
      summary: Returns sales by category for store_id for a specific month
      description: 'Returns sales by category for store_id for a specific month <br
        />Scope for public applications : read_reports<br />Results per page : 250'
      operationId: api.stats.categories.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      responses:
        '200':
          description: Sales by category report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/brands/{store_id}/{year}/{month}":
    get:
      tags:
      - reports
      summary: Returns sales by brand for store_id for a specific month
      description: 'Returns sales by brand for store_id for a specific month<br />Scope
        for public applications : read_reports<br />Results per page : 250'
      operationId: api.stats.brands.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      responses:
        '200':
          description: Sales by brand report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/suppliers/{store_id}/{year}/{month}":
    get:
      tags:
      - reports
      summary: Returns sales by supplier for store_id for a specific month
      description: 'Returns sales by supplier for store_id for a specific month<br
        />Scope for public applications : read_reports<br />Results per page : 250'
      operationId: api.stats.suppliers.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      responses:
        '200':
          description: Sales by supplier report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/sales_per_customer/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - reports
      summary: Returns number of sales by customer for store_id for a specific day
        or month
      description: 'Returns number of sales by customer for store_id for a specific
        day or month<br />Scope for public applications : read_reports<br />Results
        per page : 250'
      operationId: api.stats.sales_per_customer.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Number of sales by customer report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/refresh/supply_prices":
    get:
      tags:
      - reports
      summary: Refresh supply prices of sold products based on a First In First Out
        (FIFO) calculation method
      description: 'Refresh supply prices of sold products based on a First In First
        Out (FIFO) calculation method<br />Scope for public applications : read_reports'
      operationId: api.stats.refresh_supply_prices
      produces:
      - application/json
      responses:
        '200':
          description: Refresh supply prices of sold products based on a First In
            First Out (FIFO) calculation method
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/refresh/customers":
    get:
      tags:
      - reports
      summary: Refresh customers data (last order date, turnover, loyalty points etc...)
      description: 'Refresh customers data (last order date, turnover, loyalty points
        etc...)<br />Scope for public applications : read_reports'
      operationId: api.stats.refresh_customers
      produces:
      - application/json
      responses:
        '200':
          description: Customers data successfully refreshed
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reports/refresh/stats/{year}/{month}":
    get:
      tags:
      - reports
      summary: Refresh stats
      description: 'Refresh stats<br />Scope for public applications : read_reports'
      operationId: api.stats.refresh_stats
      produces:
      - application/json
      parameters:
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      responses:
        '200':
          description: Refresh stats
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_available/warehouse_id/{warehouse_id}":
    get:
      tags:
      - stock
      - warehouses
      summary: Returns stock available for a specific warehouse_id
      description: 'Returns stock available for a specific warehouse_id<br />Scope
        for public applications : read_inventory'
      operationId: api.stock_available.stock_id
      produces:
      - application/json
      parameters:
      - name: warehouse_id
        in: path
        description: ID of the warehouse
        required: true
        type: integer
      - name: product_category
        in: query
        description: Product category (int category_id)
        required: false
        type: integer
      - name: product_brand
        in: query
        description: Product brand (int brand_id)
        required: false
        type: integer
      - name: product_supplier
        in: query
        description: product_supplier (int supplier_id)
        required: false
        type: integer
      - name: product_arch
        in: query
        description: product_arch (1 OR 0 OR null)
        required: false
        type: integer
      - name: product_stock_management
        in: query
        description: product_stock_management (1 OR 0 OR null)
        required: false
        type: integer
      - name: product_supplier_reference
        in: query
        description: product_supplier_reference
        required: false
        type: string
      - name: product_vat
        in: query
        description: product_vat
        required: false
        type: integer
      - name: products_ref_ext
        in: query
        description: products_ref_ext
        required: false
        type: string
      - name: accounting_account
        in: query
        description: accounting_account
        required: false
        type: string
      - name: product_display_www
        in: query
        description: product_display_www
        required: false
        type: string
      responses:
        '200':
          description: Stock available overview for a defined warehouse_id
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_available/all_wh":
    get:
      tags:
      - stock
      - warehouses
      summary: Returns stock available for all warehouses
      description: 'Returns stock available for all warehouses<br />Scope for public
        applications : read_inventory'
      operationId: api.stock_available.all_wh
      produces:
      - application/json
      parameters:
      - name: product_category
        in: query
        description: Product category (int category_id)
        required: false
        type: integer
      - name: product_brand
        in: query
        description: Product brand (int brand_id)
        required: false
        type: integer
      - name: product_supplier
        in: query
        description: product_supplier (int supplier_id)
        required: false
        type: integer
      - name: product_arch
        in: query
        description: product_arch (1 OR 0 OR null)
        required: false
        type: integer
      - name: product_stock_management
        in: query
        description: product_stock_management (1 OR 0 OR null)
        required: false
        type: integer
      - name: product_supplier_reference
        in: query
        description: product_supplier_reference
        required: false
        type: string
      - name: product_vat
        in: query
        description: product_vat
        required: false
        type: integer
      - name: products_ref_ext
        in: query
        description: products_ref_ext
        required: false
        type: string
      - name: accounting_account
        in: query
        description: accounting_account
        required: false
        type: string
      - name: product_display_www
        in: query
        description: product_display_www
        required: false
        type: string
      responses:
        '200':
          description: Stock available overview for all warehouses
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_available/product_id/{product_id}":
    get:
      tags:
      - stock
      - products
      summary: Returns stock available for a specific product_id
      description: 'Returns stock available for a specific product_id<br />Scope for
        public applications : read_inventory'
      operationId: api.stock_available.product_id
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: ID of the product
        required: true
        type: integer
      responses:
        '200':
          description: Stock available overview for a defined ID product
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_available/product_id_size/{product_id}/{product_size}":
    get:
      tags:
      - stock
      - products
      summary: Returns stock available for a specific product_id and size_id
      description: 'Returns stock available for a specific product_id and size_id<br
        />Scope for public applications : read_inventory'
      operationId: api.stock_available.product_id_size
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: ID of the product
        required: true
        type: integer
      - name: product_size
        in: path
        description: Size ID of the product
        required: true
        type: integer
      responses:
        '200':
          description: Stock available overview for a defined ID product and size
            ID
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_available/sn/{product_id}/{product_size}":
    get:
      tags:
      - stock
      - products
      summary: Returns serial numbers available for a specific product_id and size_id
      description: 'Returns serial numbers available for a specific product_id and
        size_id<br />Scope for public applications : read_inventory<br />Results per
        page : 250'
      operationId: api.stock_available.by_sn
      produces:
      - application/json
      parameters:
      - name: product_id
        in: path
        description: ID of the product
        required: true
        type: integer
      - name: product_size
        in: path
        description: Size ID of the product
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Serial numbers available overview for a defined ID product
            and size ID
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_alert/":
    put:
      tags:
      - stock
      - products
      summary: Set product stock alert
      description: 'Set product stock alert<br />Scope for public applications : write_inventory'
      operationId: api.stock_available.set_alert
      produces:
      - application/json
      parameters:
      - name: warehouse_id
        in: formData
        description: warehouse_id
        required: true
        type: integer
      - name: product_id
        in: formData
        description: product_id
        required: true
        type: integer
      - name: product_size
        in: formData
        description: product_size. If none, 0
        required: false
        type: integer
      - name: alert
        in: formData
        description: New value for the stock alert. If none, 0
        required: false
        type: integer
      responses:
        '200':
          description: Alert successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/reset_stock_alerts/":
    get:
      tags:
      - stock
      - products
      summary: Reset stock alerts for all products for all warehouses
      description: 'Reset stock alerts for all products for all warehouses<br />Scope
        for public applications : write_inventory'
      operationId: api.stock_available.reset_stock_alert
      produces:
      - application/json
      responses:
        '200':
          description: Stock alerts successfully reseted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_inputs/warehouse_id/{warehouse_id}":
    get:
      tags:
      - stock
      - warehouses
      summary: Returns stock orders for a specific warehouse_i
      description: 'Returns stock orders for a specific warehouse_i<br />Scope for
        public applications : read_inventory<br />Results per page : 250'
      operationId: api.inventory_inputs.warehouse_id
      produces:
      - application/json
      parameters:
      - name: warehouse_id
        in: path
        description: ID of the warehouse
        required: true
        type: integer
      responses:
        '200':
          description: Iventory inputs overview for a defined warehouse_id
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_counts/":
    post:
      tags:
      - inventory_counts
      summary: Set/Modify a counted quantity for a product
      description: 'Set/Modify a counted quantity for a product<br />Scope for public
        applications : write_inventory'
      operationId: api.inventory_counts.add
      produces:
      - application/json
      parameters:
      - name: product_id
        in: formData
        description: Product ID
        required: true
        type: string
      - name: product_size
        in: formData
        description: Product size
        required: false
        type: string
      - name: warehouse_id
        in: formData
        description: Warehouse ID
        required: true
        type: string
      - name: quantity
        in: formData
        description: New quantity
        required: true
        type: string
      responses:
        '200':
          description: Product successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_close/":
    post:
      tags:
      - inventory_counts
      summary: Close an inventory count (stock-take)
      description: 'Close an inventory count (stock-take)<br />Scope for public applications
        : write_inventory'
      operationId: api.inventory_counts.close
      produces:
      - application/json
      parameters:
      - name: warehouse_id
        in: formData
        description: Warehouse ID
        required: true
        type: string
      responses:
        '200':
          description: Inventory successfully closed
        '500':
          description: Server error
        '400':
          description: Client error
        '401':
          description: Unauthorized action
  "/inventory_counts/sales/{warehouse_id}/{year}/{month}":
    get:
      tags:
      - inventory_counts
      summary: Returns sales linked to inventory counts for a specific month
      description: 'Returns sales linked to inventory counts for a specific month<br
        />Scope for public applications : read_inventory'
      operationId: api.inventory_counts.sales.index
      produces:
      - application/json
      parameters:
      - name: warehouse_id
        in: path
        description: warehouse_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      responses:
        '200':
          description: Payment types
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/inventory_counts/stock_orders/{warehouse_id}/{year}/{month}":
    get:
      tags:
      - inventory_counts
      summary: Returns stock orders linked to inventory counts for a specific month
      description: 'Returns stock orders linked to inventory counts for a specific
        month<br />Scope for public applications : read_inventory'
      operationId: api.inventory_counts.stock_orders.index
      produces:
      - application/json
      parameters:
      - name: warehouse_id
        in: path
        description: warehouse_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      responses:
        '200':
          description: Payment types
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_transfer/":
    get:
      tags:
      - products
      - stock_transfer
      summary: Returns stock transfers
      description: 'Returns stock transfers<br />Scope for public applications : read_inventory<br
        />Results per page : 250'
      operationId: api.stock_transfer.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Stock transfers
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - products
      - stock_transfer
      summary: Create a stock transfer
      description: 'Create a stock transfer<br />Scope for public applications : write_inventory'
      operationId: api.stock_transfer.add
      produces:
      - application/json
      parameters:
      - name: from_stock_id
        in: formData
        description: From stock ID
        required: true
        type: integer
      - name: to_stock_id
        in: formData
        description: To stock ID
        required: true
        type: integer
      - name: label
        in: formData
        description: Stock transfer label
        required: false
        type: string
      responses:
        '200':
          description: Stock transfer successfully created
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_transfer/{transfer_id}":
    get:
      tags:
      - products
      - stock_transfer
      summary: Returns details of a stock transfer
      description: 'Returns details of a stock transfer<br />Scope for public applications
        : read_inventory'
      operationId: api.stock_transfer_info.index
      produces:
      - application/json
      parameters:
      - name: transfer_id
        in: path
        description: transfer_id
        required: true
        type: integer
      responses:
        '200':
          description: Stock transfer details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_transfer_validate/":
    post:
      tags:
      - products
      - stock_transfer
      summary: Validate a stock transfer
      description: 'Validate a stock transfer<br />Scope for public applications :
        write_inventory'
      operationId: api.stock_transfer_validate.add
      produces:
      - application/json
      parameters:
      - name: transfer_id
        in: formData
        description: Stock transfer ID
        required: true
        type: integer
      responses:
        '200':
          description: Stock transfer successfully validated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_transfer_details/{transfer_id}":
    get:
      tags:
      - products
      - stock_transfer
      summary: Returns details of a stock transfer
      description: 'Returns details of a stock transfer<br />Scope for public applications
        : read_inventory'
      operationId: api.stock_transfer_details.index
      produces:
      - application/json
      parameters:
      - name: transfer_id
        in: path
        description: Stock transfer ID
        required: true
        type: integer
      responses:
        '200':
          description: Stock transfer details
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - products
      - stock_transfer
      summary: Add a product to a specific transfer_id
      description: 'Add a product to a specific transfer_id<br />Scope for public
        applications : write_inventory'
      operationId: api.stock_transfer_details.add_product
      produces:
      - application/json
      parameters:
      - name: transfer_id
        in: path
        description: Stock transfer ID
        required: true
        type: integer
      - name: product_id
        in: formData
        description: Product ID you need to add to the stock transfer
        required: true
        type: integer
      - name: product_size
        in: formData
        description: Product size you need to add to the stock transfer
        required: true
        type: integer
      - name: quantity
        in: formData
        description: Quantity (if empty value is 1)
        required: true
        type: integer
      responses:
        '201':
          description: Customer successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_transfer_details/{stock_transfer_detail_id}":
    delete:
      tags:
      - products
      - stock_transfer
      summary: Delete a stock_transfer_detail_id
      description: 'Delete a stock_transfer_detail_id<br />Scope for public applications
        : write_inventory'
      operationId: api.stock_transfer_details.delete
      produces:
      - application/json
      parameters:
      - name: stock_transfer_detail_id
        in: path
        description: stock_transfer_detail_id
        required: true
        type: integer
      responses:
        '200':
          description: Stock transfert detail ID successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stock_transfer_on_hold/":
    get:
      tags:
      - products
      - stock_transfer
      summary: Returns the list of stock transfer details on hold
      description: 'Returns the list of stock transfer details on hold<br />Scope
        for public applications : read_inventory<br />Results per page : 250'
      operationId: api.stock_transfer_details_on_hold.index
      produces:
      - application/json
      parameters:
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: Stock transfert details on hold
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/stores":
    get:
      tags:
      - stores
      summary: Returns stores by ID
      description: 'Returns stores by ID<br />Scope for public applications : read_settings'
      operationId: api.stores.index
      produces:
      - application/json
      responses:
        '200':
          description: Stores overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/subscriptions":
    get:
      tags:
      - subscriptions
      summary: Returns subscriptions
      description: 'Returns subscriptions<br />Scope for public applications : read_settings'
      operationId: api.subscriptions.get
      produces:
      - application/json
      responses:
        '200':
          description: Subscriptions
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/suppliers/":
    get:
      tags:
      - suppliers
      summary: Returns suppliers by ID
      description: 'Returns suppliers by ID<br />Scope for public applications : read
        products'
      operationId: api.suppliers.index
      produces:
      - application/json
      responses:
        '200':
          description: Suppliers overview
          schema:
            "$ref": "#/definitions/suppliers"
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    put:
      tags:
      - suppliers
      summary: Update a supplier
      description: 'Update a supplier<br />Scope for public applications : write_products'
      operationId: api.suppliers.update
      produces:
      - application/json
      parameters:
      - name: supplier_id
        in: formData
        description: ID of the supplier that needs to be updated
        required: true
        type: integer
      - name: supplier_attribute
        in: formData
        description: 'One of the following supplier attribute : supplier_name, supplier_enabled,
          supplier_position, supplier_contact, supplier_email, supplier_url, supplier_address,
          supplier_ref_ext'
        required: true
        type: string
        enum:
        - supplier_name
        - supplier_enabled
        - supplier_position
        - supplier_contact
        - supplier_email
        - supplier_url
        - supplier_address
        - supplier_ref_ext
      - name: new_value
        in: formData
        description: New value for the supplier attribute
        required: false
        type: string
      responses:
        '200':
          description: Supplier successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    post:
      tags:
      - suppliers
      summary: Create a new supplier
      description: 'Create a new supplier<br />Scope for public applications : write_products'
      operationId: api.suppliers.add
      produces:
      - application/json
      parameters:
      - name: supplier_name
        in: formData
        description: Name of the supplier that needs to be added
        required: false
        type: string
      - name: supplier_ref_ext
        in: formData
        description: External reference
        required: false
        type: string
      responses:
        '201':
          description: Customers address successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/suppliers/{supplier_id}":
    delete:
      tags:
      - suppliers
      summary: Delete a supplier
      description: 'Delete a supplier. All products with the deleted supplier will
        loose the information. Same for statistics for this supplier.<br />Scope for
        public applications : write_products'
      operationId: api.suppliers.delete
      produces:
      - application/json
      parameters:
      - name: supplier_id
        in: path
        description: ID of the supplier that needs to be deleted
        required: true
        type: integer
      responses:
        '200':
          description: Supplier successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/taxes":
    get:
      tags:
      - taxes
      summary: Returns taxes by ID
      description: 'Returns taxes by ID<br />Scope for public applications : read_settings'
      operationId: api.taxes.index
      produces:
      - application/json
      responses:
        '200':
          description: Taxes overview
          schema:
            "$ref": "#/definitions/taxes"
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/till/{store_id}/{year}/{month}":
    get:
      tags:
      - till
      summary: Returns cash movements for a store_id for a specific month
      description: 'Returns cash movements for a store_id for a specific month<br
        />Scope for public applications : read_reports'
      operationId: api.till.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      responses:
        '200':
          description: Till operations
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/till/cash_in":
    post:
      tags:
      - till
      summary: Add cash to your till
      description: 'Add cash to your till (aside from your sales payments) such as
        your cash float or additional money<br />Scope for public applications : write_reports'
      operationId: api.till.cash_in
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: store_id
        required: true
        type: string
      - name: amount
        in: formData
        description: Amount
        required: true
        type: string
      - name: currency_code
        in: formData
        description: Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes
        required: true
        type: string
      - name: comments
        in: formData
        description: Comments
        required: false
        type: string
      responses:
        '200':
          description: Cash successfully added
        '500':
          description: Server Error
        '401':
          description: Unauthorized action
  "/till/cash_out":
    post:
      tags:
      - till
      summary: Remove cash from your till
      description: 'Remove cash from your till (aside from change on cash payments)
        such as safe drops or store expenses<br />Scope for public applications :
        write_reports'
      operationId: api.till.cash_out
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: store_id
        required: true
        type: string
      - name: amount
        in: formData
        description: Amount
        required: true
        type: string
      - name: currency_code
        in: formData
        description: Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes
        required: true
        type: string
      - name: comments
        in: formData
        description: Comments
        required: false
        type: string
      responses:
        '200':
          description: Cash successfully removed
        '500':
          description: Server Error
        '401':
          description: Unauthorized action
  "/time_tracking/check_in":
    post:
      tags:
      - time_tracking
      summary: Check in a unique card_id
      description: 'Check in a unique card_id<br />Scope for public applications :
        write_time_tracking'
      operationId: api.time_tracking.check_in
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: store_id
        required: true
        type: string
      - name: customers_id
        in: formData
        description: customers_id
        required: true
        type: string
      - name: card_id
        in: formData
        description: Card ID
        required: true
        type: string
      responses:
        '201':
          description: Time tracking successfully added
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/time_tracking/check_out":
    post:
      tags:
      - time_tracking
      summary: Check out a unique card_id
      description: 'Check out a unique card_id<br />Scope for public applications
        : write_time_tracking'
      operationId: api.time_tracking.check_out
      produces:
      - application/json
      parameters:
      - name: store_id
        in: formData
        description: store_id
        required: true
        type: string
      - name: card_id
        in: formData
        description: Card ID
        required: true
        type: string
      responses:
        '200':
          description: Check out OK
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/time_tracking/{time_tracking_id}/":
    get:
      tags:
      - time_tracking
      summary: Returns time_tracking_id details
      description: 'Returns time_tracking_id details<br />Scope for public applications
        : read_time_tracking'
      operationId: api.time_tracking.index
      produces:
      - application/json
      parameters:
      - name: time_tracking_id
        in: path
        description: time_tracking_id
        required: true
        type: integer
      responses:
        '200':
          description: time_tracking overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
    put:
      tags:
      - time_tracking
      summary: Update a time_tracking id
      description: 'Update a time_tracking id<br />Scope for public applications :
        write_time_tracking'
      operationId: api.time_tracking.update
      produces:
      - application/json
      parameters:
      - name: time_tracking_id
        in: path
        description: time_tracking_id
        required: true
        type: integer
      - name: time_tracking_attribute
        in: formData
        description: 'One of the following time_tracking_attribute : sale_id, hide_time_tracking
          (0|1), customer_id, start, end'
        required: true
        type: string
      - name: new_value
        in: formData
        description: New value for the time_tracking attribute
        required: false
        type: string
      responses:
        '200':
          description: time_tracking id successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/time_tracking_date/{store_id}/{year}/{month}/{day}/":
    get:
      tags:
      - time_tracking
      summary: Returns time_tracking details for store_id for a specific day
      description: 'Returns time_tracking details for store_id for a specific day<br
        />Scope for public applications : read_time_tracking'
      operationId: api.time_tracking_date.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: time_tracking overview for store_id for a specific day
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/time_tracking_sale/{sale_id}/":
    get:
      tags:
      - time_tracking
      summary: Returns time_tracking_id details for a given sale_id
      description: 'Returns time_tracking_id details for a given sale_id<br />Scope
        for public applications : read_time_tracking'
      operationId: api.time_tracking_sale.index
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: path
        description: sale_id
        required: true
        type: integer
      responses:
        '200':
          description: time_tracking overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/customers_time_tracking/{customer_id}/":
    get:
      tags:
      - time_tracking
      summary: Returns time_tracking for a specific customer_id
      description: 'Returns time_tracking for a specific customer_id<br />Scope for
        public applications : read_time_tracking'
      operationId: api.customers_time_tracking.index
      produces:
      - application/json
      parameters:
      - name: customer_id
        in: path
        description: customer_id
        required: true
        type: integer
      - name: p
        in: query
        description: Page number
        required: false
        type: string
      responses:
        '200':
          description: time_tracking overview
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/users":
    get:
      tags:
      - users
      summary: Returns users by ID
      description: 'Returns users by ID<br />Scope for public applications : no access'
      operationId: api.users.index
      produces:
      - application/json
      responses:
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/user/password":
    put:
      tags:
      - users
      summary: Update a user's password
      description: 'Update a user''s password<br />Scope for public applications :
        no access'
      operationId: api.user.update_password
      produces:
      - application/json
      parameters:
      - name: user_id
        in: formData
        description: ID of the user that needs to be updated
        required: true
        type: integer
      - name: new_password
        in: formData
        description: New password
        required: false
        type: string
      responses:
        '200':
          description: User's password successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/warehouses":
    get:
      tags:
      - warehouses
      summary: Returns warehouses by ID
      description: 'Returns warehouses by ID<br />Scope for public applications :
        read_settings'
      operationId: api.warehouses.index
      produces:
      - application/json
      responses:
        '200':
          description: Warehouses overview
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/webhooks":
    get:
      tags:
      - webhooks
      summary: Returns webhooks
      description: 'Returns webhooks<br />Scope for public applications : none'
      operationId: api.webhooks.get
      produces:
      - application/json
      responses:
        '200':
          description: Webhooks
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/webhooks/":
    post:
      tags:
      - webhooks
      summary: Add a webhook
      description: 'Add a webhook<br />Scope for public applications : none'
      operationId: api.webhooks.add
      produces:
      - application/json
      parameters:
      - name: webhook_label
        in: formData
        description: The text that will appear to the merchant. It should be task
          oriented, and not just the name of your app.
        required: true
        type: string
      - name: webhook_url
        in: formData
        description: The URL where your app is hosted, or a specific URL for this
          task. If your url is non valid or if it drops an error, your action will
          be blocked
        required: true
        type: string
      - name: webhook_action
        in: formData
        description: 'The event type that should initiate the webhook : close sale,
          update/create product, add/delete payment, add/update stock_order, update/create
          customer, start/end timestamp, schedule, add/delete product in a sale sale_item,
          store_credit, validate stock transfer, line_item_exchange, sale_creation,
          sale_deletion'
        required: true
        type: string
        enum:
        - sale
        - product
        - payment
        - stock_order
        - customer
        - timestamp
        - schedule
        - sale_item
        - store_credit
        - stock_transfer
        - line_item_exchange
        - sale_creation
        - sale_deletion
      - name: webhook_app_id_int
        in: formData
        description: The unique webhook id if used by an app (if already exists, it
          will be replaced). Max 80 chars.
        required: false
        type: string
      - name: webhook_store_id
        in: formData
        description: The store id where the webhook should be executed. If value is
          0, the webhook will be executed in every store. If empty, default value
          is 0.
        required: false
        type: integer
      - name: webhook_user_id
        in: formData
        description: The user id for wich the webhook should be executed. If value
          is 0, the webhook will be executed for all users. If empty, default value
          is 0
        required: false
        type: integer
      - name: webhook_async
        in: formData
        description: If the webhook is asynchronous. This is usefull if your endpont
          might be long to respond (more than 4 seconds) or if you have many webhooks
          for the same action. If empty, default value is 0
        required: false
        type: integer
      responses:
        '200':
          description: Webhook successfully added
        '500':
          description: Server Error
        '401':
          description: Unauthorized action
  "/webhooks/{webhook_id}":
    delete:
      tags:
      - webhooks
      summary: Delete a webhook
      description: 'Delete a webhook<br />Scope for public applications : none'
      operationId: api.webhooks.delete
      produces:
      - application/json
      parameters:
      - name: webhook_id
        in: path
        description: webhook_id to delete
        required: true
        type: integer
      responses:
        '200':
          description: Webhook successfully deleted
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '404':
          description: Not found - the resource does not exist
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/payment_types/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns sales payments for store_id for a specific day
      description: 'Returns sales payments for store_id for a specific day<br />Scope
        for public applications : read_reports'
      operationId: api.z.payment_types.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by payment types
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/payments_received/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns payments received for store_id for a specific day
      description: 'Returns payments received for store_id for a specific day<br />Scope
        for public applications : read_reports'
      operationId: api.z.payments_received.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by payments received
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/customers_credit_deposits/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns customers credit deposits for store_id for a specific day
      description: 'Returns customers credit deposits for store_id for a specific
        day<br />Scope for public applications : read_reports'
      operationId: api.z.customers_credit_deposits.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by customers credit deposits
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/customers/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns customers sales for store_id for a specific day
      description: 'Returns customers sales for store_id for a specific day<br />Scope
        for public applications : read_reports'
      operationId: api.z.customers.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by customers sales
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/taxes/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns sales taxes for store_id for a specific day
      description: 'Returns sales taxes for store_id for a specific day<br />Scope
        for public applications : read_reports'
      operationId: api.z.taxes.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by taxes
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/categories/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns categories statistics for store_id for a specific day
      description: 'Returns categories statistics for store_id for a specific day<br
        />Scope for public applications : read_reports'
      operationId: api.z.categories.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by categories
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/accounting_accounts/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns accounting_accounts statistics for store_id for a specific
        day
      description: 'Returns accounting_accounts statistics for store_id for a specific
        day<br />Scope for public applications : read_reports'
      operationId: api.z.accounting_accounts.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by accouting accounts
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/date/":
    put:
      tags:
      - z
      - sales
      summary: Update the end-of-day date for a sale_id
      description: 'Update the end-of-day date for a sale_id<br />Scope for public
        applications : write_reports'
      operationId: api.z.update_date_z
      produces:
      - application/json
      parameters:
      - name: sale_id
        in: formData
        description: Sale ID
        required: true
        type: string
      - name: date_z
        in: formData
        description: 'Date Z | format : YYYY-MM-DD'
        required: true
        type: string
      responses:
        '200':
          description: date_z successfully updated
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '406':
          description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
            ''application/json'''
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/closure/{store_id}/{year}/{month}/{day}":
    post:
      tags:
      - z
      summary: Close the day and previous days
      description: 'Close the day and previous days<br />Scope for public applications
        : forbidden'
      operationId: api.z.closure.add
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: End-of-day report by taxes
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
  "/z/cash_book/{store_id}/{year}/{month}/{day}":
    get:
      tags:
      - z
      summary: Returns cash book movements for store_id for a specific day or month
      description: 'Returns cash book movements for store_id for a specific day or
        month <br />Scope for public applications : read_reports<br />Results per
        page : 250'
      operationId: api.z.cash_book.index
      produces:
      - application/json
      parameters:
      - name: store_id
        in: path
        description: store_id
        required: true
        type: integer
      - name: year
        in: path
        description: Year
        required: true
        type: integer
      - name: month
        in: path
        description: Month
        required: true
        type: integer
      - name: day
        in: path
        description: Day
        required: true
        type: integer
      responses:
        '200':
          description: Cash book movements report
        '401':
          description: Unauthorized - invalid authentication
          schema:
            "$ref": "#/definitions/error"
        '403':
          description: Forbidden - insufficient user rights
          schema:
            "$ref": "#/definitions/error"
        '422':
          description: Unprocessable entity - an error was encountered when parsing
            the data
          schema:
            "$ref": "#/definitions/error"
        '500':
          description: Internal server error
          schema:
            "$ref": "#/definitions/error"
definitions:
  error:
    required:
    - code
    - message
    properties:
      error:
        type: string
      error_description:
        type: string
      code:
        type: integer
        format: int32
      details:
        type: object
  category:
    required:
    - category_id
    - category_name
    - category_id_parent
    - category_enabled
    - category_position
    - category_bck_color
    - category_color
    properties:
      category_id:
        type: number
      category_name:
        type: string
      category_id_parent:
        type: number
      category_enabled:
        type: number
      category_position:
        type: number
      category_bck_color:
        type: string
      category_color:
        type: string
  product:
    required:
    - product_id
    - product_model
    - product_barcode
    - product_brand
    - product_supplier
    - product_price
    - product_discount_price
    - product_supply_price
    - product_category
    - product_size_type
    - product_stock_management
    - product_supplier_reference
    - product_vat
    properties:
      product_id:
        type: number
      product_model:
        type: string
      product_barcode:
        type: string
      product_brand:
        type: number
      product_supplier:
        type: number
      product_price:
        type: string
      product_discount_price:
        type: string
      product_supply_price:
        type: string
      product_category:
        type: number
      product_size_type:
        type: number
      product_stock_management:
        type: number
      product_supplier_reference:
        type: string
      product_vat:
        type: number
  brands:
    required:
    - brand_id
    - brand_name
    - brand_enabled
    - brand_position
    properties:
      brand_id:
        type: integer
      brand_name:
        type: string
      brand_enabled:
        type: integer
      brand_position:
        type: integer
  suppliers:
    required:
    - supplier_id
    - supplier_name
    - supplier_enabled
    - supplier_position
    properties:
      supplier_id:
        type: integer
      supplier_name:
        type: string
      supplier_enabled:
        type: integer
      supplier_position:
        type: integer
  taxes:
    required:
    - tax_id
    - tax_value
    - tax_name
    - tax_enabled
    - tax_default
    - tax_position
    properties:
      tax_id:
        type: integer
      tax_value:
        type: string
      tax_name:
        type: string
      tax_enabled:
        type: integer
      tax_default:
        type: integer
      tax_position:
        type: integer
  users:
    required:
    - user_id
    - user_last_name
    - user_first_name
    - user_email
    - user_validity
    - user_manager_id
    properties:
      user_id:
        type: integer
      user_last_name:
        type: string
      user_first_name:
        type: string
      user_email:
        type: string
      user_fasti:
        type: integer
      user_validity:
        type: string
      user_manager_id:
        type: integer
  productslist:
    required:
    - start
    - number
    properties:
      start:
        type: integer
      number:
        type: string
parameters:
  store_id:
    name: store_id
    in: formData
    description: store_id
    required: true
    type: integer
  vendor_id:
    name: vendor_id
    in: formData
    description: vendor_id
    required: true
    type: integer
  url:
    name: url
    in: formData
    description: url
    required: true
    type: string
responses:
  '200':
    description: Message successfully sent
  '401':
    description: Unauthorized - invalid authentication
    schema:
      "$ref": "#/definitions/error"
  '403':
    description: Forbidden - insufficient user rights
    schema:
      "$ref": "#/definitions/error"
  '406':
    description: 'Not Acceptable - wrong ''Content-type''; accepted: ''application/x-www-form-urlencoded'',
      ''application/json'''
    schema:
      "$ref": "#/definitions/error"
  '422':
    description: Unprocessable entity - an error was encountered when parsing the
      data
    schema:
      "$ref": "#/definitions/error"
  '500':
    description: Internal server error
    schema:
      "$ref": "#/definitions/error"
