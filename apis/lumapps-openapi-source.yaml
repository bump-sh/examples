---
info:
  termsOfService: https://www.lumapps.com/terms-and-conditions/end-user-licence-agreement-english/
  license:
    url: https://www.lumapps.com/terms-and-conditions/end-user-licence-agreement-english/
    name: LumApps EULA
  title: LumApps API v1
  contact:
    url: https://apiv1.lumapps.com
    name: LumApps API team
    email: support@lumapps.com
  version: 1.0.0
  x-logo:
    url: https://cdn.welcometothejungle.co/uploads/organization/logo/1173/152120/lumapps.png
    altText: LumApps logo
paths:
  "/lumsites/v1/customer/admin/add":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/AdminRequest"
        name: body
        in: body
      tags:
      - Customer
      summary: Admin/Add
      operationId: Customer/Admin/Add
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.admin.add'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Add an administrator.
  "/lumsites/v1/instance/admin/add":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/InstanceAdminRequest"
        name: body
        in: body
      tags:
      - Instance
      summary: Admin/Add
      operationId: Instance/Admin/Add
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.admin.add'><button class='pure-material-button-contained'>Try it</button></a>

        Add an instance administrator.
  "/lumsites/v1/customer/admin/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The list of email addresses used to filter the admin list.
        name: email
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Customer
      summary: Admin/Delete
      operationId: Customer/Admin/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.admin.delete'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Delete an administrator.
  "/lumsites/v1/instance/admin/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - required: true
        type: string
        description: The email of the instance's administrator.
        name: email
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Instance
      summary: Admin/Delete
      operationId: Instance/Admin/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.admin.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete an instance administrator.
  "/lumsites/v1/customer/admin/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/AdminListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: "The status of the user.  <br> \n    Acceptable values are:  <br>
          \n     - \"ENABLED\": The user account is still live. (default)  <br> \n
          \    - \"DISABLED\": The user account has been deactivated."
        name: status
        in: query
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      tags:
      - Customer
      summary: Admin/List
      operationId: Customer/Admin/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.admin.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a list of administrators.
  "/lumsites/v1/instance/admin/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/InstanceAdminListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: "The status of the user.  <br> \n    Acceptable values are:  <br>
          \n     - \"ENABLED\": The user account is still live. (default)  <br> \n
          \    - \"DISABLED\": The user account has been deactivated."
        name: status
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Instance
      summary: Admin/List
      operationId: Instance/Admin/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.admin.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of instance administrators.
  "/lumsites/v1/community/request/approve":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/CommunityRequestStatusRequest"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Community Request
      summary: Approve
      operationId: Community Request/Approve
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communityrequest.approve'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Approve a community access request.
  "/lumsites/v1/content/archive":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Content
      summary: Archive
      operationId: Content/Archive
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.archive'><button class='pure-material-button-contained'>Try it</button></a>

        Archive a content.
  "/lumsites/v1/user/beta/add":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/BetaAddRequest"
        name: body
        in: body
      tags:
      - User
      summary: Beta/Add
      operationId: User/Beta/Add
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.beta.add'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Add a beta user.
  "/lumsites/v1/user/beta/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/BetaRemoveResponse"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: A list of ids of users to remove from beta users.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - User
      summary: Beta/Deletemulti
      operationId: User/Beta/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.beta.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Delete multiple beta users.
  "/lumsites/v1/user/beta/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - User
      summary: Beta/List
      operationId: User/Beta/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.beta.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a list of beta users.
  "/lumsites/v1/role/check":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/RoleCheckResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/RoleCheckRequest"
        name: body
        in: body
      tags:
      - Role
      summary: Check
      operationId: Role/Check
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.role.check'><button class='pure-material-button-contained'>Try it</button></a>

        Check if a user is allowed to do an action.
  "/lumsites/v1/community/post/{uid}/close":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: path
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Close
      operationId: Community Post/Close
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.close'><button class='pure-material-button-contained'>Try it</button></a>

        Close a post.
  "/lumsites/v1/community/post/comments/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommentListResponse"
      parameters:
      - required: true
        type: string
        description: The ID of the content containing the community post.
        name: contentId
        in: query
      - type: string
        description: The ID of a comment to list the children from.
        name: parent
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Comments/List
      operationId: Community Post/Comments/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.comments.list'><button class='pure-material-button-contained'>Try it</button></a>

        List comments.
  "/lumsites/v1/search/community":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SearchContentRequest"
        name: body
        in: body
      - type: string
        name: fields
        in: query
      tags:
      - Search
      summary: Community
      operationId: Search/Community
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.search.community'><button class='pure-material-button-contained'>Try it</button></a>

        List communities matching the search criteria.
  "/lumsites/v1/analyticsv2/get_indicators_community":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/GenericAnalyticsResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/AnalyticsCommunityRequest"
        name: body
        in: body
      tags:
      - Analyticsv2
      summary: Community/Indicators
      operationId: Analyticsv2/Community/Indicators
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analyticsv2.community.indicators'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve the requested production adoption analytic indicators.
  "/lumsites/v1/search/content":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ContentListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SearchContentRequest"
        name: body
        in: body
      - type: string
        name: fields
        in: query
      tags:
      - Search
      summary: Content
      operationId: Search/Content
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.search.content'><button class='pure-material-button-contained'>Try it</button></a>

        List contents matching the search criteria.
  "/lumsites/v1/social/subscription/content/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SubscriptionContentsListResponse"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: Type of content associated to subscription
        in: query
        type: array
        name: contentType
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Social Subscription
      summary: Content/List
      operationId: Social Subscription/Content/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.socialsubscription.content.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List all contents current user is following
  "/lumsites/v1/search/contentandmedia":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ContentAndMediaListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SearchContentAndMediaRequest"
        name: body
        in: body
      tags:
      - Search
      summary: Contentandmedia
      operationId: Search/Contentandmedia
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.search.contentandmedia'><button class='pure-material-button-contained'>Try it</button></a>

        List contents and media matching the search criteria.
  "/lumsites/v1/classroom/courses/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CourseListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int64
        default: 30
        in: query
        type: string
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Classroom
      summary: Courses/List
      operationId: Classroom/Courses/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.classroom.courses.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List courses of a specific user.
  "/lumsites/v1/classroom/courseWork/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CourseWorkListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int64
        default: 30
        in: query
        type: string
        name: maxResults
      - type: string
        description: Identifier of the course.
        name: courseId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Classroom
      summary: Coursework/List
      operationId: Classroom/Coursework/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.classroom.coursework.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Lists coursework of the first course.
  "/lumsites/v1/groups/create":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CreateResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CreateRequest"
        name: body
        in: body
      tags:
      - Groups
      summary: Create
      operationId: Groups/Create
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.groups.create'><button class='pure-material-button-contained'>Try it</button></a>

        Create an external API group
  "/lumsites/v1/cloudsearch/customfields/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CloudSearchSourceCustomFieldsResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CloudSearchSourceIdRequest"
        name: body
        in: body
      tags:
      - Cloudsearch
      summary: Customfields/List
      operationId: Cloudsearch/Customfields/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.cloudsearch.customfields.list'><button class='pure-material-button-contained'>Try it</button></a>

        *alpha* Save the given datasource settings.
  "/lumsites/v1/cloudsearch/datasourceconfig/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CloudSearchDataSourceListMessage"
      parameters:
      - required: true
        type: string
        description: "*beta* The ID of the customer."
        name: customerId
        in: query
      - type: string
        description: "*beta* The ID of the call."
        name: callId
        in: query
      tags:
      - Cloudsearch
      summary: Datasourceconfig/Get
      operationId: Cloudsearch/Datasourceconfig/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.cloudsearch.datasourceconfig.get'><button class='pure-material-button-contained'>Try it</button></a>

        *alpha* List the available CloudSearch datasets.
  "/lumsites/v1/cloudsearch/datasourceconfig/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CloudSearchDataSourceListMessage"
      parameters:
      - schema:
          "$ref": "#/definitions/CloudSearchDataSourceListMessage"
        name: body
        in: body
      tags:
      - Cloudsearch
      summary: Datasourceconfig/Save
      operationId: Cloudsearch/Datasourceconfig/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.cloudsearch.datasourceconfig.save'><button class='pure-material-button-contained'>Try it</button></a>

        *alpha* Save the given datasource settings.
  "/lumsites/v1/role/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Role
      summary: Delete
      operationId: Role/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.role.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a role.
  "/lumsites/v1/directory/entry/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory Entry
      summary: Delete
      operationId: Directory Entry/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a directory entry.
  "/lumsites/v1/community/post/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Delete
      operationId: Community Post/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a post.
  "/lumsites/v1/template/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Template
      summary: Delete
      operationId: Template/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.template.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a template.
  "/lumsites/v1/notification/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Notification
      summary: Delete
      operationId: Notification/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a notification.
  "/lumsites/v1/feed/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Feed
      summary: Delete
      operationId: Feed/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a feed.
  "/lumsites/v1/social/subscription/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Social Subscription
      summary: Delete
      operationId: Social Subscription/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.socialsubscription.delete'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Delete a subscription.
  "/lumsites/v1/customcontenttype/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Customcontenttype
      summary: Delete
      operationId: Customcontenttype/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a custom content type.
  "/lumsites/v1/tutorial/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Tutorial
      summary: Delete
      operationId: Tutorial/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tutorial.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a tutorial.
  "/lumsites/v1/directory/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory
      summary: Delete
      operationId: Directory/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directory.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a directory.
  "/lumsites/v1/content/interest/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        name: fields
        in: query
      tags:
      - Content Interest
      summary: Delete
      operationId: Content Interest/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentinterest.delete'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Delete a interest.
  "/lumsites/v1/media/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Media
      summary: Delete
      operationId: Media/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.delete'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Delete a media. (deprecated)
  "/lumsites/v1/community/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community
      summary: Delete
      operationId: Community/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a community.
  "/lumsites/v1/style/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Style
      summary: Delete
      operationId: Style/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.style.delete'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Delete a style.
  "/lumsites/v1/content/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Content
      summary: Delete
      operationId: Content/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a content.
  "/lumsites/v1/newsletter/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Newsletter
      summary: Delete
      operationId: Newsletter/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.newsletter.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a newsletter.
  "/lumsites/v1/widget/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Widget
      summary: Delete
      operationId: Widget/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widget.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a widget.
  "/lumsites/v1/communitytemplate/delete":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - type: string
        description: The CommunityTemplate id.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Communitytemplate
      summary: Delete
      operationId: Communitytemplate/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitytemplate.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a template.
  "/lumsites/v1/instance/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Instance
      summary: Delete
      operationId: Instance/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete an instance.
  "/lumsites/v1/groups/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The group identifier (email or ID for example).
        name: groupIdentifier
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Groups
      summary: Delete
      operationId: Groups/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.groups.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete an external API group
  "/lumsites/v1/metadata/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      tags:
      - Metadata
      summary: Delete
      operationId: Metadata/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.metadata.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a metadata.
  "/lumsites/v1/analyticsv2/filter/delete":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Filter"
      parameters:
      - type: string
        name: uid
        in: query
      tags:
      - Analyticsv2 Filter
      summary: Delete
      operationId: Analyticsv2 Filter/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analyticsv2filter.delete'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Delete a filter
  "/lumsites/v1/tag/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Tag
      summary: Delete
      operationId: Tag/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tag.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a tag.
  "/lumsites/v1/favorite/having_target":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FavoriteListResponse"
      parameters:
      - required: true
        type: string
        description: The kind of the entity.
        name: kind
        in: query
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Favorite
      summary: Delete_Having_Target
      operationId: Favorite/Delete_Having_Target
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.favorite.delete_having_target'><button class='pure-material-button-contained'>Try it</button></a>

        Delete the favorites with the given target.
  "/lumsites/v1/notification/deleteAll":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - type: string
        description: The external key to link a content, directory entry or other.
        name: externalKey
        in: query
      - type: string
        description: The external key kind.
        name: externalKeyKind
        in: query
      tags:
      - Notification
      summary: Deleteall
      operationId: Notification/Deleteall
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.deleteall'><button class='pure-material-button-contained'>Try it</button></a>

        Delete all notifications.
  "/lumsites/v1/newsletter/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Newsletter
      summary: Deletemulti
      operationId: Newsletter/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.newsletter.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of newsletters.
  "/lumsites/v1/instance/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Instance
      summary: Deletemulti
      operationId: Instance/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of instances.
  "/lumsites/v1/communitytemplate/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The CommunityTemplate id.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Communitytemplate
      summary: Deletemulti
      operationId: Communitytemplate/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitytemplate.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of templates.
  "/lumsites/v1/widget/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Widget
      summary: Deletemulti
      operationId: Widget/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widget.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete multiple widgets.
  "/lumsites/v1/media/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Media
      summary: Deletemulti
      operationId: Media/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Delete multiple media. (deprecated)
  "/lumsites/v1/directory/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory
      summary: Deletemulti
      operationId: Directory/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directory.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of directory.
  "/lumsites/v1/customcontenttype/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Customcontenttype
      summary: Deletemulti
      operationId: Customcontenttype/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of custom content types.
  "/lumsites/v1/template/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Template
      summary: Deletemulti
      operationId: Template/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.template.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of templates.
  "/lumsites/v1/directory/entry/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory Entry
      summary: Deletemulti
      operationId: Directory Entry/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of directory entries.
  "/lumsites/v1/tag/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Tag
      summary: Deletemulti
      operationId: Tag/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tag.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of tags.
  "/lumsites/v1/community/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community
      summary: Deletemulti
      operationId: Community/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of community.
  "/lumsites/v1/content/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Content
      summary: Deletemulti
      operationId: Content/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of contents.
  "/lumsites/v1/search/directory":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SearchDirectoryResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SearchDirectoryRequest"
        name: body
        in: body
      tags:
      - Search
      summary: Directory
      operationId: Search/Directory
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.search.directory'><button class='pure-material-button-contained'>Try it</button></a>

        List directories matching the search criteria.
  "/lumsites/v1/search/directory/entry":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SearchDirectoryEntryResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SearchDirectoryEntryRequest"
        name: body
        in: body
      tags:
      - Search
      summary: Directory/Entry
      operationId: Search/Directory/Entry
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.search.directory.entry'><button class='pure-material-button-contained'>Try it</button></a>

        List directory entries matching the search criteria.
  "/lumsites/v1/calendar/event/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CalendarEventListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The start date.
        name: startDate
        in: query
      - type: string
        description: The end date.
        name: endDate
        in: query
      - type: string
        description: The ID of a Google calendar to list the next events from.
        name: calendarId
        in: query
      - type: string
        description: The text to filter events on.
        name: query
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Calendar
      summary: Event/List
      operationId: Calendar/Event/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.calendar.event.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List Calendar events.
  "/lumsites/v1/user/favorite/add":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntry"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - User
      summary: Favorite/Add
      operationId: User/Favorite/Add
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.favorite.add'><button class='pure-material-button-contained'>Try it</button></a>

        Add a directory entry as favorite for the current user.
  "/lumsites/v1/user/favorite/destroy":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - User
      summary: Favorite/Destroy
      operationId: User/Favorite/Destroy
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.favorite.destroy'><button class='pure-material-button-contained'>Try it</button></a>

        Remove a directory entry from current user's favorite directory entries.
  "/lumsites/v1/user/favorite/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntryListResponse"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of instance identifiers.
        in: query
        type: array
        name: instance
      - required: true
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of directories used to filter the favorites.
        in: query
        type: array
        name: directory
      - type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
        name: status
        in: query
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - collectionFormat: multi
        items:
          type: string
        description: The list of tags used to filter the favorites.
        in: query
        type: array
        name: tags
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - User
      summary: Favorite/List
      operationId: User/Favorite/List
      description: "<a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.favorite.list'><button
        class='pure-material-button-contained'>Try it</button></a>\n\nList every directory
        entry a user has in its favorites.  <br> \n        It can be entries user
        put explicitly, or entries inherited from subscriptions."
  "/lumsites/v1/drive/files/copy":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DriveFileResource"
      parameters:
      - schema:
          "$ref": "#/definitions/DriveCopyFileRequest"
        name: body
        in: body
      tags:
      - Drive
      summary: Files/Copy
      operationId: Drive/Files/Copy
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.copy'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Copy a Google drive file.
  "/lumsites/v1/drive/files/destroy":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DriveFileIdRequest"
        name: body
        in: body
      tags:
      - Drive
      summary: Files/Destroy
      operationId: Drive/Files/Destroy
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.destroy'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Permanently deletes a Google Drive file owned by the user without moving it to the trash.
  "/lumsites/v1/drive/files/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DriveFileResource"
      parameters:
      - type: string
        description: The ID of the file.
        name: fileId
        in: query
      - type: string
        description: Kind of Drive file
        name: kind
        in: query
      tags:
      - Drive
      summary: Files/Get
      operationId: Drive/Files/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a file's metadata by ID.
  "/lumsites/v1/drive/files/insert":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DriveFileResource"
      parameters:
      - schema:
          "$ref": "#/definitions/DriveInsertRequest"
        name: body
        in: body
      tags:
      - Drive
      summary: Files/Insert
      operationId: Drive/Files/Insert
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.insert'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Create a new Google Drive file.
  "/lumsites/v1/drive/files/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DriveListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int64
        default: 30
        in: query
        type: string
        name: maxResults
      - type: boolean
        description: Whether to list documents shared to the user's domain.
        name: complete
        in: query
      - type: string
        description: The ID of the folder to list files from.
        name: folderId
        in: query
      - type: string
        description: |-
          The MIME type of the files to list
                                                              (ignored if folderOnly is set to true).
        name: mimeType
        in: query
      - type: boolean
        description: Whether to list folders only.
        name: folderOnly
        in: query
      - type: boolean
        description: Whether to list all the files.
        name: fetchAll
        in: query
      - type: string
        description: |-
          A comma-separated list of sort keys.
                                                             Valid keys are 'createdDate', 'folder',
                                                             'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate',
                                                             'quotaBytesUsed', 'recency', 'sharedWithMeDate',
                                                             'starred', and 'title'.
                                                             Each key sorts ascending by default, but may be reversed
                                                             with the 'desc' modifier.
                                                             Example usage: ?orderBy=folder,modifiedDate desc,title.
        name: orderBy
        in: query
      - type: string
        description: Kind of Drive file
        name: kind
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Drive
      summary: Files/List
      operationId: Drive/Files/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List files from a specific Google Drive folder.
  "/lumsites/v1/drive/files/move":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DriveMoveFileRequest"
        name: body
        in: body
      tags:
      - Drive
      summary: Files/Move
      operationId: Drive/Files/Move
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.move'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Move a Google drive file in another folder.
  "/lumsites/v1/drive/files/search":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DriveListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the folder to search files from.
        name: folderId
        in: query
      - type: string
        description: The query to search in the title of the files.
        name: title
        in: query
      - type: string
        description: The query to search everywhere in the files.
        name: fullText
        in: query
      - type: string
        description: The MIME type of the files to search.
        name: mimeType
        in: query
      - type: boolean
        description: Whether to search in files shared with the user.
        name: sharedWithMe
        in: query
      - type: boolean
        description: Whether to search in files starred by the user.
        name: starred
        in: query
      - type: string
        description: Full text query to search files
        name: fullTextQuery
        in: query
      - type: string
        description: Kind of Drive file
        name: kind
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Drive
      summary: Files/Search
      operationId: Drive/Files/Search
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.search'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Search files from Google Drive.
  "/lumsites/v1/drive/files/trash":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DriveFileIdRequest"
        name: body
        in: body
      tags:
      - Drive
      summary: Files/Trash
      operationId: Drive/Files/Trash
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.trash'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Put a Google Drive file in the trash folder.
  "/lumsites/v1/drive/files/untrash":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DriveFileIdRequest"
        name: body
        in: body
      tags:
      - Drive
      summary: Files/Untrash
      operationId: Drive/Files/Untrash
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.untrash'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Restore a Google Drive file from the trash folder.
  "/lumsites/v1/drive/files/update":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DriveFileResource"
      parameters:
      - schema:
          "$ref": "#/definitions/DriveUpdateFileRequest"
        name: body
        in: body
      tags:
      - Drive
      summary: Files/Update
      operationId: Drive/Files/Update
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.files.update'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Update a Google Drive file metadata or content.
  "/lumsites/v1/content/interest/find":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Interest"
      parameters:
      - schema:
          "$ref": "#/definitions/InterestListRequest"
        name: body
        in: body
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        name: fields
        in: query
      tags:
      - Content Interest
      summary: Find
      operationId: Content Interest/Find
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentinterest.find'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve an interest from its parameters
  "/lumsites/v1/media/folder":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Folder"
      parameters:
      - schema:
          "$ref": "#/definitions/Folder"
        name: body
        in: body
      tags:
      - Media
      summary: Folder
      operationId: Media/Folder
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.folder'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Create (or update) a folder.
  "/lumsites/v1/media/folder/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FolderListResponse"
      parameters:
      - type: string
        description: The ID of the customer.
        name: customer
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The ID of the instance.
        in: query
        type: array
        name: instance
      - type: string
        description: The query used to filter the result.
        name: query
        in: query
      - type: string
        description: The name of the media used to filter the list.
        name: name
        in: query
      - required: true
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of media IDs.
        in: query
        type: array
        name: ids
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The type of query.
        name: queryType
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of tags.
        in: query
        type: array
        name: tags
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      - type: string
        description: The ID of the current instance.
        name: currentInstance
        in: query
      - type: string
        description: The parent folder ID.
        name: parentFolder
        in: query
      - type: boolean
        description: Whether look in trash or not.
        name: trashed
        in: query
      - type: boolean
        description: Whether show fsitem recursively.
        name: recursive
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Media
      summary: Folder/List
      operationId: Media/Folder/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.folder.list'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                List all folder matching the request.

                Args:
                    request (FolderListRequest): The request.

                Returns:
                    FolderListResponse: The response.
  "/lumsites/v1/media/folder/move":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Folder"
      parameters:
      - schema:
          "$ref": "#/definitions/FileSystemItemMoveRequest"
        name: body
        in: body
      tags:
      - Media
      summary: Folder/Move
      operationId: Media/Folder/Move
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.folder.move'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Move a folder.
  "/lumsites/v1/document/folder/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Media"
      parameters:
      - schema:
          "$ref": "#/definitions/CreateFolderRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Folder/Save
      operationId: Document/Folder/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.folder.save'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Create a folder.
  "/lumsites/v1/media/folder/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Folder"
      parameters:
      - schema:
          "$ref": "#/definitions/Folder"
        name: body
        in: body
      tags:
      - Media
      summary: Folder/Save
      operationId: Media/Folder/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.folder.save'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Create (or update) a folder.
  "/lumsites/v1/community/{id}/follow":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Subscription"
      parameters:
      - required: true
        type: string
        description: The ID of the Content.
        name: id
        in: path
      - type: boolean
        description: Whether to enable notifications when new activity matches this
          subscription
        name: notify
        in: query
      tags:
      - Community
      summary: Follow
      operationId: Community/Follow
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.follow'><button class='pure-material-button-contained'>Try it</button></a>

        Follow a community, dedicated and simple endpoint to easily follow a community without subscription management
                on client side.
  "/lumsites/v1/content/{id}/follow":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Subscription"
      parameters:
      - required: true
        type: string
        description: The ID of the Content.
        name: id
        in: path
      - type: boolean
        description: Whether to enable notifications when new activity matches this
          subscription
        name: notify
        in: query
      tags:
      - Content
      summary: Follow
      operationId: Content/Follow
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.follow'><button class='pure-material-button-contained'>Try it</button></a>

        Follow a Content, dedicated and simple endpoint to easily follow a Content without subscription management
                on client side.
  "/lumsites/v1/user/{id}/follow":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Subscription"
      parameters:
      - required: true
        type: string
        description: The ID of the user.
        name: id
        in: path
      tags:
      - User
      summary: Follow
      operationId: User/Follow
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.follow'><button class='pure-material-button-contained'>Try it</button></a>

        Follow a user.
  "/lumsites/v1/social/subscription/follower/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SubscriptionUsersListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Social Subscription
      summary: Follower/List
      operationId: Social Subscription/Follower/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.socialsubscription.follower.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List all users that current user is followed by.
  "/lumsites/v1/social/subscription/following/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SubscriptionUsersListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Social Subscription
      summary: Following/List
      operationId: Social Subscription/Following/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.socialsubscription.following.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List all users that current user is following.
  "/lumsites/v1/media/fsitems/delete":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ErrorsResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/FileSystemItemsDeleteRequest"
        name: body
        in: body
      tags:
      - Media
      summary: Fsitems/Delete
      operationId: Media/Fsitems/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.fsitems.delete'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Delete one or more filesystem item(s).

                Args:
                    request (FileSystemItemsDeleteRequest): The request.

                Returns;
                    ErrorsResponse: The list of encountered errors.
  "/lumsites/v1/media/fsitems/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FileSystemItemsListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/FileSystemItemsListRequest"
        name: body
        in: body
      tags:
      - Media
      summary: Fsitems/List
      operationId: Media/Fsitems/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.fsitems.list'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                List all file systems items matching the request.

                Args:
                    request (FileSystemItemsListRequest): The request.

                Returns:
                    FileSystemItemsListResponse: The response.
  "/lumsites/v1/user/organizationchart/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/OrganizationChartResponse"
      parameters:
      - type: string
        description: The email of the user to get the organization for.
        name: email
        in: query
      - required: true
        type: string
        description: The ID of a users directory content.
        name: content
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - User Organizationchart
      summary: Get
      operationId: User Organizationchart/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.userorganizationchart.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get the organization chart of a user.
                It includes the manager, same level users and sub-level users of the user.
  "/lumsites/v1/communitytemplate/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityTemplate"
      parameters:
      - type: string
        description: The CommunityTemplate id.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Communitytemplate
      summary: Get
      operationId: Communitytemplate/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitytemplate.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a template by ID.
  "/lumsites/v1/metadata/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Metadata"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Metadata
      summary: Get
      operationId: Metadata/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.metadata.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a metadata.
  "/lumsites/v1/style/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Style"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Style
      summary: Get
      operationId: Style/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.style.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a style.
  "/lumsites/v1/widget/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Widget"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Widget
      summary: Get
      operationId: Widget/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widget.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a widget.
  "/lumsites/v1/comment/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Comment"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Comment
      summary: Get
      operationId: Comment/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a comment.
  "/lumsites/v1/notification/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/NotificationGroupResource"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: A code to describe the object.
        name: functionalInnerId
        in: query
      tags:
      - Notification
      summary: Get
      operationId: Notification/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a notification by ID.
  "/lumsites/v1/template/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Template"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Template
      summary: Get
      operationId: Template/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.template.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a template by ID.
  "/lumsites/v1/tutorial/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Tutorial"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Tutorial
      summary: Get
      operationId: Tutorial/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tutorial.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a tutorial by ID.
  "/lumsites/v1/community/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Community"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The short text used in the URL used to access the content.
        name: slug
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - enum:
        - PAGE_READ
        - PAGE_EDIT
        - PAGE_DELETE
        - NEWS_READ
        - NEWS_EDIT
        - NEWS_DELETE
        - PAGE_ARCHIVE
        - PAGE_PUBLISH
        - NEWS_PUBLISH
        - METADATA_EDIT
        - METADATA_DELETE
        - ROLE_READ
        - ROLE_EDIT
        - ROLE_DELETE
        - NEWS_LIST_READ
        - NEWS_LIST_EDIT
        - NEWS_LIST_DELETE
        - DIRECTORY_READ
        - DIRECTORY_EDIT
        - DIRECTORY_DELETE
        - MENU_READ
        - MENU_EDIT
        - MENU_DELETE
        - TEMPLATE_READ
        - TEMPLATE_EDIT
        - TEMPLATE_DELETE
        - INSTANCE_EDIT
        - INSTANCE_DELETE
        - FEED_EDIT
        - FEED_DELETE
        - MEDIA_EDIT
        - MEDIA_DELETE
        - USER_READ
        - USER_EDIT
        - USER_DELETE
        - RESELLER_READ
        - RESELLER_EDIT
        - POST_EDIT
        - GROUP_EDIT
        - DIRECTORY_ENTRY_FAVORITES_EDIT
        - NEWSLETTER_READ
        - NEWSLETTER_EDIT
        - NEWSLETTER_DELETE
        - CUSTOM_CONTENT_TYPE_EDIT
        - CUSTOM_CONTENT_TYPE_DELETE
        - CUSTOM_CONTENT_READ
        - CUSTOM_CONTENT_PUBLISH
        - CUSTOM_CONTENT_EDIT
        - CUSTOM_CONTENT_DELETE
        - CUSTOM_LIST_READ
        - CUSTOM_LIST_EDIT
        - CUSTOM_LIST_DELETE
        - CUSTOM_LIST_PUBLISH
        - COMMUNITY_READ
        - COMMUNITY_EDIT
        - COMMUNITY_DELETE
        - USER_DIRECTORY_READ
        - USER_DIRECTORY_EDIT
        - USER_DIRECTORY_DELETE
        - CUSTOM_READ
        - CUSTOM_EDIT
        - CUSTOM_DELETE
        - TUTORIAL_READ
        - TUTORIAL_EDIT
        - TUTORIAL_DELETE
        - POST_READ
        - POST_DELETE
        - CUSTOM_CONTENT_ARCHIVE
        - MENU_DROP
        - STYLE_READ
        - STYLE_EDIT
        - STYLE_DELETE
        - GLOBAL_WIDGET_EDIT
        - TARGET_EDIT
        - DIRECTORY_ENTRY_READ
        - DIRECTORY_ENTRY_EDIT
        - DIRECTORY_ENTRY_DELETE
        - COMMUNITY_PUBLISH
        - ANALYTICS_READ
        - GAMIFICATION_ADMIN
        - COMMUNITY_CREATE
        type: string
        description: The authorized action used to filter the list.  <br> If no action,
          user must be super or instance administrator.
        name: action
        in: query
      - type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - type: string
        description: The slug of content's customer (only user not log in)
        name: customerSlug
        in: query
      - type: string
        description: The host of the customer when slug cannot be computed (only user
          not log in)
        name: customerHost
        in: query
      - type: string
        description: The slug of content's instance (only use if no instance is provided)
        name: instanceSlug
        in: query
      tags:
      - Community
      summary: Get
      operationId: Community/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a community.
  "/lumsites/v1/feed/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Feed"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Feed
      summary: Get
      operationId: Feed/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.get'><button class='pure-material-button-contained'>Try it</button></a>

        Retrieve a feed from its ID
  "/lumsites/v1/community/post/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Get
      operationId: Community Post/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a post by ID.
  "/lumsites/v1/role/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Role"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Role
      summary: Get
      operationId: Role/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.role.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a role.
  "/lumsites/v1/document/get":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Media"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentActionRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Get
      operationId: Document/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.get'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Return one document available to the user.
  "/lumsites/v1/community/request/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityRequest"
      parameters:
      - required: true
        type: string
        description: The ID of the community
        name: communityId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Community Request
      summary: Get
      operationId: Community Request/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communityrequest.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a community access request.
  "/lumsites/v1/favorite/{uid}":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Favorite"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: path
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Favorite
      summary: Get
      operationId: Favorite/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.favorite.get'><button class='pure-material-button-contained'>Try it</button></a>

        Return the requested favorite.
  "/lumsites/v1/widget/video/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/WidgetVideoGetResponse"
      parameters:
      - description: The content containing the widget
        format: int64
        required: true
        in: query
        type: string
        name: contentId
      - required: true
        type: string
        description: The id of the widget
        name: widgetId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Widget Video
      summary: Get
      operationId: Widget Video/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widgetvideo.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get information about a video widget
  "/lumsites/v1/user/directory/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/User"
      parameters:
      - type: string
        name: uid
        in: query
      - type: string
        description: The email address of the user.
        name: email
        in: query
      - type: string
        name: contentId
        in: query
      tags:
      - User Directory
      summary: Get
      operationId: User Directory/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.userdirectory.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a user by email.
  "/lumsites/v1/customcontenttype/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomContentType"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Customcontenttype
      summary: Get
      operationId: Customcontenttype/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a custom content type.
  "/lumsites/v1/content/interest/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Interest"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        name: fields
        in: query
      tags:
      - Content Interest
      summary: Get
      operationId: Content Interest/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentinterest.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve an interest from its ID.
  "/lumsites/v1/directory/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Directory"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory
      summary: Get
      operationId: Directory/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directory.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a directory.
  "/lumsites/v1/user/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/User"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The user's email
        name: email
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - User
      summary: Get
      operationId: User/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a user from its email.
  "/lumsites/v1/instance/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Instance"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The instance slug.
        name: slug
        in: query
      - type: string
        description: The customer host.
        name: customerHost
        in: query
      - type: string
        description: The customer slug.
        name: customerSlug
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Instance
      summary: Get
      operationId: Instance/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get an instance.
  "/lumsites/v1/directory/entry/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntry"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory Entry
      summary: Get
      operationId: Directory Entry/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a directory entry.
  "/lumsites/v1/media/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Media"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Media
      summary: Get
      operationId: Media/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.get'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Get a media.
  "/lumsites/v1/customer/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Customer"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The unique identifier.
        name: id
        in: query
      - type: string
        description: The unique identifier.
        name: customerSlug
        in: query
      - type: string
        description: The unique identifier.
        name: customerHost
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Customer
      summary: Get
      operationId: Customer/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a customer.
  "/lumsites/v1/tag/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Tag"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Tag
      summary: Get
      operationId: Tag/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tag.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a tag.
  "/lumsites/v1/newsletter/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Newsletter"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Newsletter
      summary: Get
      operationId: Newsletter/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.newsletter.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a newsletter by ID.
  "/lumsites/v1/calendar/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CalendarGetResponse"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Calendar
      summary: Get
      operationId: Calendar/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.calendar.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a calendar.
  "/lumsites/v1/content/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The short text used in the URL used to access the content.
        name: slug
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - enum:
        - PAGE_READ
        - PAGE_EDIT
        - PAGE_DELETE
        - NEWS_READ
        - NEWS_EDIT
        - NEWS_DELETE
        - PAGE_ARCHIVE
        - PAGE_PUBLISH
        - NEWS_PUBLISH
        - METADATA_EDIT
        - METADATA_DELETE
        - ROLE_READ
        - ROLE_EDIT
        - ROLE_DELETE
        - NEWS_LIST_READ
        - NEWS_LIST_EDIT
        - NEWS_LIST_DELETE
        - DIRECTORY_READ
        - DIRECTORY_EDIT
        - DIRECTORY_DELETE
        - MENU_READ
        - MENU_EDIT
        - MENU_DELETE
        - TEMPLATE_READ
        - TEMPLATE_EDIT
        - TEMPLATE_DELETE
        - INSTANCE_EDIT
        - INSTANCE_DELETE
        - FEED_EDIT
        - FEED_DELETE
        - MEDIA_EDIT
        - MEDIA_DELETE
        - USER_READ
        - USER_EDIT
        - USER_DELETE
        - RESELLER_READ
        - RESELLER_EDIT
        - POST_EDIT
        - GROUP_EDIT
        - DIRECTORY_ENTRY_FAVORITES_EDIT
        - NEWSLETTER_READ
        - NEWSLETTER_EDIT
        - NEWSLETTER_DELETE
        - CUSTOM_CONTENT_TYPE_EDIT
        - CUSTOM_CONTENT_TYPE_DELETE
        - CUSTOM_CONTENT_READ
        - CUSTOM_CONTENT_PUBLISH
        - CUSTOM_CONTENT_EDIT
        - CUSTOM_CONTENT_DELETE
        - CUSTOM_LIST_READ
        - CUSTOM_LIST_EDIT
        - CUSTOM_LIST_DELETE
        - CUSTOM_LIST_PUBLISH
        - COMMUNITY_READ
        - COMMUNITY_EDIT
        - COMMUNITY_DELETE
        - USER_DIRECTORY_READ
        - USER_DIRECTORY_EDIT
        - USER_DIRECTORY_DELETE
        - CUSTOM_READ
        - CUSTOM_EDIT
        - CUSTOM_DELETE
        - TUTORIAL_READ
        - TUTORIAL_EDIT
        - TUTORIAL_DELETE
        - POST_READ
        - POST_DELETE
        - CUSTOM_CONTENT_ARCHIVE
        - MENU_DROP
        - STYLE_READ
        - STYLE_EDIT
        - STYLE_DELETE
        - GLOBAL_WIDGET_EDIT
        - TARGET_EDIT
        - DIRECTORY_ENTRY_READ
        - DIRECTORY_ENTRY_EDIT
        - DIRECTORY_ENTRY_DELETE
        - COMMUNITY_PUBLISH
        - ANALYTICS_READ
        - GAMIFICATION_ADMIN
        - COMMUNITY_CREATE
        type: string
        description: The authorized action used to filter the list.  <br> If no action,
          user must be super or instance administrator.
        name: action
        in: query
      - type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - type: string
        description: The slug of content's customer (only user not log in)
        name: customerSlug
        in: query
      - type: string
        description: The host of the customer when slug cannot be computed (only user
          not log in)
        name: customerHost
        in: query
      - type: string
        description: The slug of content's instance (only use if no instance is provided)
        name: instanceSlug
        in: query
      tags:
      - Content
      summary: Get
      operationId: Content/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a content.
  "/lumsites/v1/content/revision/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ContentRevision"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - description: The version of the content.
        format: int32
        required: true
        in: query
        type: integer
        name: version
      tags:
      - Content Revision
      summary: Get
      operationId: Content Revision/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentrevision.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a specific revision of a content.
  "/lumsites/v1/social/subscription/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Subscription"
      parameters:
      - type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: Content user wants to follow
        name: followingUserKey
        in: query
      - type: string
        description: User profile that user wants to follow
        name: followingContentKey
        in: query
      - type: string
        description: The ID of the instance.
        name: instanceKey
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Social Subscription
      summary: Get
      operationId: Social Subscription/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.socialsubscription.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve a subscription from its ID.
  "/lumsites/v1/communitysettings/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunitySettings"
      parameters:
      - required: true
        type: string
        description: The ID of the customer.
        name: customerId
        in: query
      - type: string
        description: The ID of the instance.
        name: instanceId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Communitysettings
      summary: Get
      operationId: Communitysettings/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitysettings.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a community settings from a customer and an instance if defined
  "/lumsites/v1/groups/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/GetResponse"
      parameters:
      - required: true
        type: string
        description: The group identifier (email or ID for example).
        name: groupIdentifier
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Groups
      summary: Get
      operationId: Groups/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.groups.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get an external API group
  "/lumsites/v1/style/get_by_instance":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/StyleByInstanceResponse"
      parameters:
      - required: true
        type: string
        description: The ID of the instance.
        name: instanceId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Style
      summary: Get_By_Instance
      operationId: Style/Get_By_Instance
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.style.get_by_instance'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a style.
  "/lumsites/v1/document/getMulti":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DocumentList"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentGetMultiRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Getmulti
      operationId: Document/Getmulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.getmulti'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Return a list of documents available to the user.
  "/lumsites/v1/customcontenttype/getMulti":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomContentTypeListResponse"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The custom content type uids.
        in: query
        type: array
        name: uids
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Customcontenttype
      summary: Getmulti
      operationId: Customcontenttype/Getmulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.getmulti'><button class='pure-material-button-contained'>Try it</button></a>

        Get a custom content type.
  "/lumsites/v1/feed/getMulti":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FeedCollection"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKeyList"
        name: body
        in: body
      tags:
      - Feed
      summary: Getmulti
      operationId: Feed/Getmulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.getmulti'><button class='pure-material-button-contained'>Try it</button></a>

        List feeds by their IDs.
  "/lumsites/v1/document/getPermissions":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DocumentUserPermissionResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentActionRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Getpermissions
      operationId: Document/Getpermissions
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.getpermissions'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Return a list of permissions available to the user.
  "/lumsites/v1/user/getToken":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/TokenResponse"
      parameters:
      - type: string
        description: The ID of the customer.
        name: customerId
        in: query
      - required: true
        type: string
        description: The email to generate a token for.
        name: email
        in: query
      tags:
      - User
      summary: Gettoken
      operationId: User/Gettoken
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.gettoken'><button class='pure-material-button-contained'>Try it</button></a>

        Get a token for a user.
  "/lumsites/v1/drive/getToken":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/TokenResponse"
      parameters: []
      tags:
      - Drive
      summary: Gettoken
      operationId: Drive/Gettoken
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.drive.gettoken'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a token to call the Google Drive API.
  "/lumsites/v1/classroom/grade/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/GradeListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int64
        default: 30
        in: query
        type: string
        name: maxResults
      - type: string
        description: Identifier of the course.
        name: courseId
        in: query
      - type: string
        description: Identifier for the course work this corresponds to.
        name: courseWorkId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Classroom
      summary: Grade/List
      operationId: Classroom/Grade/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.classroom.grade.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Lists grades of the first course.
  "/lumsites/v1/customer/identityprovider/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The identity provider uuid.
        name: uuid
        in: query
      - type: string
        description: The customer owning the target identity provider.
        name: customerId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Customer
      summary: Identityprovider/Delete
      operationId: Customer/Identityprovider/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.identityprovider.delete'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Delete an identity provider.
  "/lumsites/v1/customer/identityprovider/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomerIdentityProvider"
      parameters:
      - required: true
        type: string
        description: The identity provider uuid.
        name: uuid
        in: query
      - type: string
        description: The customer owning the target identity provider.
        name: customerId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Customer
      summary: Identityprovider/Get
      operationId: Customer/Identityprovider/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.identityprovider.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get an identity provider from its uuid.
  "/lumsites/v1/customer/identityprovider/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomerIDPListResponse"
      parameters:
      - type: string
        description: The customer for which to list the identity providers.
        name: customerId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Customer
      summary: Identityprovider/List
      operationId: Customer/Identityprovider/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.identityprovider.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List the customer's identity providers.
  "/lumsites/v1/customer/identityprovider/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomerIdentityProvider"
      parameters:
      - schema:
          "$ref": "#/definitions/CustomerIdentityProvider"
        name: body
        in: body
      tags:
      - Customer
      summary: Identityprovider/Save
      operationId: Customer/Identityprovider/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.identityprovider.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Save an identity provider.
  "/lumsites/v1/customer/identityprovider/save/order":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/CustomerIDPSaveOrderRequest"
        name: body
        in: body
      tags:
      - Customer
      summary: Identityprovider/Save/Order
      operationId: Customer/Identityprovider/Save/Order
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.identityprovider.save.order'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Save identity providers order.
  "/lumsites/v1/analytics/get_indicators":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/GenericAnalyticsResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/AnalyticsRequest"
        name: body
        in: body
      tags:
      - Analytics
      summary: Indicators
      operationId: Analytics/Indicators
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analytics.indicators'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve the requested production adoption analytic indicators.
  "/lumsites/v1/analyticsv2/get_indicators_instance":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/GenericAnalyticsResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/AnalyticsInstanceRequest"
        name: body
        in: body
      tags:
      - Analyticsv2
      summary: Instance/Indicators
      operationId: Analyticsv2/Instance/Indicators
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analyticsv2.instance.indicators'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve the requested production adoption analytic indicators.
  "/lumsites/v1/mlearning/language/detect":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/LanguageDetectionResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/LanguageDetectionRequest"
        name: body
        in: body
      tags:
      - Mlearning
      summary: Language/Detect
      operationId: Mlearning/Language/Detect
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.mlearning.language.detect'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
  "/lumsites/v1/community/post/like":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Community Post
      summary: Like
      operationId: Community Post/Like
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.like'><button class='pure-material-button-contained'>Try it</button></a>

        Like a post.
  "/lumsites/v1/content/like":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Content
      summary: Like
      operationId: Content/Like
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.like'><button class='pure-material-button-contained'>Try it</button></a>

        Like a content.
  "/lumsites/v1/comment/like":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Comment"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Comment
      summary: Like
      operationId: Comment/Like
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.like'><button class='pure-material-button-contained'>Try it</button></a>

        Like a comment
  "/lumsites/v1/customer/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomerListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CustomerListRequest"
        name: body
        in: body
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Customer
      summary: List
      operationId: Customer/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of customers.
  "/lumsites/v1/template/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/TemplateListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - required: true
        type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The type of the templates to search.
        name: contentType
        in: query
      - type: string
        description: The content type of the templates to search.
        name: customContentType
        in: query
      - default: true
        type: boolean
        description: Whether to display inherited templates.
        name: herited
        in: query
      - type: boolean
        description: Whether to search templates only visible on sub-instances.
        name: visibleInheritedOnly
        in: query
      - type: string
        description: 'The properties of the template. (Format: JSON object)'
        name: properties
        in: query
      - type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Template
      summary: List
      operationId: Template/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.template.list'><button class='pure-material-button-contained'>Try it</button></a>

        List templates.
  "/lumsites/v1/communitytemplate/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityTemplateListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - required: true
        type: string
        description: The ID of the instance.
        name: instanceId
        in: query
      - type: string
        description: The query to search in the name of the templates.
        name: query
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Communitytemplate
      summary: List
      operationId: Communitytemplate/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitytemplate.list'><button class='pure-material-button-contained'>Try it</button></a>

        List templates.
  "/lumsites/v1/calendar/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CalendarListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - type: string
        description: Query to search calendars that starts with this name
        name: query
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 200)'
        format: int32
        default: 200
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Calendar
      summary: List
      operationId: Calendar/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.calendar.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List Google Calendar calendars.
  "/lumsites/v1/media/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/MediaListResponse"
      parameters:
      - type: string
        description: The ID of the customer.
        name: customer
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The ID of the instance.
        in: query
        type: array
        name: instance
      - type: string
        description: The query used to filter the result.
        name: query
        in: query
      - type: string
        description: The name of the media used to filter the list.
        name: name
        in: query
      - type: string
        description: The file extension used to filter the list.
        name: ext
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of media types.
        in: query
        type: array
        name: type
      - collectionFormat: multi
        items:
          type: string
        description: The list of MIME types.
        in: query
        type: array
        name: mimeType
      - required: true
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of media IDs.
        in: query
        type: array
        name: ids
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The type of query.
        name: queryType
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of tags.
        in: query
        type: array
        name: tags
      - collectionFormat: multi
        items:
          type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        in: query
        type: array
        name: sortOrder
      - type: string
        description: The ID of the current instance.
        name: currentInstance
        in: query
      - type: boolean
        description: 'Whether the media is attached to a content. (Default: false)'
        name: attached
        in: query
      - type: string
        description: The ID of the content that contains the media.
        name: contentKey
        in: query
      - type: string
        description: The parent folder ID.
        name: parentFolder
        in: query
      - type: boolean
        description: Whether look in trash or not.
        name: trashed
        in: query
      - type: boolean
        description: Whether show fsitem recursively.
        name: recursive
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Media
      summary: List
      operationId: Media/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.list'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Get a list of media.
  "/lumsites/v1/content/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ContentListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/ContentListRequest"
        name: body
        in: body
      - type: string
        name: fields
        in: query
      tags:
      - Content
      summary: List
      operationId: Content/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of contents.
  "/lumsites/v1/user/directory/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/UserDirectoryListRequest"
        name: body
        in: body
      tags:
      - User Directory
      summary: List
      operationId: User Directory/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.userdirectory.list'><button class='pure-material-button-contained'>Try it</button></a>

        Search users using search index and Google directory.
  "/lumsites/v1/role/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/RoleListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The name of the role.
        name: name
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Role
      summary: List
      operationId: Role/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.role.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of roles.
  "/lumsites/v1/content/interest/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/InterestListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/InterestListRequest"
        name: body
        in: body
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        name: fields
        in: query
      tags:
      - Content Interest
      summary: List
      operationId: Content Interest/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentinterest.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve a list of interests.
  "/lumsites/v1/widget/files/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DocumentListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/WidgetFilesListRequest"
        name: body
        in: body
      tags:
      - Widget Files
      summary: List
      operationId: Widget Files/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widgetfiles.list'><button class='pure-material-button-contained'>Try it</button></a>

        List files from a widget.
  "/lumsites/v1/user/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserListResponse"
      parameters:
      - type: string
        description: The query used to filter the result.
        name: query
        in: query
      - enum:
        - PAGE_READ
        - PAGE_EDIT
        - PAGE_DELETE
        - NEWS_READ
        - NEWS_EDIT
        - NEWS_DELETE
        - PAGE_ARCHIVE
        - PAGE_PUBLISH
        - NEWS_PUBLISH
        - METADATA_EDIT
        - METADATA_DELETE
        - ROLE_READ
        - ROLE_EDIT
        - ROLE_DELETE
        - NEWS_LIST_READ
        - NEWS_LIST_EDIT
        - NEWS_LIST_DELETE
        - DIRECTORY_READ
        - DIRECTORY_EDIT
        - DIRECTORY_DELETE
        - MENU_READ
        - MENU_EDIT
        - MENU_DELETE
        - TEMPLATE_READ
        - TEMPLATE_EDIT
        - TEMPLATE_DELETE
        - INSTANCE_EDIT
        - INSTANCE_DELETE
        - FEED_EDIT
        - FEED_DELETE
        - MEDIA_EDIT
        - MEDIA_DELETE
        - USER_READ
        - USER_EDIT
        - USER_DELETE
        - RESELLER_READ
        - RESELLER_EDIT
        - POST_EDIT
        - GROUP_EDIT
        - DIRECTORY_ENTRY_FAVORITES_EDIT
        - NEWSLETTER_READ
        - NEWSLETTER_EDIT
        - NEWSLETTER_DELETE
        - CUSTOM_CONTENT_TYPE_EDIT
        - CUSTOM_CONTENT_TYPE_DELETE
        - CUSTOM_CONTENT_READ
        - CUSTOM_CONTENT_PUBLISH
        - CUSTOM_CONTENT_EDIT
        - CUSTOM_CONTENT_DELETE
        - CUSTOM_LIST_READ
        - CUSTOM_LIST_EDIT
        - CUSTOM_LIST_DELETE
        - CUSTOM_LIST_PUBLISH
        - COMMUNITY_READ
        - COMMUNITY_EDIT
        - COMMUNITY_DELETE
        - USER_DIRECTORY_READ
        - USER_DIRECTORY_EDIT
        - USER_DIRECTORY_DELETE
        - CUSTOM_READ
        - CUSTOM_EDIT
        - CUSTOM_DELETE
        - TUTORIAL_READ
        - TUTORIAL_EDIT
        - TUTORIAL_DELETE
        - POST_READ
        - POST_DELETE
        - CUSTOM_CONTENT_ARCHIVE
        - MENU_DROP
        - STYLE_READ
        - STYLE_EDIT
        - STYLE_DELETE
        - GLOBAL_WIDGET_EDIT
        - TARGET_EDIT
        - DIRECTORY_ENTRY_READ
        - DIRECTORY_ENTRY_EDIT
        - DIRECTORY_ENTRY_DELETE
        - COMMUNITY_PUBLISH
        - ANALYTICS_READ
        - GAMIFICATION_ADMIN
        - COMMUNITY_CREATE
        type: string
        description: "The authorized action used to filter the list.  <br> \n        If
          no action, user must be super or instance administrator."
        name: action
        in: query
      - type: string
        description: The email of the user.
        name: email
        in: query
      - type: string
        description: The first name of the user.
        name: firstName
        in: query
      - type: string
        description: The last name of the user.
        name: lastName
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The keys of feeds for which users have been subscribed.
        in: query
        type: array
        name: feeds
      - collectionFormat: multi
        items:
          type: string
        description: "The list of user account types used to filter the search result.
          \ <br> \n        Acceptable values are:  <br> \n         - \"EXTERNAL\":
          External account.  <br> \n         - \"GOOGLE\": Google account."
        in: query
        type: array
        name: types
      - type: boolean
        description: 'Whether hidden user should be displayed. (Default: false)'
        name: showHidden
        in: query
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      - in: query
        type: integer
        description: The number of days since the user is registered.
        name: registeredSince
        format: int32
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of user IDs.
        in: query
        type: array
        name: ids
      - type: string
        description: "The status of the user.  <br> \n    Acceptable values are:  <br>
          \n     - \"ENABLED\": The user account is still live. (default)  <br> \n
          \    - \"DISABLED\": The user account has been deactivated."
        name: status
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: "Fields on which to execute query to filter the results.  <br>
          \n        Acceptable values are:   <br> \n            - addresses  <br>
          \n            - organizations  <br> \n            - firstName  <br> \n            -
          registrationDate  <br> \n            - email  <br> \n            - primaryEmail
          \ <br> \n            - synchronized  <br> \n            - name  <br> \n
          \           - phones  <br> \n            - managers  <br> \n            -
          relations  <br> \n            - profilePicture  <br> \n            - customer
          \ <br> \n            - status  <br> \n            - profileId  <br> \n            -
          emails  <br> \n            - creationTime  <br> \n            - customProfile
          \ <br> \n            - lastName  <br> \n            - organizationsDepartments
          \ <br> \n            - isHidden  <br> \n            - organizationsLocations
          \ <br> \n            - thumbnail  <br> \n            - thumbnailPhotoUrl
          \ <br> \n            - organizationsTitles  <br> \n            - isAdmin
          \ <br> \n            - sortName  <br> \n            - accountType  <br>
          \n            - key  <br> \n            - partialSearch  <br> \n            -
          id  <br> \n            - organizationsNames  <br> \n            - aliases"
        in: query
        type: array
        name: queryFields
      - type: string
        description: The entity key on which users have reacted.
        name: reactedEntityKey
        in: query
      - type: string
        description: The entity kind on which users have reacted.
        name: reactedEntityKind
        in: query
      - type: string
        description: The language of the query.
        name: lang
        in: query
      - type: string
        description: The ID of the current instance.
        name: currentInstance
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - User
      summary: List
      operationId: User/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of users.
  "/lumsites/v1/directory/entry/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntryListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/DirectoryEntryListRequest"
        name: body
        in: body
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory Entry
      summary: List
      operationId: Directory Entry/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of directory entries.
  "/lumsites/v1/analyticsv2/filter/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FiltersSaveRequest"
      parameters: []
      tags:
      - Analyticsv2 Filter
      summary: List
      operationId: Analyticsv2 Filter/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analyticsv2filter.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get the list of filters for the customer.
  "/lumsites/v1/community/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CommunityListRequest"
        name: body
        in: body
      - type: string
        name: fields
        in: query
      tags:
      - Community
      summary: List
      operationId: Community/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.list'><button class='pure-material-button-contained'>Try it</button></a>

        List communities.
  "/lumsites/v1/feed/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FeedListResponse"
      parameters:
      - type: string
        description: The type of the feeds to list.
        name: type
        in: query
      - type: string
        description: The query used to filter the result.
        name: query
        in: query
      - default: true
        type: boolean
        description: Whether to list feeds from a parent instance.
        name: herited
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: boolean
        description: Whether to list feeds synchronized with Google Group.
        name: hasGroup
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: Restrict results within a list of Feed ID.
        in: query
        type: array
        name: restrictToFeeds
      - collectionFormat: multi
        items:
          type: string
        description: A list of Feed ID to exclude from results.
        in: query
        type: array
        name: exceptFeeds
      - in: query
        type: integer
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        name: maxResults
        format: int32
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Feed
      summary: List
      operationId: Feed/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.list'><button class='pure-material-button-contained'>Try it</button></a>

        List feeds.
  "/lumsites/v1/style/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/StyleListResponse"
      parameters:
      - type: string
        description: |-
          The ID of the instance.
                    <br> If not set, retrieve only customer's style objects.
        name: instance
        in: query
      - type: string
        description: The type of styles to retrieve.
        name: type
        in: query
      - type: boolean
        description: Indicates if you want to load styles matching instance and those
          that don't have any instance.
        name: getAll
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int64
        default: 30
        in: query
        type: string
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Style
      summary: List
      operationId: Style/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.style.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get a list of styles.
  "/lumsites/v1/metadata/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/MetadataListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The name of the metadata.
        name: name
        in: query
      - type: boolean
        description: 'Whether the metadata parent is empty. (Default: false)'
        name: emptyParent
        in: query
      - type: string
        description: The parent of the metadata.
        name: parent
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The ID of the family.
        name: familyId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Metadata
      summary: List
      operationId: Metadata/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.metadata.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of metadata.
  "/lumsites/v1/community/request/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityRequestListResponse"
      parameters:
      - required: true
        type: string
        description: The ID of the community
        name: communityId
        in: query
      - default: pending
        type: string
        description: The status of the request
        name: requestStatus
        in: query
      - type: string
        description: The ID of the user.
        name: userId
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Community Request
      summary: List
      operationId: Community Request/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communityrequest.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                List community access requests.
  "/lumsites/v1/customcontenttype/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomContentTypeListResponse"
      parameters:
      - type: string
        description: The pattern used to filter the list by name.
        name: name
        in: query
      - required: true
        type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: boolean
        description: Whether the response should include the sibling instances CCTs.
        name: includeInstanceSiblings
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      tags:
      - Customcontenttype
      summary: List
      operationId: Customcontenttype/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of custom content types.
  "/lumsites/v1/content/revision/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ContentRevisionListResponse"
      parameters:
      - required: true
        type: string
        description: The ID of the content.
        name: contentId
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Content Revision
      summary: List
      operationId: Content Revision/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentrevision.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of content versions.
  "/lumsites/v1/tag/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/TagListResponse"
      parameters:
      - required: true
        type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The ID of the customer.
        name: cursor
        in: query
      - required: true
        type: string
        description: 'The kind of tag.  <br>          Acceptable values are:  <br>           -
          "media": A media tag.  <br>           - "community": A community tag.'
        name: kind
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - collectionFormat: multi
        items:
          type: string
        description: The optional list of tag IDs to filter on.
        in: query
        type: array
        name: ids
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Tag
      summary: List
      operationId: Tag/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tag.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of tags.
  "/lumsites/v1/community/post/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/PostListResponse"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The ID of the content(s) containing the community(ies).
        in: query
        type: array
        name: contentId
      - type: string
        description: The ID of the customer.
        name: customerId
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The ID of the instance.
        in: query
        type: array
        name: instanceId
      - type: string
        description: Event start before
        name: eventStartBefore
        in: query
      - type: string
        description: Event start after
        name: eventStartAfter
        in: query
      - type: string
        description: Event end after
        name: eventEndAfter
        in: query
      - type: string
        description: Event end before
        name: eventEndBefore
        in: query
      - required: true
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: A list of tags to filter posts.
        in: query
        type: array
        name: tags
      - collectionFormat: multi
        items:
          type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        in: query
        type: array
        name: sortOrder
      - type: boolean
        description: List only posts for community current user is following.
        name: followingOnly
        in: query
      - type: boolean
        description: Whether to filter by pinned posts or not.
        name: isPinned
        in: query
      - type: string
        description: The query used to filter the result.
        name: query
        in: query
      - type: string
        description: The ID of the author.
        name: author
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The post types to filter.
        in: query
        type: array
        name: postType
      - collectionFormat: multi
        items:
          type: string
        description: The post custom status to filter.
        in: query
        type: array
        name: postStatus
      - in: query
        type: integer
        description: The post minimum score to filter.
        name: minScore
        format: int32
      - in: query
        type: integer
        description: The post maximum score to filter.
        name: maxScore
        format: int32
      - type: boolean
        description: Whether to include posts marked as duplicated?. This attribute
          is deprecated, and its value will be ignored.
        name: isMerged
        in: query
      - type: boolean
        description: Whether to include posts marked as duplicated but not yet approved?
          This attribute is deprecated, and its value will be ignored.
        name: isMergePending
        in: query
      - type: string
        description: The post report status
        name: reportStatus
        in: query
      - type: boolean
        description: Whether to include posts having relevant comment?
        name: hasRelevant
        in: query
      - type: boolean
        description: Whether to filter by open posts or closed posts.
        name: isOpen
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of posts IDs.
        in: query
        type: array
        name: ids
      - type: boolean
        description: Get only communities where user is administrator
        name: isCommunityAdmin
        in: query
      - type: string
        description: The ID of the current instance.
        name: currentInstance
        in: query
      - type: boolean
        description: Get only posts with or without attachments
        name: hasAttachments
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: List
      operationId: Community Post/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.list'><button class='pure-material-button-contained'>Try it</button></a>

        List posts.
  "/lumsites/v1/directory/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
        default: LIVE
        enum:
        - DRAFT
        - REFUSED
        - TO_VALIDATE
        - LIVE
        - ARCHIVE
        - DELETED
        - PENDING
        in: query
        type: string
        name: status
      - required: true
        type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The type of directory used to filter the list.
        name: type
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Directory
      summary: List
      operationId: Directory/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directory.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of directory.
  "/lumsites/v1/notification/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/NotificationListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/NotificationListRequest"
        name: body
        in: body
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Notification
      summary: List
      operationId: Notification/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.list'><button class='pure-material-button-contained'>Try it</button></a>

        List notifications of the user.
  "/lumsites/v1/tutorial/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/TutorialListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The query to search in the name of the tutorials.
        name: name
        in: query
      - required: true
        type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Tutorial
      summary: List
      operationId: Tutorial/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tutorial.list'><button class='pure-material-button-contained'>Try it</button></a>

        List tutorials.
  "/lumsites/v1/newsletter/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/NewsletterListResponse"
      parameters:
      - type: string
        description: The ID of the customer.
        name: customer
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The query to search in the name of the newsletters.
        name: name
        in: query
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Newsletter
      summary: List
      operationId: Newsletter/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.newsletter.list'><button class='pure-material-button-contained'>Try it</button></a>

        List newsletters.
  "/lumsites/v1/widget/image_gallery/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DocumentListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/WidgetFilesListRequest"
        name: body
        in: body
      tags:
      - Widget Image_Gallery
      summary: List
      operationId: Widget Image_Gallery/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widgetimage_gallery.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get images from image gallery widget
  "/lumsites/v1/document/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DocumentListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentListRequest"
        name: body
        in: body
      tags:
      - Document
      summary: List
      operationId: Document/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.list'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Return a list of documents available to the user.
  "/lumsites/v1/widget/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/WidgetListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The pattern used to filter widgets by title.
        name: title
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - required: true
        type: string
        description: The ID of the instance.
        name: instance
        in: query
      tags:
      - Widget
      summary: List
      operationId: Widget/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widget.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of widgets.
  "/lumsites/v1/instance/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/InstanceListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - enum:
        - DRAFT
        - REFUSED
        - TO_VALIDATE
        - LIVE
        - ARCHIVE
        - DELETED
        - PENDING
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
        name: status
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of instance IDs.
        in: query
        type: array
        name: ids
      - type: string
        description: The name of the instance.
        name: name
        in: query
      - type: string
        description: The parent of the instance.
        name: parent
        in: query
      - type: boolean
        description: 'Whether the instance has no parent. (Default: false)'
        name: emptyParent
        in: query
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: boolean
        description: Limit the response to the instances that the user has marked
          as favorite.
        name: userFavoritesOnly
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - default: true
        type: boolean
        description: 'Whether we should take into account the user identity to compute
          instance fields (like deletableFromFavorites). (Default: true)'
        name: considerUserIdentity
        in: query
      tags:
      - Instance
      summary: List
      operationId: Instance/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of instances.
  "/lumsites/v1/comment/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommentListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - required: true
        type: string
        description: The ID of the content to list the comments from.
        name: content
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of a comment to list the children from.
        name: parent
        in: query
      - type: string
        description: "The order to list the comments with.  <br> \n                                                  Acceptable
          values are:  <br> \n                                                   -
          \"asc\": Older comments first. (default)  <br> \n                                                   -
          \"desc\": Newer comments first."
        name: sortOrder
        in: query
      - type: boolean
        description: Whether to return the comments with their answers.
        name: withAnswers
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Comment
      summary: List
      operationId: Comment/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.list'><button class='pure-material-button-contained'>Try it</button></a>

        List comments.
  "/lumsites/v1/social/subscription/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SubscriptionListResponse"
      parameters:
      - type: string
        description: User who subscribe to a content
        name: followerUserKey
        in: query
      - type: string
        description: User profile that user wants to follow
        name: followingUserKey
        in: query
      - type: string
        description: Content user wants to follow
        name: followingContentKey
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: Type of content associated to subscription
        in: query
        type: array
        name: followingContentType
      - type: string
        description: The ID of the instance.
        name: instanceKey
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Social Subscription
      summary: List
      operationId: Social Subscription/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.socialsubscription.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve a list of subscriptions.
  "/lumsites/v1/favorite/targets":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/RehydratedFavoriteListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/FavoriteListRequest"
        name: body
        in: body
      tags:
      - Favorite
      summary: List_Targets
      operationId: Favorite/List_Targets
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.favorite.list_targets'><button class='pure-material-button-contained'>Try it</button></a>

        List the entities which have been marked as favorite.
  "/lumsites/v1/directory/entry/listByExternalKey":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntryListResponse"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - required: true
        type: string
        description: The kind of entry.
        name: kind
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      tags:
      - Directory Entry
      summary: Listbyexternalkey
      operationId: Directory Entry/Listbyexternalkey
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.listbyexternalkey'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of directory entries linked to a specific external object.
  "/lumsites/v1/comment/listCommentsAndFirstChild":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommentAndChildListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - required: true
        type: string
        description: The ID of the content to list the comments from.
        name: content
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of a comment to list the children from.
        name: parent
        in: query
      - type: string
        description: "The order to list the comments with.  <br> \n                                                  Acceptable
          values are:  <br> \n                                                   -
          \"asc\": Older comments first. (default)  <br> \n                                                   -
          \"desc\": Newer comments first."
        name: sortOrder
        in: query
      - type: boolean
        description: Whether to return the comments with their answers.
        name: withAnswers
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Comment
      summary: Listcommentsandfirstchild
      operationId: Comment/Listcommentsandfirstchild
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.listcommentsandfirstchild'><button class='pure-material-button-contained'>Try it</button></a>

        Lists the comments and the first child of each comment, relative to a content or a comment.
  "/lumsites/v1/role/listWithFeeds":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/RoleListWithFeedResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The name of the role.
        name: name
        in: query
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Role
      summary: Listwithfeeds
      operationId: Role/Listwithfeeds
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.role.listwithfeeds'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of roles and corresponding feeds.
  "/lumsites/v1/favorite/mark":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FavoriteListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/MarkAsFavoriteRequest"
        name: body
        in: body
      tags:
      - Favorite
      summary: Mark_As_Favorite
      operationId: Favorite/Mark_As_Favorite
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.favorite.mark_as_favorite'><button class='pure-material-button-contained'>Try it</button></a>

        Mark as favorite the given entity. Returns a favorite for each owner.
  "/lumsites/v1/comment/markRelevant":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Comment
      summary: Markrelevant
      operationId: Comment/Markrelevant
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.markrelevant'><button class='pure-material-button-contained'>Try it</button></a>

        Mark a comment as relevant
  "/lumsites/v1/search/media":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/MediaListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SearchMediaRequest"
        name: body
        in: body
      tags:
      - Search
      summary: Media
      operationId: Search/Media
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.search.media'><button class='pure-material-button-contained'>Try it</button></a>

        List media matching the search criteria.
  "/lumsites/v1/media/media/move":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Media"
      parameters:
      - schema:
          "$ref": "#/definitions/FileSystemItemMoveRequest"
        name: body
        in: body
      tags:
      - Media
      summary: Media/Move
      operationId: Media/Media/Move
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.media.move'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Move a media.
  "/lumsites/v1/content/menu/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ContentMenuList"
      parameters:
      - required: true
        type: string
        description: The ID of the customer.
        name: customer
        in: query
      - required: true
        type: string
        description: The ID of the instance.
        name: instance
        in: query
      - required: true
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
        name: lang
        in: query
      - type: string
        description: "The secondary language. (Format: xx)  <br> \n    Acceptable
          values are:  <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English
          \ <br> \n     - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     -
          \"it\": Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish
          \ <br> \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br>
          \n     - \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\":
          German  <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br>
          \n     - \"pt_br\": Brazilian Portuguese"
        name: alternativeLang
        in: query
      - enum:
        - PAGE_READ
        - PAGE_EDIT
        - PAGE_DELETE
        - NEWS_READ
        - NEWS_EDIT
        - NEWS_DELETE
        - PAGE_ARCHIVE
        - PAGE_PUBLISH
        - NEWS_PUBLISH
        - METADATA_EDIT
        - METADATA_DELETE
        - ROLE_READ
        - ROLE_EDIT
        - ROLE_DELETE
        - NEWS_LIST_READ
        - NEWS_LIST_EDIT
        - NEWS_LIST_DELETE
        - DIRECTORY_READ
        - DIRECTORY_EDIT
        - DIRECTORY_DELETE
        - MENU_READ
        - MENU_EDIT
        - MENU_DELETE
        - TEMPLATE_READ
        - TEMPLATE_EDIT
        - TEMPLATE_DELETE
        - INSTANCE_EDIT
        - INSTANCE_DELETE
        - FEED_EDIT
        - FEED_DELETE
        - MEDIA_EDIT
        - MEDIA_DELETE
        - USER_READ
        - USER_EDIT
        - USER_DELETE
        - RESELLER_READ
        - RESELLER_EDIT
        - POST_EDIT
        - GROUP_EDIT
        - DIRECTORY_ENTRY_FAVORITES_EDIT
        - NEWSLETTER_READ
        - NEWSLETTER_EDIT
        - NEWSLETTER_DELETE
        - CUSTOM_CONTENT_TYPE_EDIT
        - CUSTOM_CONTENT_TYPE_DELETE
        - CUSTOM_CONTENT_READ
        - CUSTOM_CONTENT_PUBLISH
        - CUSTOM_CONTENT_EDIT
        - CUSTOM_CONTENT_DELETE
        - CUSTOM_LIST_READ
        - CUSTOM_LIST_EDIT
        - CUSTOM_LIST_DELETE
        - CUSTOM_LIST_PUBLISH
        - COMMUNITY_READ
        - COMMUNITY_EDIT
        - COMMUNITY_DELETE
        - USER_DIRECTORY_READ
        - USER_DIRECTORY_EDIT
        - USER_DIRECTORY_DELETE
        - CUSTOM_READ
        - CUSTOM_EDIT
        - CUSTOM_DELETE
        - TUTORIAL_READ
        - TUTORIAL_EDIT
        - TUTORIAL_DELETE
        - POST_READ
        - POST_DELETE
        - CUSTOM_CONTENT_ARCHIVE
        - MENU_DROP
        - STYLE_READ
        - STYLE_EDIT
        - STYLE_DELETE
        - GLOBAL_WIDGET_EDIT
        - TARGET_EDIT
        - DIRECTORY_ENTRY_READ
        - DIRECTORY_ENTRY_EDIT
        - DIRECTORY_ENTRY_DELETE
        - COMMUNITY_PUBLISH
        - ANALYTICS_READ
        - GAMIFICATION_ADMIN
        - COMMUNITY_CREATE
        type: string
        description: The authorized action used to filter the list.  <br> If no action,
          user must be super or instance administrator.
        name: action
        in: query
      tags:
      - Content
      summary: Menu/Get
      operationId: Content/Menu/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.menu.get'><button class='pure-material-button-contained'>Try it</button></a>

        Retrieve menu items.
  "/lumsites/v1/content/menu/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SaveContentMenuRequest"
      parameters:
      - schema:
          "$ref": "#/definitions/SaveContentMenuRequest"
        name: body
        in: body
      tags:
      - Content
      summary: Menu/Save
      operationId: Content/Menu/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.menu.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a list of menu items.
                Only parent, hidden, hideChildren, isNavItem, menuTitle, and children attributes are saved.
                Other parameters are not saved, but they are returned in response.
  "/lumsites/v1/instance/metadata/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/InstanceListMetadataResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/InstanceListMetadataRequest"
        name: body
        in: body
      tags:
      - Instance
      summary: Metadata/List
      operationId: Instance/Metadata/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.metadata.list'><button class='pure-material-button-contained'>Try it</button></a>

        List the metadata for a given instance.
  "/lumsites/v1/misc/metric":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/MetricRequest"
        name: body
        in: body
      tags:
      - Misc
      summary: Metric
      operationId: Misc/Metric
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.misc.metric'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Log a metric in stackdriver
  "/lumsites/v1/document/move":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/EmptyResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentMoveRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Move
      operationId: Document/Move
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.move'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Move a document.
  "/lumsites/v1/community/post/{uid}/move/{communityId}":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: path
      - required: true
        type: string
        description: The ID of the target community
        name: communityId
        in: path
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Move
      operationId: Community Post/Move
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.move'><button class='pure-material-button-contained'>Try it</button></a>

        Move a post from a community to another
  "/lumsites/v1/community/post/{uid}/open":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: path
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Open
      operationId: Community Post/Open
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.open'><button class='pure-material-button-contained'>Try it</button></a>

        Reopen a post.
  "/lumsites/v1/community/post/pin":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - schema:
          "$ref": "#/definitions/PostPinRequest"
        name: body
        in: body
      tags:
      - Community Post
      summary: Pin
      operationId: Community Post/Pin
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.pin'><button class='pure-material-button-contained'>Try it</button></a>

        Mark a post as pinned in a community.
  "/lumsites/v1/analyticsv2/get_indicators_platform":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/GenericAnalyticsResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/AnalyticsPlatformRequest"
        name: body
        in: body
      tags:
      - Analyticsv2
      summary: Platform/Indicators
      operationId: Analyticsv2/Platform/Indicators
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analyticsv2.platform.indicators'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Retrieve the requested production adoption analytic indicators.
  "/lumsites/v1/search/post":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/PostListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SearchContentRequest"
        name: body
        in: body
      - type: string
        name: fields
        in: query
      tags:
      - Search
      summary: Post
      operationId: Search/Post
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.search.post'><button class='pure-material-button-contained'>Try it</button></a>

        List posts matching the search criteria.
  "/lumsites/v1/community/post/{uid}/status":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: path
      - type: string
        description: New status for the post (uuid)
        name: status
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Poststatus
      operationId: Community Post/Poststatus
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.poststatus'><button class='pure-material-button-contained'>Try it</button></a>

        Update custom status of a post.
  "/lumsites/v1/mlearning/prediction/tags":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/TagsPredictionResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/TagsPredictionRequest"
        name: body
        in: body
      - type: string
        name: contentType
        in: query
      tags:
      - Mlearning
      summary: Prediction/Tags
      operationId: Mlearning/Prediction/Tags
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.mlearning.prediction.tags'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
  "/lumsites/v1/document/preview":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DocumentPreviewResponse"
      parameters:
      - required: true
        type: string
        description: The docPath of the item. It can be a provider, a site, a drive,
          or a resource (file or folder)
        name: docPath
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Document
      summary: Preview
      operationId: Document/Preview
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.preview'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Return one document available to the user.
  "/lumsites/v1/customer/properties/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Customer"
      parameters:
      - schema:
          "$ref": "#/definitions/AdminPropertiesRequest"
        name: body
        in: body
      tags:
      - Customer
      summary: Properties/Save
      operationId: Customer/Properties/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.properties.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Create or update a customer.
  "/lumsites/v1/document/provider/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ProviderListResponse"
      parameters:
      - required: true
        type: string
        description: The id of the lumsite instance when the provider is 'local' (LumDrive)
        name: instanceId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Document
      summary: Provider/List
      operationId: Document/Provider/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.provider.list'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Get the providers for the user
  "/lumsites/v1/customer/registrationLink":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/RegistrationLinkResponse"
      parameters:
      - type: string
        description: The kind of registration.
        name: kind
        in: query
      tags:
      - Customer
      summary: Registrationlink
      operationId: Customer/Registrationlink
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.registrationlink'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Generate a customer registration link.
  "/lumsites/v1/community/request/reject":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/CommunityRequestStatusRequest"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Community Request
      summary: Reject
      operationId: Community Request/Reject
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communityrequest.reject'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Reject a community access request.
  "/lumsites/v1/document/restore":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/EmptyResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentActionRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Restore
      operationId: Document/Restore
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.restore'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Restore a trashed document.
  "/lumsites/v1/content/revision/restore":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - schema:
          "$ref": "#/definitions/ContentRevisionKeyMessage"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Content Revision
      summary: Restore
      operationId: Content Revision/Restore
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentrevision.restore'><button class='pure-material-button-contained'>Try it</button></a>

        Restore a revision of a content.
  "/lumsites/v1/user/role/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/RoleListResponse"
      parameters:
      - required: true
        type: string
        description: The instance id for which to get the roles.
        name: instanceId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - User
      summary: Role/List
      operationId: User/Role/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.role.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a user's roles.
  "/lumsites/v1/user/directory/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/User"
      parameters:
      - schema:
          "$ref": "#/definitions/UserProto_id_uid_url_profileId_loginId_email_firstName_lastName_lang_langs_properties_subscriptions_isSuperAdmin_apiProfile_customer_employeeId_synchronized_devices_changePasswordAtNextLogin_status_accountType_instancesSuperAdmin_identityProvider_directoryFavorites_hiddenDirectoryFavorites_createdAt_updatedAt_customProfile_emailNotifications_profilePicture_isHidden_alternateEmail_lastSynchronization_expirationDate_profileStatus_externalDirectoryUrl_settings_unreadNotificationCount_profilePictureUrl_tutorials_gamification_fullName_isGod_isDesigner_loginProvider_socialAdvocacyRoles_socialAdvocacyPermissions_socialNetworkAccesses_canAccessSA_password_contentId"
        name: body
        in: body
      tags:
      - User Directory
      summary: Save
      operationId: User Directory/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.userdirectory.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a user.
  "/lumsites/v1/community/request/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityRequest"
      parameters:
      - schema:
          "$ref": "#/definitions/CommunityRequest"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Community Request
      summary: Save
      operationId: Community Request/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communityrequest.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Save a community access request.
  "/lumsites/v1/content/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - schema:
          "$ref": "#/definitions/Content"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Content
      summary: Save
      operationId: Content/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a content.
  "/lumsites/v1/tag/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Tag"
      parameters:
      - schema:
          "$ref": "#/definitions/Tag"
        name: body
        in: body
      tags:
      - Tag
      summary: Save
      operationId: Tag/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tag.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a tag.
  "/lumsites/v1/metadata/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Metadata"
      parameters:
      - schema:
          "$ref": "#/definitions/Metadata"
        name: body
        in: body
      tags:
      - Metadata
      summary: Save
      operationId: Metadata/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.metadata.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a metadata.
  "/lumsites/v1/content/interest/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Interest"
      parameters:
      - schema:
          "$ref": "#/definitions/Interest"
        name: body
        in: body
      tags:
      - Content Interest
      summary: Save
      operationId: Content Interest/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.contentinterest.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Create or update a interest.
  "/lumsites/v1/widget/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Widget"
      parameters:
      - schema:
          "$ref": "#/definitions/Widget"
        name: body
        in: body
      tags:
      - Widget
      summary: Save
      operationId: Widget/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widget.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a widget.
  "/lumsites/v1/directory/entry/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntry"
      parameters:
      - schema:
          "$ref": "#/definitions/DirectoryEntry"
        name: body
        in: body
      tags:
      - Directory Entry
      summary: Save
      operationId: Directory Entry/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a directory entry.
  "/lumsites/v1/communitytemplate/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityTemplate"
      parameters:
      - schema:
          "$ref": "#/definitions/CommunityTemplate"
        name: body
        in: body
      tags:
      - Communitytemplate
      summary: Save
      operationId: Communitytemplate/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitytemplate.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a template.
  "/lumsites/v1/role/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Role"
      parameters:
      - schema:
          "$ref": "#/definitions/Role"
        name: body
        in: body
      tags:
      - Role
      summary: Save
      operationId: Role/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.role.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a role.
  "/lumsites/v1/style/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Style"
      parameters:
      - schema:
          "$ref": "#/definitions/Style"
        name: body
        in: body
      tags:
      - Style
      summary: Save
      operationId: Style/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.style.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Create or update a style.
  "/lumsites/v1/newsletter/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Newsletter"
      parameters:
      - schema:
          "$ref": "#/definitions/Newsletter"
        name: body
        in: body
      tags:
      - Newsletter
      summary: Save
      operationId: Newsletter/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.newsletter.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a newsletter.
  "/lumsites/v1/user/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/User"
      parameters:
      - schema:
          "$ref": "#/definitions/UserProto_id_uid_url_profileId_loginId_email_firstName_lastName_lang_langs_properties_subscriptions_isSuperAdmin_apiProfile_customer_employeeId_synchronized_devices_changePasswordAtNextLogin_status_accountType_instancesSuperAdmin_identityProvider_directoryFavorites_hiddenDirectoryFavorites_createdAt_updatedAt_customProfile_emailNotifications_profilePicture_isHidden_alternateEmail_lastSynchronization_expirationDate_profileStatus_externalDirectoryUrl_settings_unreadNotificationCount_profilePictureUrl_tutorials_gamification_fullName_isGod_isDesigner_loginProvider_socialAdvocacyRoles_socialAdvocacyPermissions_socialNetworkAccesses_canAccessSA_password_rePassword_identityProvider"
        name: body
        in: body
      tags:
      - User
      summary: Save
      operationId: User/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a user into the datastore.
  "/lumsites/v1/feed/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Feed"
      parameters:
      - schema:
          "$ref": "#/definitions/Feed"
        name: body
        in: body
      - type: boolean
        description: Whether this feed is created automatically by a lumapps service.
        name: selfProvisioned
        in: query
      tags:
      - Feed
      summary: Save
      operationId: Feed/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a feed.
  "/lumsites/v1/customer/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Customer"
      parameters:
      - schema:
          "$ref": "#/definitions/Customer"
        name: body
        in: body
      tags:
      - Customer
      summary: Save
      operationId: Customer/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.save'><button class='pure-material-button-contained'>Try it</button></a>

        Create or update a customer.
  "/lumsites/v1/customcontenttype/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomContentType"
      parameters:
      - schema:
          "$ref": "#/definitions/CustomContentType"
        name: body
        in: body
      tags:
      - Customcontenttype
      summary: Save
      operationId: Customcontenttype/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a custom content type.
  "/lumsites/v1/communitysettings/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunitySettings"
      parameters:
      - schema:
          "$ref": "#/definitions/CommunitySettings"
        name: body
        in: body
      tags:
      - Communitysettings
      summary: Save
      operationId: Communitysettings/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitysettings.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save community settings
  "/lumsites/v1/comment/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Comment"
      parameters:
      - schema:
          "$ref": "#/definitions/Comment"
        name: body
        in: body
      - type: string
        description: Fields to update.
        name: updateFields
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Comment
      summary: Save
      operationId: Comment/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a comment.
  "/lumsites/v1/media/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Media"
      parameters:
      - schema:
          "$ref": "#/definitions/Media"
        name: body
        in: body
      tags:
      - Media
      summary: Save
      operationId: Media/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.save'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Save a media.
  "/lumsites/v1/directory/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Directory"
      parameters:
      - schema:
          "$ref": "#/definitions/Directory"
        name: body
        in: body
      tags:
      - Directory
      summary: Save
      operationId: Directory/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directory.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a directory.
  "/lumsites/v1/instance/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Instance"
      parameters:
      - schema:
          "$ref": "#/definitions/Instance"
        name: body
        in: body
      tags:
      - Instance
      summary: Save
      operationId: Instance/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save an instance.
  "/lumsites/v1/community/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Community"
      parameters:
      - schema:
          "$ref": "#/definitions/Community"
        name: body
        in: body
      tags:
      - Community
      summary: Save
      operationId: Community/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a community.
  "/lumsites/v1/community/post/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - schema:
          "$ref": "#/definitions/Post"
        name: body
        in: body
      - type: string
        description: Fields to update.
        name: updateFields
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Community Post
      summary: Save
      operationId: Community Post/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a post.
  "/lumsites/v1/social/subscription/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Subscription"
      parameters:
      - schema:
          "$ref": "#/definitions/Subscription"
        name: body
        in: body
      tags:
      - Social Subscription
      summary: Save
      operationId: Social Subscription/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.socialsubscription.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Create or update a subscription.
  "/lumsites/v1/tutorial/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Tutorial"
      parameters:
      - schema:
          "$ref": "#/definitions/Tutorial"
        name: body
        in: body
      tags:
      - Tutorial
      summary: Save
      operationId: Tutorial/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.tutorial.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a tutorial.
  "/lumsites/v1/template/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Template"
      parameters:
      - schema:
          "$ref": "#/definitions/Template"
        name: body
        in: body
      tags:
      - Template
      summary: Save
      operationId: Template/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.template.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save a template.
  "/lumsites/v1/analyticsv2/filter/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FiltersSaveRequest"
      parameters:
      - schema:
          "$ref": "#/definitions/FiltersSaveRequest"
        name: body
        in: body
      tags:
      - Analyticsv2 Filter
      summary: Save
      operationId: Analyticsv2 Filter/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analyticsv2filter.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Create or update a list of filters.
  "/lumsites/v1/media/saveMulti":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/MediaListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SaveMediaMultiRequest"
        name: body
        in: body
      tags:
      - Media
      summary: Savemulti
      operationId: Media/Savemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.savemulti'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Save multiple media.
  "/lumsites/v1/metadata/saveMulti":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/MetadataListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SaveMetadataMultiRequest"
        name: body
        in: body
      tags:
      - Metadata
      summary: Savemulti
      operationId: Metadata/Savemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.metadata.savemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Save a list of metadata.
  "/lumsites/v1/template/saveMulti":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/TemplateListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SaveTemplateMultiRequest"
        name: body
        in: body
      tags:
      - Template
      summary: Savemulti
      operationId: Template/Savemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.template.savemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Save a list of templates.
  "/lumsites/v1/content/saveMulti":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ContentListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SaveContentMultiRequest"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Content
      summary: Savemulti
      operationId: Content/Savemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.savemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Save a list of contents.
  "/lumsites/v1/role/saveUserRoleWithFeeds":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/RoleResource"
      parameters:
      - schema:
          "$ref": "#/definitions/Role"
        name: body
        in: body
      tags:
      - Role
      summary: Saveuserrolewithfeeds
      operationId: Role/Saveuserrolewithfeeds
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.role.saveuserrolewithfeeds'><button class='pure-material-button-contained'>Try it</button></a>

        Save a role with its feeds.
  "/lumsites/v1/user/search":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserListResponse"
      parameters:
      - type: string
        description: The query used to filter the result.
        name: query
        in: query
      - enum:
        - PAGE_READ
        - PAGE_EDIT
        - PAGE_DELETE
        - NEWS_READ
        - NEWS_EDIT
        - NEWS_DELETE
        - PAGE_ARCHIVE
        - PAGE_PUBLISH
        - NEWS_PUBLISH
        - METADATA_EDIT
        - METADATA_DELETE
        - ROLE_READ
        - ROLE_EDIT
        - ROLE_DELETE
        - NEWS_LIST_READ
        - NEWS_LIST_EDIT
        - NEWS_LIST_DELETE
        - DIRECTORY_READ
        - DIRECTORY_EDIT
        - DIRECTORY_DELETE
        - MENU_READ
        - MENU_EDIT
        - MENU_DELETE
        - TEMPLATE_READ
        - TEMPLATE_EDIT
        - TEMPLATE_DELETE
        - INSTANCE_EDIT
        - INSTANCE_DELETE
        - FEED_EDIT
        - FEED_DELETE
        - MEDIA_EDIT
        - MEDIA_DELETE
        - USER_READ
        - USER_EDIT
        - USER_DELETE
        - RESELLER_READ
        - RESELLER_EDIT
        - POST_EDIT
        - GROUP_EDIT
        - DIRECTORY_ENTRY_FAVORITES_EDIT
        - NEWSLETTER_READ
        - NEWSLETTER_EDIT
        - NEWSLETTER_DELETE
        - CUSTOM_CONTENT_TYPE_EDIT
        - CUSTOM_CONTENT_TYPE_DELETE
        - CUSTOM_CONTENT_READ
        - CUSTOM_CONTENT_PUBLISH
        - CUSTOM_CONTENT_EDIT
        - CUSTOM_CONTENT_DELETE
        - CUSTOM_LIST_READ
        - CUSTOM_LIST_EDIT
        - CUSTOM_LIST_DELETE
        - CUSTOM_LIST_PUBLISH
        - COMMUNITY_READ
        - COMMUNITY_EDIT
        - COMMUNITY_DELETE
        - USER_DIRECTORY_READ
        - USER_DIRECTORY_EDIT
        - USER_DIRECTORY_DELETE
        - CUSTOM_READ
        - CUSTOM_EDIT
        - CUSTOM_DELETE
        - TUTORIAL_READ
        - TUTORIAL_EDIT
        - TUTORIAL_DELETE
        - POST_READ
        - POST_DELETE
        - CUSTOM_CONTENT_ARCHIVE
        - MENU_DROP
        - STYLE_READ
        - STYLE_EDIT
        - STYLE_DELETE
        - GLOBAL_WIDGET_EDIT
        - TARGET_EDIT
        - DIRECTORY_ENTRY_READ
        - DIRECTORY_ENTRY_EDIT
        - DIRECTORY_ENTRY_DELETE
        - COMMUNITY_PUBLISH
        - ANALYTICS_READ
        - GAMIFICATION_ADMIN
        - COMMUNITY_CREATE
        type: string
        description: "The authorized action used to filter the list.  <br> \n        If
          no action, user must be super or instance administrator."
        name: action
        in: query
      - type: string
        description: The email of the user.
        name: email
        in: query
      - type: string
        description: The first name of the user.
        name: firstName
        in: query
      - type: string
        description: The last name of the user.
        name: lastName
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The keys of feeds for which users have been subscribed.
        in: query
        type: array
        name: feeds
      - collectionFormat: multi
        items:
          type: string
        description: "The list of user account types used to filter the search result.
          \ <br> \n        Acceptable values are:  <br> \n         - \"EXTERNAL\":
          External account.  <br> \n         - \"GOOGLE\": Google account."
        in: query
        type: array
        name: types
      - type: boolean
        description: 'Whether hidden user should be displayed. (Default: false)'
        name: showHidden
        in: query
      - type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        name: sortOrder
        in: query
      - in: query
        type: integer
        description: The number of days since the user is registered.
        name: registeredSince
        format: int32
      - type: string
        description: The ID of the instance.
        name: instance
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of user IDs.
        in: query
        type: array
        name: ids
      - type: string
        description: "The status of the user.  <br> \n    Acceptable values are:  <br>
          \n     - \"ENABLED\": The user account is still live. (default)  <br> \n
          \    - \"DISABLED\": The user account has been deactivated."
        name: status
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: "Fields on which to execute query to filter the results.  <br>
          \n        Acceptable values are:   <br> \n            - addresses  <br>
          \n            - organizations  <br> \n            - firstName  <br> \n            -
          registrationDate  <br> \n            - email  <br> \n            - primaryEmail
          \ <br> \n            - synchronized  <br> \n            - name  <br> \n
          \           - phones  <br> \n            - managers  <br> \n            -
          relations  <br> \n            - profilePicture  <br> \n            - customer
          \ <br> \n            - status  <br> \n            - profileId  <br> \n            -
          emails  <br> \n            - creationTime  <br> \n            - customProfile
          \ <br> \n            - lastName  <br> \n            - organizationsDepartments
          \ <br> \n            - isHidden  <br> \n            - organizationsLocations
          \ <br> \n            - thumbnail  <br> \n            - thumbnailPhotoUrl
          \ <br> \n            - organizationsTitles  <br> \n            - isAdmin
          \ <br> \n            - sortName  <br> \n            - accountType  <br>
          \n            - key  <br> \n            - partialSearch  <br> \n            -
          id  <br> \n            - organizationsNames  <br> \n            - aliases"
        in: query
        type: array
        name: queryFields
      - type: string
        description: The entity key on which users have reacted.
        name: reactedEntityKey
        in: query
      - type: string
        description: The entity kind on which users have reacted.
        name: reactedEntityKind
        in: query
      - type: string
        description: The language of the query.
        name: lang
        in: query
      - type: string
        description: The ID of the current instance.
        name: currentInstance
        in: query
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - User
      summary: Search
      operationId: User/Search
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.search'><button class='pure-material-button-contained'>Try it</button></a>

        @depreciated Use user.list
  "/lumsites/v1/cloudsearch/search":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CloudSearchQueryResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CloudSearchQueryRequest"
        name: body
        in: body
      tags:
      - Cloudsearch
      summary: Search
      operationId: Cloudsearch/Search
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.cloudsearch.search'><button class='pure-material-button-contained'>Try it</button></a>

        *alpha* Execute a query on the CloudSearch Query API (search).
  "/lumsites/v1/feed/search":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FeedListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/FeedListRequest"
        name: body
        in: body
      tags:
      - Feed
      summary: Search
      operationId: Feed/Search
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.search'><button class='pure-material-button-contained'>Try it</button></a>

        Search feeds.
  "/lumsites/v1/community/post/search":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/PostListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/PostListRequest"
        name: body
        in: body
      - type: string
        name: fields
        in: query
      tags:
      - Community Post
      summary: Search
      operationId: Community Post/Search
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.search'><button class='pure-material-button-contained'>Try it</button></a>

        Search posts.
  "/lumsites/v1/instance/search":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/InstanceListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/InstanceListRequest"
        name: body
        in: body
      tags:
      - Instance
      summary: Search
      operationId: Instance/Search
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.search'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of instances.
  "/lumsites/v1/community/searchForPosting":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CommunitySearchForPostingRequest"
        name: body
        in: body
      tags:
      - Community
      summary: Searchforposting
      operationId: Community/Searchforposting
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.searchforposting'><button class='pure-material-button-contained'>Try it</button></a>

        Search for communities where the user can post.
  "/lumsites/v1/community/searchForSharing":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CommunityListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CommunityShareSearchRequest"
        name: body
        in: body
      tags:
      - Community
      summary: Searchforsharing
      operationId: Community/Searchforsharing
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.searchforsharing'><button class='pure-material-button-contained'>Try it</button></a>

        Search for communities where the user can share a given post.
  "/lumsites/v1/newsletter/send":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SendNewsletterResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SendNewsletterRequest"
        name: body
        in: body
      tags:
      - Newsletter
      summary: Send
      operationId: Newsletter/Send
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.newsletter.send'><button class='pure-material-button-contained'>Try it</button></a>

        Send a newsletter.
  "/lumsites/v1/email/send":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/EmailSendRequest"
        name: body
        in: body
      tags:
      - Email
      summary: Send
      operationId: Email/Send
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.email.send'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Send an email
  "/lumsites/v1/notification/send":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/NotificationResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/SendNotificationRequest"
        name: body
        in: body
      tags:
      - Notification
      summary: Send
      operationId: Notification/Send
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.send'><button class='pure-material-button-contained'>Try it</button></a>

        Create a notification.
  "/lumsites/v1/notification/setAllAsRead":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/NotificationIdsResource"
      parameters:
      - schema:
          "$ref": "#/definitions/SetAllNotificationsReadRequest"
        name: body
        in: body
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Notification
      summary: Setallasread
      operationId: Notification/Setallasread
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.setallasread'><button class='pure-material-button-contained'>Try it</button></a>

        Mark all notifications as read by the user.
  "/lumsites/v1/content/setHomepage":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Content
      summary: Sethomepage
      operationId: Content/Sethomepage
      description: "<a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.sethomepage'><button
        class='pure-material-button-contained'>Try it</button></a>\n\nSet a content
        as home page.  <br> \n        This is only available for a super admin or
        an instance admin."
  "/lumsites/v1/notification/setRead":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/NotificationGroupResource"
      parameters:
      - schema:
          "$ref": "#/definitions/SetNotificationReadRequest"
        name: body
        in: body
      tags:
      - Notification
      summary: Setread
      operationId: Notification/Setread
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.setread'><button class='pure-material-button-contained'>Try it</button></a>

        Mark a notification as read by the user.
  "/lumsites/v1/user/settings/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserProto_lang_langs_properties_showTutorial_tutorials_emailNotifications_rePassword_currentPassword_alternateEmail_settings"
      parameters: []
      tags:
      - User
      summary: Settings/Get
      operationId: User/Settings/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.settings.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get settings of current user.
  "/lumsites/v1/user/settings/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserProto_lang_langs_properties_showTutorial_tutorials_emailNotifications_rePassword_currentPassword_alternateEmail_settings"
      parameters:
      - schema:
          "$ref": "#/definitions/UserProto_lang_langs_properties_showTutorial_tutorials_emailNotifications_rePassword_currentPassword_alternateEmail_settings_password"
        name: body
        in: body
      tags:
      - User
      summary: Settings/Save
      operationId: User/Settings/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.settings.save'><button class='pure-material-button-contained'>Try it</button></a>

        Update profile settings of current user.
  "/lumsites/v1/notification/setUnread":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/NotificationGroupResource"
      parameters:
      - schema:
          "$ref": "#/definitions/SetNotificationReadRequest"
        name: body
        in: body
      tags:
      - Notification
      summary: Setunread
      operationId: Notification/Setunread
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.notification.setunread'><button class='pure-material-button-contained'>Try it</button></a>

        Mark a notification as unread by the user.
  "/lumsites/v1/community/post/share":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - schema:
          "$ref": "#/definitions/PostShareRequest"
        name: body
        in: body
      tags:
      - Community Post
      summary: Share
      operationId: Community Post/Share
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.share'><button class='pure-material-button-contained'>Try it</button></a>

        Share a post in communities
  "/lumsites/v1/instance/siblings/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/InstanceSiblingsListResponse"
      parameters:
      - required: true
        type: string
        description: The ID of the instance.
        name: instanceId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Instance
      summary: Siblings/List
      operationId: Instance/Siblings/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.instance.siblings.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of pairing instances (siblings).
  "/lumsites/v1/customer/status":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomerStatusResponse"
      parameters:
      - type: string
        description: The customer token.
        name: token
        in: query
      - type: string
        description: The customer ID.
        name: customer
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Customer
      summary: Status
      operationId: Customer/Status
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customer.status'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Return a customer status or a customer error.
  "/lumsites/v1/style/stylesheet/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Style"
      parameters:
      - schema:
          "$ref": "#/definitions/StyleSheetSaveRequest"
        name: body
        in: body
      tags:
      - Style
      summary: Stylesheet/Save
      operationId: Style/Stylesheet/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.style.stylesheet.save'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Save a stylesheet
  "/lumsites/v1/classroom/submissions/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/SubmissionListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int64
        default: 30
        in: query
        type: string
        name: maxResults
      - type: string
        description: Identifier of the course.
        name: courseId
        in: query
      - type: string
        description: Identifier for the course work this corresponds to.
        name: courseWorkId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Classroom
      summary: Submissions/List
      operationId: Classroom/Submissions/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.classroom.submissions.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Lists submissions of the first course.
  "/lumsites/v1/feed/subscribers/save":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/FeedSubscribersRequest"
        name: body
        in: body
      tags:
      - Feed
      summary: Subscribers/Save
      operationId: Feed/Subscribers/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.subscribers.save'><button class='pure-material-button-contained'>Try it</button></a>

        Save the list of users in a feed.
  "/lumsites/v1/cloudsearch/suggest":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CloudSearchSuggestResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CloudSearchSuggestRequest"
        name: body
        in: body
      tags:
      - Cloudsearch
      summary: Suggest
      operationId: Cloudsearch/Suggest
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.cloudsearch.suggest'><button class='pure-material-button-contained'>Try it</button></a>

        *alpha* Execute a query on the CloudSearch Query API (search).
  "/lumsites/v1/feed/synchronize":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Feed
      summary: Synchronize
      operationId: Feed/Synchronize
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.synchronize'><button class='pure-material-button-contained'>Try it</button></a>

        Synchronize the Google group members in the feed.
  "/lumsites/v1/customcontenttype/tag/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/CustomContentTypeTag"
      parameters:
      - required: true
        type: string
        description: The tag uuid.
        name: uuid
        in: query
      tags:
      - Customcontenttype
      summary: Tag/Get
      operationId: Customcontenttype/Tag/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.tag.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get a custom content type tag.
  "/lumsites/v1/customcontenttype/tag/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ListCustomContentTypeTagResponse"
      parameters:
      - required: true
        type: string
        description: The custom content type uuid.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Customcontenttype
      summary: Tag/List
      operationId: Customcontenttype/Tag/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.customcontenttype.tag.list'><button class='pure-material-button-contained'>Try it</button></a>

        List a custom content type tags
  "/lumsites/v1/document/trash":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/EmptyResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentActionRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Trash
      operationId: Document/Trash
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.trash'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Trash a document.
  "/lumsites/v1/document/trash/empty":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/EmptyResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/EmptyTrashRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Trash/Empty
      operationId: Document/Trash/Empty
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.trash.empty'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Empty the trash.
  "/lumsites/v1/media/trash/empty":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ErrorsResponse"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of returned items.
        in: query
        type: array
        name: instance
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Media
      summary: Trashbin/Empty
      operationId: Media/Trashbin/Empty
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.trashbin.empty'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Empty the trash bin.
  "/lumsites/v1/widget/type/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/WidgetTypeListResponse"
      parameters:
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Widget
      summary: Type/List
      operationId: Widget/Type/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.widget.type.list'><button class='pure-material-button-contained'>Try it</button></a>

        List the widget types.
  "/lumsites/v1/content/unarchive":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Content
      summary: Unarchive
      operationId: Content/Unarchive
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.unarchive'><button class='pure-material-button-contained'>Try it</button></a>

        Unarchive a content.
  "/lumsites/v1/content/{id}/unfollow":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The ID of the content.
        name: id
        in: path
      tags:
      - Content
      summary: Unfollow
      operationId: Content/Unfollow
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.unfollow'><button class='pure-material-button-contained'>Try it</button></a>

        Unfollow a Content, dedicated and simple endpoint to easily unfollow a Content without subscription
                management on client side.
  "/lumsites/v1/user/{id}/unfollow":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The ID of the user.
        name: id
        in: path
      tags:
      - User
      summary: Unfollow
      operationId: User/Unfollow
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.user.unfollow'><button class='pure-material-button-contained'>Try it</button></a>

        Unfollow a user.
  "/lumsites/v1/community/{id}/unfollow":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The ID of the community.
        name: id
        in: path
      tags:
      - Community
      summary: Unfollow
      operationId: Community/Unfollow
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.unfollow'><button class='pure-material-button-contained'>Try it</button></a>

        Unfollow a community, dedicated and simple endpoint to easily unfollow a community without subscription
                management on client side.
  "/lumsites/v1/community/post/unlike":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Community Post
      summary: Unlike
      operationId: Community Post/Unlike
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.unlike'><button class='pure-material-button-contained'>Try it</button></a>

        Unlike a post.
  "/lumsites/v1/comment/unlike":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Comment"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Comment
      summary: Unlike
      operationId: Comment/Unlike
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.unlike'><button class='pure-material-button-contained'>Try it</button></a>

        Unlike a comment
  "/lumsites/v1/content/unlike":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      - default: true
        type: boolean
        description: Whether to send notifications.
        name: sendNotifications
        in: query
      tags:
      - Content
      summary: Unlike
      operationId: Content/Unlike
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.unlike'><button class='pure-material-button-contained'>Try it</button></a>

        Unlike a content.
  "/lumsites/v1/comment/unmarkRelevant":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/DatastoreKey"
        name: body
        in: body
      tags:
      - Comment
      summary: Unmarkrelevant
      operationId: Comment/Unmarkrelevant
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.comment.unmarkrelevant'><button class='pure-material-button-contained'>Try it</button></a>

        Mark a comment as relevant
  "/lumsites/v1/community/post/unpin":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - schema:
          "$ref": "#/definitions/PostUnpinRequest"
        name: body
        in: body
      tags:
      - Community Post
      summary: Unpin
      operationId: Community Post/Unpin
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.unpin'><button class='pure-material-button-contained'>Try it</button></a>

        Remove a post from the list of pinned posts for a community.
  "/lumsites/v1/community/post/unshare":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - schema:
          "$ref": "#/definitions/PostUnshareRequest"
        name: body
        in: body
      tags:
      - Community Post
      summary: Unshare
      operationId: Community Post/Unshare
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.unshare'><button class='pure-material-button-contained'>Try it</button></a>

        Unshare a post from communities
  "/lumsites/v1/media/untrash":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/ItemsListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/FileSystemItemsKeysRequest"
        name: body
        in: body
      tags:
      - Media
      summary: Untrash
      operationId: Media/Untrash
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.media.untrash'><button class='pure-material-button-contained'>Try it</button></a>

        USE_DOCUMENT_API
                Restore the given items (given that they have been trashed at some point).
  "/lumsites/v1/community/post/{uid}/vote":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: path
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Unvote
      operationId: Community Post/Unvote
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.unvote'><button class='pure-material-button-contained'>Try it</button></a>

        Remove vote for a post.
  "/lumsites/v1/document/update":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Media"
      parameters:
      - schema:
          "$ref": "#/definitions/Media"
        name: body
        in: body
      tags:
      - Document
      summary: Update
      operationId: Document/Update
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.update'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Update a document.
  "/lumsites/v1/groups/update":
    put:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/UpdateRequest"
        name: body
        in: body
      tags:
      - Groups
      summary: Update
      operationId: Groups/Update
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.groups.update'><button class='pure-material-button-contained'>Try it</button></a>

        Update an external API group
  "/lumsites/v1/content/updateStatus":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Content"
      parameters:
      - schema:
          "$ref": "#/definitions/ContentStatusRequest"
        name: body
        in: body
      tags:
      - Content
      summary: Updatestatus
      operationId: Content/Updatestatus
      description: "<a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.content.updatestatus'><button
        class='pure-material-button-contained'>Try it</button></a>\n\nUpdate status
        of a content.  <br> \n        This is only available for editors and publishers."
  "/lumsites/v1/document/uploadUrl/get":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DocumentUploadResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/DocumentUploadRequest"
        name: body
        in: body
      tags:
      - Document
      summary: Uploadurl/Get
      operationId: Document/Uploadurl/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.document.uploadurl.get'><button class='pure-material-button-contained'>Try it</button></a>

        *beta* Create a new document upload session.
                This will return an upload URL where the client can send the binary data.
  "/lumsites/v1/misc/urlinfo":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UrlinfoResponse"
      parameters:
      - type: string
        description: The url to fetch.
        name: url
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Misc
      summary: Urlinfo
      operationId: Misc/Urlinfo
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.misc.urlinfo'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Fetch website info
  "/lumsites/v1/directory/entry/user/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory Entry
      summary: User/Delete
      operationId: Directory Entry/User/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.user.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a directory entry restricted to the current user.
  "/lumsites/v1/directory/entry/user/deleteMulti":
    delete:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DatastoreKeyWithErrorList"
      parameters:
      - collectionFormat: multi
        items:
          type: string
        description: The list of unique identifiers.
        in: query
        type: array
        name: uid
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Directory Entry
      summary: User/Deletemulti
      operationId: Directory Entry/User/Deletemulti
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.user.deletemulti'><button class='pure-material-button-contained'>Try it</button></a>

        Delete a list of directory entries restricted to the current user.
  "/lumsites/v1/community/user/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserListResponse"
      parameters:
      - schema:
          "$ref": "#/definitions/CommunityUserListRequest"
        name: body
        in: body
      - type: string
        name: fields
        in: query
      tags:
      - Community
      summary: User/List
      operationId: Community/User/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.community.user.list'><button class='pure-material-button-contained'>Try it</button></a>

        List all users that can publish in a community.
  "/lumsites/v1/directory/entry/user/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntryListResponse"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int32
        default: 30
        in: query
        type: integer
        name: maxResults
      - type: string
        description: The directory of the user entries.
        name: directory
        in: query
      - enum:
        - DRAFT
        - REFUSED
        - TO_VALIDATE
        - LIVE
        - ARCHIVE
        - DELETED
        - PENDING
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
        name: status
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Directory Entry
      summary: User/List
      operationId: Directory Entry/User/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.user.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get a list of directory entries restricted to the current user.
  "/lumsites/v1/directory/entry/user/save":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/DirectoryEntryProto_id_name_values_metadata_status_directory_thumbnail_createdAt_updatedAt_user_link_tags"
      parameters:
      - schema:
          "$ref": "#/definitions/DirectoryEntryProto_id_name_values_metadata_status_directory_thumbnail_createdAt_updatedAt_link_tags"
        name: body
        in: body
      tags:
      - Directory Entry
      summary: User/Save
      operationId: Directory Entry/User/Save
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.directoryentry.user.save'><button class='pure-material-button-contained'>Try it</button></a>

        Create or update a directory entry restricted to the current user.
  "/lumsites/v1/feed/user/subscription/list":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FeedListResponse"
      parameters:
      - required: true
        type: string
        description: The ID of the user.
        name: userId
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Feed
      summary: User/Subscription/List
      operationId: Feed/User/Subscription/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.feed.user.subscription.list'><button class='pure-material-button-contained'>Try it</button></a>

        Get subscription feeds of a user.
  "/lumsites/v1/classroom/userProfiles/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/UserProfile"
      parameters:
      - type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
        name: cursor
        in: query
      - description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
        format: int64
        default: 30
        in: query
        type: string
        name: maxResults
      - type: string
        description: Identifier of the course.
        name: courseId
        in: query
      tags:
      - Classroom
      summary: Userprofiles/Get
      operationId: Classroom/Userprofiles/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.classroom.userprofiles.get'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get specific user profile.
  "/lumsites/v1/groups/users/add":
    post:
      responses:
        '200':
          description: A successful response
      parameters:
      - schema:
          "$ref": "#/definitions/AddUsersRequest"
        name: body
        in: body
      tags:
      - Groups
      summary: Users/Add
      operationId: Groups/Users/Add
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.groups.users.add'><button class='pure-material-button-contained'>Try it</button></a>

        Add users to an external API group
  "/lumsites/v1/groups/users/delete":
    delete:
      responses:
        '200':
          description: A successful response
      parameters:
      - required: true
        type: string
        description: The group identifier (email or ID for example).
        name: groupIdentifier
        in: query
      - collectionFormat: multi
        items:
          type: string
        description: The list of users identifiers (email or ID for example).
        in: query
        type: array
        name: usersIdentifiers
      - type: string
        description: The group users type. It can me owners or members. Only relevant
          for Microsoft.
        name: groupUserType
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Groups
      summary: Users/Delete
      operationId: Groups/Users/Delete
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.groups.users.delete'><button class='pure-material-button-contained'>Try it</button></a>

        Delete users from an external API group
  "/lumsites/v1/groups/users/get":
    get:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/GetAllUsersResponse"
      parameters:
      - required: true
        type: string
        description: The group identifier (email or ID for example).
        name: groupIdentifier
        in: query
      - default: true
        type: boolean
        description: Whether only the group's users email should be returned or not.
        name: emailOnly
        in: query
      - type: string
        description: The group users type. It can me owners or members. Only relevant
          for Microsoft.
        name: groupUserType
        in: query
      - type: string
        description: The ID of the call.
        name: callId
        in: query
      tags:
      - Groups
      summary: Users/Get
      operationId: Groups/Users/Get
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.groups.users.get'><button class='pure-material-button-contained'>Try it</button></a>

        Get all the users emails of an external API group
  "/lumsites/v1/analyticsv2/filter/value/list":
    post:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/FiltersValuesResponse"
      parameters: []
      tags:
      - Analyticsv2 Filter
      summary: Value/List
      operationId: Analyticsv2 Filter/Value/List
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.analyticsv2filter.value.list'><button class='pure-material-button-contained'>Try it</button></a>

        <b>Beta</b> <br/>
                Get the list of values for each filter of the customer
  "/lumsites/v1/community/post/{uid}/vote/{vote}":
    put:
      responses:
        '200':
          description: A successful response
          schema:
            "$ref": "#/definitions/Post"
      parameters:
      - required: true
        type: string
        description: The unique identifier.
        name: uid
        in: path
      - enum:
        - up
        - down
        description: Vote for the post (up/down)
        default: up
        required: true
        in: path
        type: string
        name: vote
      - type: string
        description: The list of fields that will be returned with the response.
        name: fields
        in: query
      tags:
      - Community Post
      summary: Vote
      operationId: Community Post/Vote
      description: |-
        <a href='https://apis-explorer.appspot.com/apis-explorer/?base=https://lumsites.appspot.com/_ah/api#p/lumsites/v1/lumsites.communitypost.vote'><button class='pure-material-button-contained'>Try it</button></a>

        Vote up or vote down for a post.
schemes:
- https
x-tagGroups:
- name: Getting started
  tags:
  - Introduction
  - Authentication
  - Glossary
  - Pagination
- name: Reference
  tags:
  - Analytics
  - Analyticsv2
  - Analyticsv2 Filter
  - Calendar
  - Classroom
  - Cloudsearch
  - Comment
  - Community
  - Community Post
  - Community Request
  - Communitysettings
  - Communitytemplate
  - Content
  - Content Interest
  - Content Revision
  - Customcontenttype
  - Customer
  - Directory
  - Directory Entry
  - Document
  - Drive
  - Email
  - Favorite
  - Feed
  - Groups
  - Instance
  - Media
  - Metadata
  - Misc
  - Mlearning
  - Newsletter
  - Notification
  - Role
  - Search
  - Social Subscription
  - Style
  - Tag
  - Template
  - Tutorial
  - User
  - User Directory
  - User Organizationchart
  - Widget
  - Widget Files
  - Widget Image_Gallery
  - Widget Video
servers:
- url: https://sites.lumapps.com/_ah/api/
- url: https://sites-ms.lumapps.com/_ah/api/
- url: https://sites-eu.lumapps.com/_ah/api/
produces:
- application/json
basePath: "/_ah/api"
tags:
- x-displayName: Introduction
  x-traitTag: true
  description: |
    ## API Reference

    This technical documentation is about LumApps API.

    The LumApps API is organized around REST.
    Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.

    For more informations about LumApps visit [the hive](https://hive.lumapps.com/hive/)
  name: Introduction
- x-displayName: Authentication
  x-traitTag: true
  description: "The LumApps API uses `HTTP Bearer Token` to authenticate requests.
    There are several ways to obtain those tokens.\n\nA token carries the identity
    and privileges of the user associated with it. It must remain secret.\n\nLumApps
    uses several servers and domains so choose the right environment before obtaining
    your token. It must correspond to the LumApps environment picked during the installation.\n\nTo
    do so, replace 'sites.lumapps.com' with the right environment in the url address
    of your LumApps. For example: \"sites-ms.lumapps.com\"\n\n\n## Getting started\n\nGet
    your token by logging into your LumApps account. Go to https://sites.lumapps.com
    and authenticate.\nOpen the javascript console of your browser and run:\n\n```javascript\nvar
    instance = window.location.pathname.split('/');\ninstance = instance[1] == \"a\"
    ? instance[3] : instance[1]\nfetch(window.location.origin+\"/service/init?customerHost=\"+window.location.host+\"&instanceSlug=\"+instance).then(data=>{return
    data.json()}).then(res => {console.log(res.token)})\n```\n\nThis generates your
    personal LumApps Bearer token. It is only valid for 1 hour.\n\n**Authenticated
    request example**\n\n```bash\ncurl https://sites.lumapps.com/_ah/api/lumsites/v1/user/get
    -H \"Authorization: Bearer <your token>\"\n```\n\n## Ways to  authenticate\n\nThere
    are 3 ways to authenticate. All of them require to set up a google project and
    to create the correct credentials.\n\n\n\nStart by creating a Google Cloud project
    http://console.developers.google.com/project/.\n\nThen go to the **[APIs & Services
    > Credentials](https://console.cloud.google.com/apis/credentials)** section and
    choose one of the following strategies.\n\n> Notes: Those methods use `google-oauth`
    and `google-api-python-client` libraries for authentication.\\\n> *see [google-auth](https://google-auth.readthedocs.io/en/latest/)
    documentation for extend auth capabilities* \\\n> *see google documentation [Using
    OAuth 2.0 to Access Google APIs](https://developers.google.com/identity/protocols/OAuth2)
    for resource in other languages*\n\n\n\n## OAuth2\n\nYou can use this [scenario](https://developers.google.com/identity/protocols/OAuth2#webserver)
    as a reference.\n\n**Create and authorize credentials**\n\nIn **APIs & Services
    > Credentials** click create **credentials > OAuth client ID** and follow the
    steps.\n\nLastly, send an email to support@lumapps.com with the generated client
    ID (**xxxxxxxx.apps.googleusercontent.com**) to be granted access.\n\n**Setup**\n\nYou
    need a refresh token in order to use this method. It can be retrieved by building
    a web app and setting up a login process, or by using the [oauthplayground](https://developers.google.com/oauthplayground/).\n\nYou
    have to authorize the \"https://www.googleapis.com/auth/userinfo.email\" scope.\n\n\n**Python
    example.**\n\n```python\nfrom googleapiclient.discovery import build\nfrom google.oauth2.credentials
    import Credentials\n\nCLIENT_ID = \"XXX.apps.googleusercontent.com\"\nCLIENT_SECRET
    = \"YYY\"\nREFRESH_TOKEN = \"ZZZ\"\n\n\ndef build_lumapps_service():\n    credentials
    = Credentials(None,\n                      {\"client_id\":CLIENT_ID,\n                       \"client_secret\":CLIENT_SECRET,\n
    \                      \"refresh_token\":REFRESH_TOKEN,\n                       \"access_token\":None,\n
    \                      \"token_uri\":\"https://accounts.google.com/o/oauth2/token\"\n
    \                     })\n    discovery_url = \"https://lumsites.appspot.com/_ah/api/discovery/v1/apis/lumsites/v1/rest\"\n
    \   service = build(\"lumsites\", \"v1\",\n                    credentials=credentials,\n
    \                   discoveryServiceUrl=discovery_url)\n    return service\n```\n\n\n\n##
    Service account with GSuite delegation\n\n[Google Service Account Auth Reference](https://developers.google.com/identity/protocols/oauth2/service-account)\n\n**Create
    and authorize credentials**\n\nIn **APIs & Services > Credentials** click create
    **credentials > Service account** and follow the steps.\nDuring the last step,
    generate a key and get the client ID inside it.\n\nLastly, send an email to support@lumapps.com
    with the generated client ID (**xxxxxxxxxxxxxxxxxxxxx**) to be granted access.\n\nService
    account must have [domain wide delegation](https://developers.google.com/admin-sdk/directory/v1/guides/delegation)
    to use this method.\n\n**Python example.**\n\n```python\n\n\nfrom google.oauth2
    import service_account\nfrom googleapiclient.discovery import build\nimport json\n\nSCOPES
    = [\"https://www.googleapis.com/auth/userinfo.email\"]\nMY_LUMAPPS_ENV = \"https://sites.lumapps.com\"\nLUMAPPS_API_BASE_URL
    = f\"{MY_LUMAPPS_ENV}/_ah/api/lumsites/v1\"\nEMAIL = \"EMAIL_TO_USE_WITH_DELEGATION\"\n\n\ndef
    build_lumapps_service():\n    #\n    #  1 - Create credential with the service
    account\n    #\n    credentials = service_account.Credentials.from_service_account_info(\n
    \       json.load(\n            open('service-account.json')))\n    credentials
    = credentials.with_scopes(SCOPES)\n\n    # \n    #  2 - Add delegation\n    #
    \n    credentials = credentials.with_subject(EMAIL)\n\n    # \n    #  3 - Build
    the service\n    #\n    discovery_url = \"https://lumsites.appspot.com/_ah/api/discovery/v1/apis/lumsites/v1/rest\"\n
    \   service = build(\"lumsites\", \"v1\",\n                    credentials=credentials,\n
    \                   discoveryServiceUrl=discovery_url)\n\n    return service\n```\n\n\n##
    Service account with LumApps delegation\n\n[Google Service Account Auth Reference](https://developers.google.com/identity/protocols/oauth2/service-account)\n\n**Create
    and authorize credentials**\n\nIn **APIs & Services > Credentials** click create
    **credentials > Service account** and follow the steps.\nDuring the last step,
    generate a key and get the client ID inside it.\n\nLastly, send an email to support@lumapps.com,
    specify:\n- you want to use LumApps delegation.\n- the clientID (**xxxxxxxxxxxxxxxxxxxxx**)
    to be granted access.\n- the customer ID on which to grant access.\n- the [environment](https://docs.lumapps.com/docs/home/architecture/archi-lumapps-platform-site-architecture#topic_ejp_f51_xhb)
    of the customer.\n\nWe will allow the service account to retrieve the access token
    for any user on the target customer's platform.\n\n**Make a request**\n\nPython
    3 from scratch\n\n```python\nimport requests\nimport datetime\nimport json\nimport
    jwt\n\n \nMY_LUMAPPS_ENV = \"https://sites.lumapps.com\"\nLUMAPPS_API_BASE_URL
    = f\"{MY_LUMAPPS_ENV}/_ah/api/lumsites/v1\"\n\n\ndef call_lumapps_apis_with_service_account_raw():\n
    \   #\n    #  1 - Construct a jwt with your service account\n    #\n    with open(\"service
    _account.json\", \"r\") as f:\n        service_account = json.load(f)\n\n    sa_email
    = service_account[\"client_email\"]\n    sa_private_key = service_account[\"private_key\"]\n
    \   current_timestamp = datetime.datetime.now().timestamp()\n    exp_time = current_timestamp
    + 30 \n    data = {\n        'aud': 'https://www.googleapis.com/oauth2/v4/token',\n
    \       'iss': sa_email,\n        'iat': current_timestamp,\n        'exp': exp_time,
    \          # expiry time is 30 seconds from time of creation\n        'scope':
    'https://www.googleapis.com/auth/userinfo.email'\n    }\n    constructed_jwt =
    jwt.encode(data, sa_private_key, algorithm='RS256')\n    print(f\"constructed_jwt={constructed_jwt}\")\n\n\n
    \   # \n    # 2 - Get a google token from your jwt\n    #\n    google_token_url
    = \"https://www.googleapis.com/oauth2/v4/token\"\n    body = {\n        \"grant_type\":
    \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n        \"assertion\": constructed_jwt\n
    \   }\n    response = requests.post(google_token_url, data=body)\n    response.raise_for_status()\n
    \   response_json = response.json()\n    google_token = response_json[\"access_token\"]\n\n\n
    \   #\n    #  3 - Call LumApps api \"user/getToken\" endpoint with your google
    token\n    # to get a LumApps jwt token authenticated as a user.\n    #\n    url
    = f\"{LUMAPPS_API_BASE_URL}/user/getToken\"\n    headers = {\"Authorization\":
    f\"Bearer {google_token}\"}\n    customer_id = \"\"              # Your customer
    id\n    user_to_authenticate_as = \"\"  # The email of the user you want to authenticate
    as\n    params = {\n        \"customerId\": customer_id,\n        \"email\": user_to_authenticate_as\n
    \   }\n\n    response = requests.get(url, params=params, headers=headers)\n    response.raise_for_status()\n
    \   response_json = response.json()\n    lumapps_token = response_json[\"accessToken\"]\n\n\n
    \   # \n    # 4 - Call a lumapps endpoints using the access token you just retrieved\n
    \   # \n\n    # Here we call user/get to get the user associated to the token\n
    \   # See https://apiv1.lumapps.com for more informations about other endpoints\n\n
    \   url = f\"{LUMAPPS_API_BASE_URL}/user/get\" # user/get endpoint\n    headers
    = {\"Authorization\": f\"Bearer {lumapps_token}\"}\n    response = requests.get(url,
    headers=headers)\n    response.raise_for_status()\n    user = response.json()\n
    \   print(f\"User: {user}\")\n\n```\n\n<details>\n<summary><b>Python 3 with google-api-client</b></summary>\n\n```python\nimport
    urllib.request, json\nfrom googleapiclient.discovery import build_from_document\nfrom
    google.oauth2.credentials import Credentials\nfrom google.oauth2 import service_account\n\ndef
    build_lumapps_service():\n    # A / create credential with the service account
    only\n    credentials = service_account.Credentials.from_service_account_info(\n
    \                    json.load(open(\"sa.json\")))\n\n\n    # B / connect to LumApps
    and ask the user/getToken url\n    discovery_url = \"https://lumsites.appspot.com/_ah/api/discovery/v1/apis/lumsites/v1/rest\"\n
    \   with urllib.request.urlopen(discovery_url) as url:\n        service_discovery
    = json.loads(url.read().decode())\n    service = build_from_document(service_discovery,\n
    \                   credentials=credentials)\n    \n    CUSTOMER_ID = \"\" # The
    is of your LumApps customer \n    AUTHENTICATE_AS = \"\" # The email of the user
    to authenticate as\n\n    response = service.user().getToken(customerId=CUSTOMER_ID,
    email=AUTHENTICATE_AS).execute()\n    # response contains the \"accessToken\"
    and \"expiresAt\" (valid for 24h)\n    \n    # C / next calls use only the user
    token\n    user_credentials = Credentials(response['accessToken'])\n    authenticated_service
    = build_from_document(service_discovery,\n                    credentials=user_credentials)\n
    \   \n    user = authenticated_service.user().get().execute()\n    print(f\"User:
    {user}\")\n    \n    # it's also possible to use\n    # a direct GET call to https://lumsites.appspot.com/_ah/api/lumsites/v1/user/get\n
    \   # using the token in the \"Authorization\" header\n```\n</details>\n\n\n**Using
    our python SDK or with other methods (postman, curl)** \n\nYou can find the related
    doc https://lumapps.github.io/lumapps-sdk/authentication/\">here</a>"
  name: Authentication
- x-displayName: Glossary
  x-traitTag: true
  description: |
    Some terms used in the API may be confusing or may not correspond to those used in LumApps. This section aims to explain those differences.

    **Customer**

    Customer corresponds to a `platform` in LumApps.

    **Feed**

    Feed corresponds to `groups` in LumApps.

    **Instance**

    Instance corresponds to a `site` in LumApps.
  name: Glossary
- x-displayName: Pagination
  x-traitTag: true
  description: |
    Most of the top-level API resources in LumApps API support bulk fetches via the "list" API endpoint.

    For instance, you can [list users](https://api.lumapps.com/#operation/User/List) or [list content](https://api.lumapps.com/#operation/Content/List). These API endpoints share a common response structure and common request parameters.

    <h3><b>Parameters</b></h3>

    ---

    <div style="margin-left:6px">

    **maxResults** *optional, integer, default is 30*

    It defines the maximum size of the returned page.


    **cursor** *optional, string*

    It is the identifier used in pagination. It defines your place in the list.

    For instance, you make a request and receive 50 objects. The response returns a cursor `d23DAIJ` in the payload. Your next call can include the parameter `cursor=d23DAIJ` to get the next 50 objects of the list.

    </div>

    <h3><b>Response format</b></h3>

    ---
    <div style="margin-left:6px">

    **items** *array*

    Arrays containing the current response elements.


    **more** *optional, boolean*

    It indicates whether or not there are more elements available after this set. If `false`, this set comprises the end of
    the list.

    **cursor** *optional, string*

    The identifier to use to get the next page.
    </div>
  name: Pagination
- name: Analytics
  description: ''
- name: Analyticsv2
  description: ''
- name: Analyticsv2 Filter
  description: ''
- name: Calendar
  description: ''
- name: Classroom
  description: ''
- name: Cloudsearch
  description: ''
- name: Comment
  description: ''
- name: Community
  description: ''
- name: Community Post
  description: ''
- name: Community Request
  description: ''
- name: Communitysettings
  description: ''
- name: Communitytemplate
  description: ''
- name: Content
  description: ''
- name: Content Interest
  description: ''
- name: Content Revision
  description: ''
- name: Customcontenttype
  description: ''
- name: Customer
  description: ''
- name: Directory
  description: ''
- name: Directory Entry
  description: ''
- name: Document
  description: ''
- name: Drive
  description: ''
- name: Email
  description: ''
- name: Favorite
  description: ''
- name: Feed
  description: ''
- name: Groups
  description: ''
- name: Instance
  description: ''
- name: Media
  description: ''
- name: Metadata
  description: ''
- name: Misc
  description: ''
- name: Mlearning
  description: ''
- name: Newsletter
  description: ''
- name: Notification
  description: ''
- name: Role
  description: ''
- name: Search
  description: ''
- name: Social Subscription
  description: ''
- name: Style
  description: ''
- name: Tag
  description: ''
- name: Template
  description: ''
- name: Tutorial
  description: ''
- name: User
  description: ''
- name: User Directory
  description: ''
- name: User Organizationchart
  description: ''
- name: Widget
  description: ''
- name: Widget Files
  description: ''
- name: Widget Image_Gallery
  description: ''
- name: Widget Video
  description: ''
securityDefinitions:
  google_id_token:
    x-google-jwks_uri: https://www.googleapis.com/oauth2/v3/certs
    type: oauth2
    x-google-issuer: https://accounts.google.com
    flow: implicit
    authorizationUrl: ''
definitions:
  QueryInterpretation:
    type: object
    properties:
      interpretationType:
        type: string
        description: NONE, BLEND or REPLACE
      interpretedQuery:
        type: string
        description: The interpretation of the query used in search.
      reason:
        type: string
        description: The reason for interpretation of the query.
  UrlinfoResponse:
    type: object
    properties:
      code:
        type: string
        description: The http response code.
        format: int64
      description:
        type: string
        description: The description of the website.
      title:
        type: string
        description: The title of the website.
      url:
        type: string
        description: The website url.
      callId:
        type: string
        description: The ID of the call.
      images:
        items:
          type: string
        type: array
        description: The list of images found on the website.
  CustomerIDPListResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/CustomerIdentityProvider"
        type: array
        description: The customer's identity providers.
  Metadata:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.    <br>
          \ \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        format: int64
      multiple:
        type: boolean
        description: 'Whether the metadata is multiple. (Default: false)'
      customContentTypes:
        items:
          type: string
        type: array
        description: The list of custom content types of the metadata.
      name:
        type: string
        description: 'The name of the metadata. (Format: JSON object)'
      isVisibleFront:
        type: boolean
        description: 'Whether the metadata is visible in the interface. (Default:
          false)'
      functionalInnerId:
        type: string
        description: A code to describe the object.
      instance:
        type: string
        description: The ID of the instance.
      parent:
        type: string
        description: The parent of the metadata.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      uid:
        type: string
      values:
        type: string
        description: 'The values of the metadata. (Format: JSON object)'
      heritable:
        type: boolean
        description: 'Whether the metadata is heritable. (Default: false)'
      familyKey:
        type: string
        description: The key of the metadata family.
      id:
        type: string
      displayInFilter:
        type: boolean
        description: 'Whether the metadata is displayed in filters. (Default: false)'
      description:
        type: string
        description: 'The description of the metadata. (Format: JSON object)'
  DocumentActionRequest:
    required:
    - docPath
    type: object
    properties:
      docPath:
        type: string
        description: The docPath of the document
      callId:
        type: string
        description: The ID of the call.
      searchParameters:
        description: The search parameters
        "$ref": "#/definitions/CategoryProperties"
  PostPin:
    type: object
    properties:
      pinnedBy:
        type: string
        description: The user who pinned the post.
      sortOrder:
        type: integer
        description: The custom sort order for the post.
        format: int32
      pinDate:
        type: string
        description: The date when the post was pinned.
      title:
        type: string
        description: The title of the post when pinned.
  ContentMenuDeletedListItem:
    required:
    - lang
    - uuid
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      uid:
        type: string
      instanceId:
        type: string
        description: The ID for an instance on which the objects are attached.
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      url:
        type: string
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
  CalendarGetResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      calendar:
        description: The calendar.
        "$ref": "#/definitions/CalendarResource"
  PostStatus:
    type: object
    properties:
      uid:
        type: string
      uuid:
        type: string
        description: The unique identifier of this status
      id:
        type: string
      title:
        type: string
        description: The title of the status
  UserDirectoryListRequest:
    type: object
    properties:
      status:
        type: string
        description: "The status of the user.  <br> \n    Acceptable values are:  <br>
          \n     - \"ENABLED\": The user account is still live. (default)  <br> \n
          \    - \"DISABLED\": The user account has been deactivated."
      registeredSince:
        type: string
        description: The number of days since the user is registered.
      primaryEmail:
        type: string
        description: The primary email of the user.
      firstName:
        type: string
        description: The first name of the user.
      instanceId:
        type: string
        description: The ID of the current instance.
      callId:
        type: string
        description: The ID of the call.
      lastName:
        type: string
        description: The last name of the user.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      showHidden:
        type: boolean
        description: 'Whether hidden user should be displayed. (Default: false)'
      contentId:
        type: string
        description: The ID of the content for which users are contributors.
      query:
        type: string
        description: The query used to filter the result.
      feeds:
        items:
          type: string
        type: array
        description: The list of user groups used to filter the search result.
      profileCriteria:
        type: string
        description: 'A search criteria. (Format: JSON object)'
      customerId:
        type: string
        description: The ID of the customer.
      types:
        items:
          type: string
        type: array
        description: "The list of user account types used to filter the search result.
          \ <br> \n        Acceptable values are:  <br> \n         - \"EXTERNAL\":
          External account.  <br> \n         - \"GOOGLE\": Google account."
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
  CommunityListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      errors:
        items:
          "$ref": "#/definitions/ErrorReason"
        type: array
        description: The list of errors and their relative target.
      items:
        items:
          "$ref": "#/definitions/Community"
        type: array
        description: The list of returned items.
  SocialNetworkSetting:
    type: object
    properties:
      active:
        type: boolean
        description: Whether the social platform is active for this customer.
      socialNetworkId:
        type: string
        description: The social platform id.
      clientId:
        type: string
        description: The OAuth client_id of the customer for this social platform.
  CalendarListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/CalendarResource"
        type: array
        description: The list of calendars.
  DocumentList:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: The list of returned items.
  GeoPtMessage:
    required:
    - lat
    - lon
    type: object
    properties:
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double
  TagsPredictionResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/TagPrediction"
        type: array
        description: The predicted tags.
  CommunityRequestStatusRequest:
    required:
    - uid
    type: object
    properties:
      uid:
        type: string
        description: The unique identifier.
      adminMessage:
        type: string
        description: A message of user who validate/reject the request
  ContentAndMediaListResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          type: string
        type: array
        description: The list of returned items.
  ? UserProto_id_uid_url_profileId_loginId_email_firstName_lastName_lang_langs_properties_subscriptions_isSuperAdmin_apiProfile_customer_employeeId_synchronized_devices_changePasswordAtNextLogin_status_accountType_instancesSuperAdmin_identityProvider_directoryFavorites_hiddenDirectoryFavorites_createdAt_updatedAt_customProfile_emailNotifications_profilePicture_isHidden_alternateEmail_lastSynchronization_expirationDate_profileStatus_externalDirectoryUrl_settings_unreadNotificationCount_profilePictureUrl_tutorials_gamification_fullName_isGod_isDesigner_loginProvider_socialAdvocacyRoles_socialAdvocacyPermissions_socialNetworkAccesses_canAccessSA_password_rePassword_identityProvider
  : type: object
    properties:
      status:
        default: enabled
        type: string
        description: "The status of the user.    <br>  \n    Acceptable values are:
          \   <br>  \n     - \"ENABLED\": The user account is still live. (default)
          \   <br>  \n     - \"DISABLED\": The user account has been deactivated."
      uid:
        type: string
      synchronized:
        type: boolean
        description: 'Whether the user is synchronized. (Default: false)'
      unreadNotificationCount:
        type: integer
        description: "*deprecated* The count of unread notifications."
        format: int32
      loginProvider:
        type: string
        description: The provider type used to login the user.
      expirationDate:
        type: string
        description: The date after which this account will be automatically disabled
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      identityProvider:
        type: string
        description: 'The provider with used to create the user. (Format: uuid)'
      customProfile:
        type: string
        description: 'The custom profile of the user. (Format: JSON object)'
      employeeId:
        type: string
        description: The ID of the user in the company.
      apiProfile:
        type: string
        description: 'The API profile of the user. (Format: JSON object)'
      socialAdvocacyRoles:
        items:
          type: string
        type: array
        description: The user's roles for social advocacy.
      gamification:
        description: The gamification profile of the user
        "$ref": "#/definitions/UserGamification"
      tutorials:
        type: string
        description: 'List of tutorials. (Format: JSON object)'
      isDesigner:
        type: boolean
      socialNetworkAccesses:
        items:
          "$ref": "#/definitions/SocialNetworkAccess"
        type: array
        description: The platform social access (i.e. linkedin).
      profilePictureUrl:
        type: string
      isHidden:
        type: boolean
        description: 'Whether the user is hidden. (Default: false)'
      email:
        type: string
        description: The email address of the user.
      loginId:
        type: string
        description: The ID use for the login (email for GS, upn for MS, ...).
      socialAdvocacyPermissions:
        items:
          type: string
        type: array
        description: The user's permissions for social advocacy.
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      instancesSuperAdmin:
        items:
          type: string
        type: array
        description: The list of instances in which the user is an administrator.
      emailNotifications:
        description: "*deprecated* The list of email notifications."
        "$ref": "#/definitions/UserEmailNotification"
      subscriptions:
        items:
          "$ref": "#/definitions/UserSubscription"
        type: array
        description: The list of user subscriptions.
      profileStatus:
        type: string
        description: Profile status for the user
      isSuperAdmin:
        type: boolean
        description: 'Whether the user is an administrator. (Default: false)'
      lastSynchronization:
        type: string
        description: 'The date when the user has been synchronized for the last time.
          (Format: UTC date-time)'
      profilePicture:
        type: string
        description: The profile picture of the user.
      accountType:
        type: string
        description: "The type of the user account.    <br>  \n        Acceptable
          values are:    <br>  \n         - \"EXTERNAL\": External account.    <br>
          \ \n         - \"GOOGLE\": Google account."
      langs:
        items:
          type: string
        type: array
        description: "The list of languages. (Format: xx)    <br>  \n    Acceptable
          values are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\":
          English    <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French
          \   <br>  \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>
          \ \n     - \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n
          \    - \"tr\": Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     -
          \"sv\": Swedish    <br>  \n     - \"de\": German    <br>  \n     - \"ru\":
          Russian    <br>  \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\":
          Brazilian Portuguese"
      fullName:
        type: string
      password:
        type: string
        description: The password of the user.
      properties:
        type: string
        description: 'The properties of the user. (Format: JSON object)'
      customer:
        type: string
        description: The customer of the user.
      hiddenDirectoryFavorites:
        items:
          type: string
        type: array
        description: "*deprecated* The list of hidden favorite directories."
      firstName:
        type: string
        description: The first name of the user.
      settings:
        description: General settings for this user
        "$ref": "#/definitions/UserSettings"
      alternateEmail:
        type: string
        description: The alternative email of the user.
      lastName:
        type: string
        description: The last name of the user.
      devices:
        items:
          "$ref": "#/definitions/Device"
        type: array
        description: The list of devices.
      changePasswordAtNextLogin:
        type: boolean
        description: 'Whether the user needs to change his password during his next
          login. (Default: false)'
      externalDirectoryUrl:
        type: string
      rePassword:
        type: string
      isGod:
        type: boolean
      url:
        type: string
      profileId:
        type: string
        description: The ID of the profile.
      directoryFavorites:
        items:
          type: string
        type: array
        description: "*deprecated* The list of favorite directories."
      canAccessSA:
        type: boolean
  Course:
    required:
    - name
    type: object
    properties:
      updateTime:
        type: string
        description: Time of the most recent update to this course.
      description:
        type: string
        description: Optional description.
      alternateLink:
        type: string
        description: Absolute link to this course in the Classroom web UI.
      creationTime:
        type: string
        description: Creation time of the course.
      section:
        type: string
        description: Section of the course.
      guardiansEnabled:
        type: boolean
        description: Whether or not guardian notifications are enabled for this course.
      courseGroupEmail:
        type: string
        description: The email address of a Google group containing all members of
          the course.
      teacherGroupEmail:
        type: string
        description: The email address of a Google group containing all teachers of
          the course.
      courseMaterialSets:
        description: Information about a Drive Folder that is shared with all teachers
          of the course.
        "$ref": "#/definitions/CourseMaterialSet"
      ownerId:
        type: string
        description: The identifier of the owner of a course.
      calendarId:
        type: string
        description: |-
          The Calendar ID for a calendar that all course members can see, to which Classroom adds
                                    events for course work and announcements in the course.
      room:
        type: string
        description: Optional room location.
      teacherFolder:
        description: Information about a Drive Folder that is shared with all teachers
          of the course.
        "$ref": "#/definitions/TeacherFolder"
      enrollmentCode:
        type: string
        description: Enrollment code to use when joining this course.
      courseState:
        type: string
        description: State of the course.
      id:
        type: string
        description: Identifier for this course assigned by Classroom.
      descriptionHeading:
        type: string
        description: Optional heading for the description.
      name:
        type: string
        description: Name of the course.
  CropInfo:
    type: object
    properties:
      rotate:
        type: number
        format: double
      scaleX:
        type: number
        format: double
      scaleY:
        type: number
        format: double
      height:
        type: integer
        format: int32
      width:
        type: integer
        format: int32
      "y":
        type: integer
        format: int32
      x:
        type: integer
        format: int32
  Tag:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      kind:
        type: string
        description: 'The kind of tag.    <br>           Acceptable values are:    <br>            -
          "MEDIA": A media tag.    <br>            - "COMMUNITY": A community tag.'
      name:
        type: string
        description: The name of the tag.
      functionalInnerId:
        type: string
        description: A code to describe the object.
      instance:
        type: string
        description: The ID of the instance.
      properties:
        type: string
        description: 'The properties of the tags. (Format: JSON object)'
      uid:
        type: string
  RoleListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Role"
        type: array
        description: The list of returned items.
  CalendarEventListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/EventResource"
        type: array
        description: The list of events.
  Stats:
    type: object
    properties:
      comment:
        type: boolean
        description: Whether comment statistics are available on this social platform.
      reaction:
        type: boolean
        description: Whether reaction statistics are available on this social platform.
  CustomerSamlProvider:
    type: object
    properties:
      logo:
        description: The SAML logo.
        "$ref": "#/definitions/SamlLogo"
      buttonColor:
        type: string
        description: Color of the SAML provider.
      id:
        type: string
      name:
        type: string
        description: Name of the SAML provider.
  CustomerListResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Customer"
        type: array
        description: The list of returned items.
  DriveListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/DriveFileResource"
        type: array
        description: The list of returned items.
  Interest:
    required:
    - customContentType
    type: object
    properties:
      uid:
        type: string
      instanceId:
        type: string
        description: The ID for an instance on which the objects are attached.
      orMetadataDetails:
        items:
          "$ref": "#/definitions/Metadata"
        type: array
      userId:
        type: string
        description: The user owning the interest
      customerId:
        type: string
        description: The ID for a customer on which the objects are attached.
      orMetadata:
        items:
          type: string
        type: array
        description: The metadata that the user is interested in
      customContentTypeTagsDetails:
        items:
          "$ref": "#/definitions/CustomContentTypeTag"
        type: array
      notify:
        type: boolean
        description: Enable notifications when new activity matches this interest
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content types
      customContentType:
        type: string
        description: The content type that the user is interested in
      customContentTypeDetails:
        "$ref": "#/definitions/CustomContentType"
  NotificationGroupResource:
    type: object
    properties:
      notification:
        description: The user notification.
        "$ref": "#/definitions/Notification"
      digest:
        type: string
        description: The notification group hash.
      actions:
        items:
          "$ref": "#/definitions/NotificationAction"
        type: array
        description: The list of notification actions.
  Form:
    type: object
    properties:
      thumbnailUrl:
        type: string
        description: URL of a thumbnail image of the Form.
      formUrl:
        type: string
        description: URL of the form.
      responseUrl:
        type: string
        description: URL of the form responses document.
      title:
        type: string
        description: Title of the Form.
  MetricRequest:
    type: object
    properties:
      kind:
        type: string
        description: The kind of the metric.
      interval:
        type: string
        description: The interval of the metric being logged.
      valueType:
        type: string
        description: The type of the value of the points added to the metric.
      labels:
        type: string
        description: The labels associated with the metric.
      value:
        type: string
        description: The value to log in the metric.
      path:
        type: string
        description: The path of the metric to write.
  DocumentUploadResponse:
    required:
    - httpMethod
    - uploadUrl
    type: object
    properties:
      mediaId:
        type: string
        description: The Media ID
      headers:
        type: string
        description: The headers to use when sending the file
      callId:
        type: string
        description: The ID of the call.
      formDataField:
        type: string
        description: The name of the formdata field where the file is written, or
          None if the request do not use the formdata protocol
      uploadUrl:
        type: string
        description: The url where to upload the file chunks
      httpMethod:
        type: string
        description: 'The http method to use when sending the file, (possible: PUT,
          POST, GET)'
  Link:
    type: object
    properties:
      url:
        type: string
        description: URL to link to.
      thumbnailUrl:
        type: string
        description: URL of a thumbnail image of the YouTube video.
      title:
        type: string
        description: Title of the target of the URL.
  PostUnshareRequest:
    required:
    - postId
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      postId:
        type: string
        description: The ID of the post to unshare.
      removeFromCommunities:
        items:
          type: string
        type: array
        description: The list of IDs of the communities from which to unshare the
          post.
  SendNewsletterRequest:
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      callId:
        type: string
        description: The ID of the call.
      html:
        type: string
        description: The HTML content to send.
      toTesters:
        type: boolean
        description: Whether to send to newsletter to testers.
      newsletterId:
        type: string
        description: The ID of the newsletter to send.
  FeedListRequest:
    type: object
    properties:
      exceptFeeds:
        items:
          type: string
        type: array
        description: A list of Feed ID to exclude from results.
      herited:
        default: true
        type: boolean
        description: Whether to list feeds from a parent instance.
      instance:
        type: string
        description: The ID of the instance.
      callId:
        type: string
        description: The ID of the call.
      maxResults:
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      hasGroup:
        type: boolean
        description: Whether to list feeds synchronized with Google Group.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      query:
        type: string
        description: The query used to filter the result.
      type:
        type: string
        description: The type of the feeds to list.
      restrictToFeeds:
        items:
          type: string
        type: array
        description: Restrict results within a list of Feed ID.
  FileSystemItemsListRequest:
    required:
    - lang
    type: object
    properties:
      mimeType:
        items:
          type: string
        type: array
        description: The list of MIME types.
      query:
        type: string
        description: The query used to filter the result.
      recursive:
        type: boolean
        description: Whether show fsitem recursively.
      callId:
        type: string
        description: The ID of the call.
      instance:
        items:
          type: string
        type: array
        description: The ID of the instance.
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      type:
        items:
          type: string
        type: array
        description: The list of media types.
      queryType:
        type: string
        description: The type of query.
      trashed:
        type: boolean
        description: Whether look in trash or not.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      tags:
        items:
          type: string
        type: array
        description: The list of tags.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      parentFolder:
        type: string
        description: The parent folder ID.
      currentInstance:
        type: string
        description: The ID of the current instance.
      customer:
        type: string
        description: The ID of the customer.
      kind:
        type: string
        description: The kind of the entity.
      name:
        type: string
        description: The name of the media used to filter the list.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      attached:
        type: boolean
        description: 'Whether the media is attached to a content. (Default: false)'
      ids:
        items:
          type: string
        type: array
        description: The list of media IDs.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      ext:
        type: string
        description: The file extension used to filter the list.
      contentKey:
        type: string
        description: The ID of the content that contains the media.
  EmptyTrashRequest:
    required:
    - docPath
    type: object
    properties:
      docPath:
        type: string
        description: The docPath of the trash
  DatastoreKeyWithErrorList:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      errors:
        items:
          "$ref": "#/definitions/DatastoreKeyErrorReason"
        type: array
        description: A list of errors
      uid:
        items:
          type: string
        type: array
        description: The list of unique identifiers.
  CloudSearchUserAPIProfile:
    type: object
    properties:
      organizations:
        items:
          "$ref": "#/definitions/CloudSearchUserOrganization"
        type: array
        description: "*beta* The user organizations."
      primaryEmail:
        type: string
        description: "*beta* The user email address."
      phones:
        items:
          "$ref": "#/definitions/CloudSearchUserPhone"
        type: array
        description: "*beta* The user phone numbers."
  UserSyncException:
    type: object
    properties:
      field:
        type: string
        description: The provider’s user API profile field we want to filter on.
      valueType:
        type: string
        description: The type of the value of the provider’s user API field we want
          to filter on.
      value:
        type: string
        description: The value of the provider’s user API field we want to filter
          on.
  Owner:
    type: object
    properties:
      photos:
        items:
          "$ref": "#/definitions/CloudSearchPhoto"
        type: array
        description: The photos of the owners.
      emailAddresses:
        items:
          "$ref": "#/definitions/EmailAddress"
        type: array
        description: The email addresses of the owners.
      personNames:
        items:
          "$ref": "#/definitions/PersonName"
        type: array
        description: The names of the owners.
  Style:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      name:
        type: string
        description: The name of the style.
      updatedBy:
        type: string
        description: The last user who updated this object.
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      properties:
        type: string
        description: 'The properties of the style. (Format: JSON object)'
      stylesheets:
        items:
          "$ref": "#/definitions/ResourceFile"
        type: array
        description: The list of stylesheets of the style.
      instance:
        type: string
        description: The ID of the instance.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      createdBy:
        type: string
        description: The user who created the object.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      type:
        type: string
        description: "The type of the style.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"widget\"    <br>  \n         - \"header\"    <br>
          \ \n         - \"theme\"    <br>  \n         - \"global\"    <br>  \n         -
          \"parent\"    <br>"
      id:
        type: string
      isDefault:
        type: boolean
        description: 'Whether the style is the default one for its type. (Default:
          false)'
      uid:
        type: string
  Instance:
    type: object
    properties:
      googleAnalytics:
        type: string
        description: 'A Google Analytics tag. (Format: UA-xxxxxxxx-x)'
      subtitle:
        type: string
        description: 'The subtitle of the instance. (Format: JSON object)'
      uid:
        type: string
      defaultContentLists:
        type: string
        description: The default content lists. Keys are content types and values
          are content lists.
      favicon:
        type: string
        description: The favicon of the instance.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      logo:
        items:
          "$ref": "#/definitions/InstanceLogo"
        type: array
        description: The list of instance logos.
      homePage:
        type: string
        description: The home page.
      isInFavoriteFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds for which the entry is in favorite. Deprecated.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      style:
        type: string
        description: The style of the instance.
      googleTagManager:
        type: string
        description: 'A Google Tag Manager tag. (Format: GTM-xxxxxx)'
      title:
        type: string
        description: The title of the instance.
      markedAsFavorite:
        type: boolean
        description: Whether this is a favorite of the user requesting for it.
      id:
        type: string
      theme:
        type: string
        description: The theme of the instance.
      defaultLang:
        type: string
        description: The default lang used as a fallback if no translation is available
          for the user.
      override:
        type: string
        description: The override of the instance.
      menuType:
        type: string
        description: The type of menu.
      customStylesheet:
        type: string
        description: The custom style sheet of the instance.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      head:
        type: string
        description: The head (HTML) of the instance.
      description:
        type: string
        description: The description of the instance.
      parent:
        type: string
        description: The parent of the instance.
      isDefaultInstance:
        type: boolean
      defaultHeader:
        type: string
        description: The default header.
      createdBy:
        type: string
        description: The user who created the object.
      scripts:
        items:
          "$ref": "#/definitions/ResourceFile"
        type: array
        description: The list of custom scripts.
      langs:
        items:
          type: string
        type: array
        description: "The list of languages. (Format: xx)    <br>  \n    Acceptable
          values are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\":
          English    <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French
          \   <br>  \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>
          \ \n     - \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n
          \    - \"tr\": Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     -
          \"sv\": Swedish    <br>  \n     - \"de\": German    <br>  \n     - \"ru\":
          Russian    <br>  \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\":
          Brazilian Portuguese"
      configuration:
        type: string
        description: The configuration of the instance.
      properties:
        type: string
        description: 'The properties of the instance. (Format: JSON object)'
      customer:
        type: string
        description: The ID of the customer.
      deviceTheme:
        type: string
        description: The theme of the device.
      name:
        type: string
        description: The name of the instance.
      defaultUserDirectory:
        type: string
        description: The default user directory.
      slug:
        type: string
        description: The short text used in the URL used to access the instance.
      footer:
        type: string
        description: The footer of the instance.
      siblingCredentials:
        description: How the instance can interact with other instances.
        "$ref": "#/definitions/InstanceSiblingCredentials"
      hosts:
        items:
          type: string
        type: array
        description: The list of host names of the instance.
      deletableFromFavorite:
        type: boolean
        description: Whether the entry can be removed from favorites. Deprecated.
      logoUrl:
        type: string
        description: 'The URL of the logo. (Format: JSON object)'
      restrictToFeeds:
        items:
          type: string
        type: array
        description: The list of feeds able to access the instance.
      publicContentAuthorized:
        type: boolean
        description: 'Whether public contents are authorized. (Default: true)'
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata.
  LanguageDetectionRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      text:
        type: string
        description: The text for which the language shall be detected.
  UserProto_lang_langs_properties_showTutorial_tutorials_emailNotifications_rePassword_currentPassword_alternateEmail_settings:
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      emailNotifications:
        description: "*deprecated* The list of email notifications."
        "$ref": "#/definitions/UserEmailNotification"
      settings:
        description: General settings for this user
        "$ref": "#/definitions/UserSettings"
      alternateEmail:
        type: string
        description: The alternative email of the user.
      showTutorial:
        type: boolean
        description: 'Whether the tutorial is shown to the user. (Default: true)'
      rePassword:
        type: string
      currentPassword:
        type: string
      tutorials:
        type: string
        description: 'List of tutorials. (Format: JSON object)'
      langs:
        items:
          type: string
        type: array
        description: "The list of languages. (Format: xx)    <br>  \n    Acceptable
          values are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\":
          English    <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French
          \   <br>  \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>
          \ \n     - \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n
          \    - \"tr\": Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     -
          \"sv\": Swedish    <br>  \n     - \"de\": German    <br>  \n     - \"ru\":
          Russian    <br>  \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\":
          Brazilian Portuguese"
      properties:
        type: string
        description: 'The properties of the user. (Format: JSON object)'
  CloudSearchPostScore:
    type: object
    properties:
      total:
        type: string
        description: The total of the post votes.
      votesDown:
        type: string
        description: The post downvotes.
      votesUp:
        type: string
        description: The post upvotes.
  CourseListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Course"
        type: array
        description: The list of returned items.
  UpdateRequest:
    required:
    - groupIdentifier
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      groupVisibility:
        type: string
        description: The group visibility. It can be public, private or hidden. Only
          relevant for Microsoft.
      groupIdentifier:
        type: string
        description: The group identifier (email or ID for example).
  TemplateListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      errors:
        items:
          "$ref": "#/definitions/ErrorReason"
        type: array
        description: The list of errors and their relative target.
      items:
        items:
          "$ref": "#/definitions/Template"
        type: array
        description: The list of returned items.
  EmailSendRequest:
    required:
    - body
    - contentId
    - widgetId
    type: object
    properties:
      body:
        type: string
        description: The body of the email.
      captcha:
        type: string
        description: The captcha result. (Required is the call is anonymous)
      subject:
        type: string
        description: The subject of the email.
      widgetId:
        type: string
        description: The widget used to send the email.
      contentId:
        type: string
        description: The id of the content containing the widget.
  CloudSearchDateValue:
    type: object
    properties:
      year:
        type: string
        description: "*beta* The year."
      day:
        type: string
        description: "*beta* The day."
      month:
        type: string
        description: "*beta* The month."
  DriveFolder:
    type: object
    properties:
      driveId:
        type: string
        description: "*deprecated* The Drive id"
      kind:
        default: drive#file
        type: string
        description: The folder kind (Drive or Team Drive)
      name:
        type: string
        description: The folder name
      webUrl:
        type: string
        description: The web url of folder
      docPath:
        type: string
      source:
        type: string
        description: 'The Drive source (ex: onedrive)'
      providerId:
        type: string
        description: The id of the Drive provider
      folderId:
        type: string
        description: The Drive folder id
  Slide:
    type: object
    properties:
      uid:
        type: string
      title:
        type: string
        description: The title of the slide.
      text:
        type: string
        description: The text of the slide.
      image:
        type: string
        description: The image of the slide.
      servingUrl:
        type: string
      position:
        type: string
        description: The position of the slide in the tutorial.
        format: int64
      id:
        type: string
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
  CommentAndChild:
    required:
    - comment
    type: object
    properties:
      comment:
        description: The comment.
        "$ref": "#/definitions/Comment"
      firstChild:
        description: The first child of the comment, if any.
        "$ref": "#/definitions/Comment"
  StyleListResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Style"
        type: array
        description: The list of returned items.
  WebhookPreferenceResponse:
    type: object
    properties:
      hook:
        type: string
        description: Webhook id.
      notify:
        type: boolean
        description: Whether the user will be notified or not.
  FeedCollection:
    type: object
    properties:
      nextPageToken:
        type: string
      items:
        items:
          "$ref": "#/definitions/Feed"
        type: array
  DirectoryEntryListRequest:
    type: object
    properties:
      isMandatory:
        type: boolean
        description: 'Whether the entries are mandatory. (Default: true)'
      includeUserEntries:
        default: true
        type: boolean
        description: 'Whether the list includes user specific entries. (Default: true)'
      displaySortMandatory:
        default: true
        type: boolean
        description: 'Whether the list must be sorted. (Default: true)'
      query:
        type: string
        description: The query used to filter the result.
      combinedMetadata:
        items:
          "$ref": "#/definitions/MetadataClauses"
        type: array
        description: The list of metadata lists.
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      callId:
        type: string
        description: The ID of the call.
      userFavoritesOnly:
        type: boolean
        description: Limit the response to the entries that the user has marked as
          favorite.
      instance:
        items:
          type: string
        type: array
        description: The ID of the instance.
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      queryType:
        type: string
        description: The type of query.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata required for a model to be part of the result.
      status:
        default: LIVE
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      tags:
        items:
          type: string
        type: array
        description: The list of tags used to filter the list.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      currentInstance:
        type: string
        description: The ID of the current instance.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      ids:
        items:
          type: string
        type: array
        description: The list of IDs used to filter the list.
      excludeIds:
        items:
          type: string
        type: array
        description: The list of IDs to exclude from the list.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      orMetadata:
        items:
          type: string
        type: array
        description: The list of metadata in which a model needs to have at least
          one of them to be part of the result.
      directory:
        items:
          type: string
        type: array
        description: The list of directories used to filter the list.
  ContentMenuListItem:
    required:
    - hidden
    - hideChildren
    - isNavItem
    - uuid
    type: object
    properties:
      properties:
        type: string
        description: 'The properties of the menu item. (Format: JSON object)'
      uid:
        type: string
      title:
        type: string
        description: 'The title of the content. (Format: JSON object)'
      color:
        type: string
        description: The color of the menu item.
      newTab:
        type: boolean
        description: 'Whether the content will be opened in a new tab. (Default: False)'
      slugFull:
        type: string
        description: 'The short text used in the URL used to access the content. (Format:
          JSON object)'
      parentUuid:
        type: string
        description: 'The universally unique identifier of the parent of the content.
          (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      menuTitle:
        type: string
        description: The title of the menu item.
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      id:
        type: string
      deleted:
        type: boolean
        description: 'Whether the content is deleted. (Default: false)'
      isNavItem:
        type: boolean
        description: 'Whether the content is a navigation item. (Default: false)'
      link:
        type: string
        description: 'The link of the content. (Format: JSON object)'
      sortOrder:
        type: integer
        description: "The sort order defined by the property name used to sort.    <br>
          \ \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        format: int32
      parentId:
        type: string
        description: The ID of the parent menu item.
      hideChildren:
        type: boolean
        description: 'Whether the children of content are hidden. (Default: false)'
      hidden:
        type: boolean
        description: 'Whether the content is hidden. (Default: false)'
      type:
        type: string
        description: The type of the content.
      children:
        items:
          type: string
        type: array
        description: 'The children menu items. (Format: JSON object)'
      icon:
        type: string
        description: The icon of the menu item.
  CustomField:
    type: object
    properties:
      layout:
        type: string
        description: "*beta* The layout of the field (OneColumn, TwoColumn)."
      name:
        type: string
        description: "*beta* The name of this field."
      enabled:
        type: boolean
        description: "*beta* Whether this field has been enabled by the administrator."
      localizedName:
        type: string
        description: "*beta* The localized human-readable name of the field."
      path:
        type: string
        description: "*beta* The path of the field."
      order:
        type: string
        description: "*beta* The order of the field."
      icon:
        type: string
        description: "*beta* The icon associated to the source."
  SubscriptionUsersListResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/User"
        type: array
        description: The list of returned items.
  Media:
    type: object
    properties:
      uid:
        type: string
      communityKey:
        type: string
        description: ONLY for media which comes from Storage, the ID of the community
          that contains the media.
      isFolder:
        type: boolean
        description: The isFolder of the Document.
      customContentTypeKey:
        type: string
        description: "The custom type of the content that contains the media.    <br>
          \ \n        This is only applicable if the media is linked to a content
          with a custom content type."
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      isStarred:
        type: boolean
        description: The isStarred of the Document.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      content:
        items:
          "$ref": "#/definitions/MediaFile"
        type: array
        description: The list of contents.
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      author:
        type: string
        description: The author of the item.
      docPath:
        type: string
      instance:
        type: string
        description: The ID of the instance.
      override:
        type: string
        description: 'The overridden properties of the media. (Format: JSON object)'
      parentFolderId:
        type: string
        description: The parentFolderId of the Document.
      trashed:
        type: boolean
        description: whether this media has been sent to trash.
      isShared:
        type: boolean
        description: The isShared of the Document.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      contentType:
        type: string
        description: The type of the content that contains the media.
      description:
        type: string
        description: 'The description of the item. (Format: JSON object)'
      tags:
        items:
          type: string
        type: array
        description: The list of tags.
      croppedContent:
        items:
          "$ref": "#/definitions/MediaFile"
        type: array
        description: A list of cropped contents.
      hasCroppedContent:
        type: boolean
        description: Whether the media has cropped content. (read-only)
      parentFolder:
        type: string
        description: the id of the parent folder. None means 'root'.
      path:
        items:
          "$ref": "#/definitions/PathDescriptor"
        type: array
        description: The list of folder describing the path of the folder.
      properties:
        type: string
        description: 'The properties of the media. (Format: JSON object)'
      customer:
        type: string
        description: The ID of the customer.
      name:
        type: string
        description: 'The name of the item. (Format: JSON object)'
      canDelete:
        type: boolean
      thumbnail:
        type: string
        description: 'The thumbnail of the media. (Format: JSON object)'
      providerId:
        type: string
        description: The providerId of the Document.
      source:
        type: string
        description: The source of the media (drive, local...).
      canEdit:
        type: boolean
      contentKey:
        type: string
        description: The ID of the content that contains the media.
  SearchDirectoryResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Directory"
        type: array
        description: The list of returned items.
  Snippet:
    type: object
    properties:
      snippet:
        type: string
        description: "*beta* The excerpt of the document that matches the query string."
      fullName:
        type: string
        description: "*beta* The name of the user that matches the query string."
      matchRanges:
        items:
          "$ref": "#/definitions/MatchRanges"
        type: array
        description: "*beta* The start and end indexes where the query string has
          been found."
      title:
        type: string
        description: "*beta* The title of the document that matches the query string."
  FeedListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Feed"
        type: array
        description: The list of returned items.
  CloudSearchDateValues:
    type: object
    properties:
      values:
        items:
          "$ref": "#/definitions/CloudSearchDateValue"
        type: array
        description: "*beta* The values of the field."
  DriveFileResource:
    type: object
    properties:
      mimeType:
        type: string
        description: The MIME type of the file.
      lastUpdate:
        type: string
        description: Last time this file was modified by anyone (formatted RFC 3339
          timestamp).
      embedLink:
        type: string
        description: A link for embedding the file (Not yet implemented).
      ownersName:
        items:
          type: string
        type: array
        description: The owner(s) name of this file.
      thumbnailLink:
        type: string
        description: |-
          A short-lived link to the file's thumbnail.
                                       Typically lasts on the order of hours (Not yet implemented).
      title:
        type: string
        description: The title of the file.
      isFolder:
        type: boolean
        description: Whether the file is a folder.
      videoMediaMetadata:
        type: string
        description: The metadata about video media (only for video files).
      webContentLink:
        type: string
        description: |-
          A link for downloading the content of the file
                                        in a browser using cookie based authentication.
      link:
        type: string
        description: A link for opening the file in a relevant Google editor or viewer.
      fileSize:
        type: string
        description: |-
          The size of the file in bytes.
                                                              This field is only populated for files with content stored in Drive;
                                                              it is not populated for Google Docs or shortcut files
                                                              (Not yet implemented).
      lastModifyingUserName:
        type: string
        description: Name of the last user to modify this file.
      role:
        type: string
        description: The role for the authenticated user on this file.
      id:
        type: string
        description: The ID of the file.
  CustomerIdentityProvider:
    type: object
    properties:
      domain:
        type: string
        description: The domain name associated to the remote provider.
      federateUserOnEmployeeId:
        type: boolean
        description: During the sync, users will be federate on the employeeId field
      customerKey:
        type: string
        description: The ID of the customer model.
      samlUniqueRef:
        type: string
        description: The SAML unique reference.
      ssoEnabled:
        type: boolean
        description: Is SSO activated on this provider
      useBookmarks:
        type: boolean
        description: Show provider apps in the launcher
      userSyncException:
        description: The exception on user synchronization
        "$ref": "#/definitions/UserSyncException"
      samlEntityUrl:
        type: string
        description: The SAML consumer URL.
      logo:
        description: The Identity Provider Logo.
        "$ref": "#/definitions/SamlLogo"
      id:
        type: string
      uid:
        type: string
      synchronized:
        default: true
        type: boolean
        description: 'Whether the user synchronization with this provider is enabled.
          (Default: true)'
      synchronizedAt:
        type: string
        description: 'The last synchronization date. (Format: UTC date-time)'
      loginDomain:
        type: string
        description: The domain name associated to login domain (in case the login
          domain is different from the service domain.
      oauthClientId:
        type: string
        description: The oauth client id.
      autoRedirect:
        type: boolean
        description: Whether this idp should be used to automatically connect the
          user
      customerId:
        type: string
        description: The ID of the customer in remote provider.
      type:
        type: string
        description: Type of user provider
      allowJitUserCreation:
        type: boolean
        description: Allows LumApps to create a user during the login work-flow if
          the user is not created
      nbUsers:
        type: integer
        description: The number of users managed by this provider.
        format: int32
      buttonColor:
        type: string
        description: The SAML color.
      hasProvisioning:
        default: true
        type: boolean
        description: Allows provisioning for this provider
      hasRedirectionToProvider:
        type: boolean
        description: Allows SAML to redirect to Provider (Microsoft and Google are
          supported)
      hasLogin:
        default: true
        type: boolean
        description: Allows login for this provider
      samlIdpXmlFile:
        description: The SAML IDP XML file.
        "$ref": "#/definitions/SamlIdpXmlFile"
      hasAuthenticationAtEachLogin:
        type: boolean
        description: Allows LumApps to ask a new MS token each user login
      account:
        type: string
        description: The email of the technical account used to make requests to remote
          provider.
      name:
        type: string
        description: The display name of the identity provider.
      scimType:
        type: string
        description: SCIM provider type
      uuid:
        type: string
        description: The unique identifier of the provider.
      order:
        type: integer
        description: The order position of provider.
        format: int32
      hideBasedOnUserProfile:
        type: boolean
        description: Whether we must hide the user if it is hidden on the provider
          side.
      synchronizationInProgress:
        type: boolean
        description: 'Whether this source of users is currently synchronizing. (Default:
          false, Read-only)'
      hasIntegrationOnly:
        type: boolean
        description: Allows provisioning only for already existing users
      oauthClientSecret:
        type: string
        description: The oauth client secret.
      useLoginHint:
        default: true
        type: boolean
        description: Allows to use the login hint for MS provider
  FavoriteListRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      owners:
        items:
          "$ref": "#/definitions/CompleteDatastoreKey"
        type: array
        description: 'The owners of the favorite. Can be a User or a Feed. (Default:
          the current user)'
      targetKind:
        type: string
        description: The target entity kind. Can be a DirectoryEntry or an Instance.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  ProviderCategory:
    type: object
    properties:
      canManage:
        type: boolean
        description: True if the user has permission to manage this category
      serializedProperties:
        type: string
        description: The serialized properties for this category
      rootPath:
        type: string
        description: The root path for the documents in this category
      properties:
        description: The properties for this category
        "$ref": "#/definitions/CategoryProperties"
      sortOrder:
        items:
          type: string
        type: array
        description: The sort order for this category
      canPick:
        type: boolean
        description: True if the user has permission to pick documents from this category
      searchTypes:
        items:
          type: string
          description: IMAGE <br> OTHER <br> FOLDER
        type: array
        description: 'The document type within the provider, (possible: FOLDER, OTHER,
          IMAGE)'
      id:
        type: string
        description: The provider category id
  InstanceLogo:
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      uid:
        type: string
      url:
        type: string
        description: The URL of the logo.
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      logo:
        type: string
        description: The logo.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  DriveFileIdRequest:
    type: object
    properties:
      kind:
        type: string
        description: Kind of Drive file
      fileId:
        type: string
        description: The ID of the file.
  GroupUserResource:
    type: object
    properties:
      id:
        type: string
        description: The group user ID
      userId:
        type: string
        description: The lumapps user ID
      email:
        type: string
        description: The group user email.
      groupUserType:
        type: string
        description: The group users type. It can be owners or members. Only relevant
          for Microsoft.
  NotificationListRequest:
    type: object
    properties:
      userId:
        type: string
        description: The ID of the user.
      functionalInnerId:
        type: string
        description: A code to describe the object.
      isRead:
        type: boolean
        description: Whether the notification have already been read.
      sortOrder:
        type: string
        description: "\"\n        The sortOrder of the list. (Format: (-)attribute)
          \  <br> \n        The only accepted attribute right now is 'priority'."
      parentId:
        type: string
        description: The notifications parentId.
      instanceIds:
        items:
          type: string
        type: array
        description: The list of instance identifiers.
  DatastoreKeyErrorReason:
    type: object
    properties:
      reason:
        type: string
        description: The error description.
      uid:
        type: string
        description: The unique identifier.
  CommunityRequest:
    required:
    - communityKey
    type: object
    properties:
      uid:
        type: string
      customerKey:
        type: string
        description: The ID of the customer.
      communityKey:
        type: string
        description: The ID of the community
      id:
        type: string
      userKey:
        type: string
        description: The ID of the user
      userDetails:
        type: string
      requestStatus:
        default: pending
        type: string
        description: The status of the request
      instanceKey:
        type: string
        description: The ID of the instance.
      adminMessage:
        type: string
        description: The message that admin set for the request
      userMessage:
        type: string
        description: The message that user set for the request
  EventResource:
    type: object
    properties:
      end:
        type: string
        description: The end date of the event.
      description:
        type: string
        description: The description of the event.
      colorId:
        type: string
        description: The color of the event.
      htmlLink:
        type: string
        description: The link to open the event in Google Calendar.
      location:
        type: string
        description: The location of the event.
      summary:
        type: string
        description: The summary of the event.
      start:
        type: string
        description: The start date of the event.
      calendarId:
        type: string
        description: The ID of the Google calendar of the event.
      isAllDay:
        type: boolean
        description: If the event is on all day
      attendees:
        items:
          type: string
        type: array
        description: The list of attendees of the event.
      id:
        type: string
        description: The API Id of the event.
      hangoutLink:
        type: string
        description: The link to launch the Google Hangout associated with the event.
  Community:
    type: object
    properties:
      canReadPosts:
        type: boolean
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      notificationsEnabled:
        type: boolean
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      communityType:
        type: string
        description: Type of community provider.
      userKeys:
        items:
          type: string
        type: array
        description: The list of user members of the community
      readers:
        items:
          type: string
        type: array
        description: The list of feeds being able to read the content.
      writer:
        type: string
        description: "*deprecated* The editor's email of the content."
      editors:
        items:
          type: string
        type: array
        description: The list of feeds being able to edit the content.
      createCalendar:
        type: boolean
      groupName:
        type: string
      thumbnailBlobkey:
        type: string
      usersDetails:
        items:
          "$ref": "#/definitions/User"
        type: array
      relevantCommentDetails:
        "$ref": "#/definitions/Comment"
      writerDetails:
        type: string
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content types.
      lastRevision:
        description: The last revision of the content.
        "$ref": "#/definitions/ContentLastRevision"
      isDefaultContentList:
        type: boolean
      feedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs.
      count:
        type: string
        format: int64
      canonicalUrl:
        type: string
      writerId:
        type: string
        description: The author of the content.
      updatedBy:
        type: string
        description: "*deprecated* The latest modifier's email."
      customContentTypeDetails:
        type: string
      thumbnail:
        type: string
        description: The thumbnail of the content.
      templates:
        items:
          "$ref": "#/definitions/Template"
        type: array
        description: The templates of the community.
      weight:
        type: number
        description: 'The weight of the content. Acceptable values are 0.0 to MAX_FLOAT,
          inclusive. (Default: 0.0)'
        format: double
      updatedByDetails:
        type: string
      isCustomizableLayout:
        type: boolean
        description: 'Whether the layout is customizable. (Default: false)'
      excerpt:
        type: string
      isDefaultUserDirectory:
        type: boolean
      reportDetails:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      fromTemplate:
        type: string
      comments:
        type: string
      driveFolder:
        description: The associated Drive folder *deprecated*
        "$ref": "#/definitions/DriveFolder"
      deleters:
        items:
          type: string
        type: array
        description: The list of feeds being able to delete the content.
      version:
        type: integer
        description: 'The version number of the content. Acceptable values are 0 to
          MAX_INT, inclusive. (Default: 0)'
        format: int32
      template:
        description: The template of the content.
        "$ref": "#/definitions/Template"
      public:
        type: boolean
        description: Whether the content is public.
      subscribedFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which members are automatically subscribed.
      metadata:
        items:
          type: string
        type: array
        description: The list of content metadata.
      postTypes:
        items:
          type: string
        type: array
        description: The posts types this community can have
      publishers:
        items:
          type: string
        type: array
        description: The list of feeds being able to publish the content.
      tags:
        items:
          type: string
        type: array
        description: The list of content tags.
      analyticsViewSum:
        type: integer
        description: The analytics view count.
        format: int32
      archivers:
        items:
          type: string
        type: array
        description: The list of feeds being able to archive the content.
      authorId:
        type: string
        description: The author of the content.
      adminKeys:
        items:
          type: string
        type: array
        description: The list of users who can manage the community
      tagz:
        items:
          "$ref": "#/definitions/Tagz"
        type: array
        description: The list of content tagz.
      groups:
        items:
          type: string
        type: array
        description: The Google Groups to include in the community
      properties:
        type: string
        description: 'The properties of the content. (Format: JSON object)'
      canRequestAccess:
        type: boolean
      tagsDetails:
        items:
          "$ref": "#/definitions/Tag"
        type: array
      canContribute:
        type: boolean
      featuredEndDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      title:
        type: string
        description: The title of the content.
      securedRepository:
        type: boolean
        description: Whether the media in the restricted community are serving with
          signed url
      parentCustomContentType:
        type: string
        description: The CustomContentTypeId of the parent with "heritable" set to
          true (only for "News" and "Page").
      parentsNavigation:
        items:
          "$ref": "#/definitions/ContentMenuList"
        type: array
        description: The list of parents in navigation.
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      liked:
        type: boolean
      subtitle:
        type: string
        description: The subtitle of the content.
      canReadDescription:
        type: boolean
      headerDetails:
        type: string
      hasRelevantComment:
        type: boolean
        description: Whether if this post has a relevant comment
      notifyFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs to notify.
      header:
        type: string
        description: The header of the content.
      likes:
        type: string
      featuredStartDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      privacy:
        default: restricted
        type: string
        description: The privacy level of the community
      isFeatured:
        type: boolean
        description: 'Whether the content is featured. (Default: false)'
      postStatuses:
        items:
          "$ref": "#/definitions/PostStatus"
        type: array
        description: Available custom statuses for posts of the community
      customContentType:
        type: string
        description: "The custom type of the content.    <br>  \n        This is only
          applicable if type is custom."
      notifyAuthor:
        type: boolean
        description: 'Whether the author has to be notified for any change. (Default:
          false)'
      type:
        type: string
        description: The type of the content.
      hasChat:
        type: boolean
        description: Whether this community has a Chat *deprecated
      hasCalendarId:
        type: boolean
        description: Whether this community has a Google Calendar *deprecated*
      authorDetails:
        type: string
      calendarIdpUuid:
        type: string
        description: The UUID of the calendar identity provider *deprecated*
      calendarId:
        type: string
        description: The ID of the associated calendar *deprecated*
      link:
        type: string
        description: The link of the content.
      updatedById:
        type: string
        description: The latest modifier.
      relevantComment:
        type: string
        description: The relevant comment for this post, if any
      groupId:
        type: string
      subscription:
        "$ref": "#/definitions/Subscription"
      customer:
        type: string
        description: The customer.
      calendarSettings:
        type: string
        description: The settings of the calendar widget
      hasDriveFolder:
        type: boolean
        description: Whether this community has a Google Drive folder *deprecated*
      adminsDetails:
        items:
          "$ref": "#/definitions/User"
        type: array
      shareable:
        type: boolean
        description: 'Whether the content is shareable externally (for future use,
          not available in the API). (Default: false)'
      following:
        type: boolean
      canEdit:
        type: boolean
      createTeamDrive:
        type: boolean
      uid:
        type: string
      isHomepage:
        type: boolean
      featuredFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which this content is promoted.
      hasCommentWidget:
        type: boolean
      publicationDate:
        type: string
        description: 'The publication date (Format: UTC date-time).'
      chat:
        description: The associated Chat *deprecated*
        "$ref": "#/definitions/Chat"
      useChat:
        type: boolean
      id:
        type: string
      author:
        type: string
        description: "*deprecated* The author's email of the content."
      chatProvider:
        type: string
      instance:
        type: string
        description: The instance.
      canMarkRelevant:
        type: boolean
      calendarIdpType:
        type: string
        description: The type of the calendar identity provider *deprecated*
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      description:
        type: string
        description: The description of the community
      userContent:
        "$ref": "#/definitions/UserContent"
      canFollow:
        type: boolean
      createDrive:
        type: boolean
      isNavItem:
        type: boolean
        description: Whether the content is a menu item. (Default:false)
      canPin:
        type: boolean
      isRequestPending:
        type: boolean
      slug:
        type: string
        description: The short text used in the URL used to access the content.
      communityFeedKey:
        type: string
        description: The feed created to manage associated Google services
      canDelete:
        type: boolean
      url:
        type: string
      navigation:
        items:
          "$ref": "#/definitions/ContentNavigation"
        type: array
        description: The list of content menu items.
      notifyUsers:
        type: boolean
        description: 'Whether users have to be notified for any change. (Default:
          false)'
      workspace:
        type: string
        description: The workspace used by the community handling drive/calendar/group
      mediaThumbnail:
        description: Media used as thumbnail of the content.
        "$ref": "#/definitions/Media"
  GlobalPermission:
    type: object
    properties:
      permission:
        type: string
        description: Type of this course work.
  CloudSearchArticle:
    type: object
    properties:
      status:
        type: string
        description: The status of article
      slug:
        type: string
        description: The localized human-readable name of article slug
      uid:
        type: string
        description: The uid of article
      instanceDetails:
        description: 'Instance details object : {id, name}'
        "$ref": "#/definitions/EntityDetails"
      metadataDetails:
        items:
          "$ref": "#/definitions/EntityDetails"
        type: array
        description: 'Metadatas details list object : [{id, name, parent: {id, name}}]'
      authorDetails:
        description: 'The author details object of article: {id, name}'
        "$ref": "#/definitions/CloudSearchUser"
      thumbnail:
        type: string
        description: The thumbnail of the article.
      comments:
        type: string
        description: The number of comments of article
      properties:
        items:
          "$ref": "#/definitions/CloudSearchArticleProperties"
        type: array
        description: The article properties.
      instance:
        type: string
        description: The instance id of article
      likes:
        type: string
        description: The number of likes of article
      url:
        type: string
        description: The url of article.
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The customContentTypeTags list of article
      type:
        type: string
        description: The type of article
      id:
        type: string
        description: The id of article
      customContentTypeDetails:
        description: The custom content type details of article
        "$ref": "#/definitions/EntityDetails"
      metadata:
        items:
          type: string
        type: array
        description: The metadata list of article
  AuthorizationAction:
    type: object
    properties:
      type:
        type: string
        description: The type of the action.
      customContentType:
        type: string
        description: The ID of the custom content type concerned by the role.
      name:
        type: string
        description: The name of the action.
  SetNotificationReadRequest:
    type: object
    properties:
      userId:
        type: string
        description: The user for which the notification needs to be marked as read.
      uid:
        type: string
        description: The unique identifier.
      functionalInnerId:
        type: string
        description: A code to describe the object.
  MarkAsFavoriteRequest:
    required:
    - target
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      owners:
        items:
          "$ref": "#/definitions/CompleteDatastoreKey"
        type: array
        description: 'The owners of the favorite. Can be a User or a Feed. (Default:
          the current user)'
      deletable:
        type: boolean
        description: Whether the favorite will be deletable.
      target:
        description: The target entity. Can be a DirectoryEntry or an Instance.
        "$ref": "#/definitions/CompleteDatastoreKey"
  CloudSearchQueryResponse:
    type: object
    properties:
      wCursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
          This should be set to the value of 'wCursor' from the previous response.
      queryInterpretation:
        description: How the query has been interpreted.
        "$ref": "#/definitions/QueryInterpretation"
      tabs:
        items:
          "$ref": "#/definitions/DataSourceDescription"
        type: array
        description: "*beta* The tabs to show."
      callId:
        type: string
        description: "*beta* The ID of the call."
      facets:
        items:
          "$ref": "#/definitions/CloudSearchFacetResult"
        type: array
        description: "*beta* The facets to display."
      spellResults:
        items:
          "$ref": "#/definitions/CloudSearchSpellResult"
        type: array
        description: "*beta* The spelling suggestions for the typed query string."
      sortOrders:
        items:
          "$ref": "#/definitions/CloudSearchSortOrder"
        type: array
        description: "*beta* The sort orders to display."
      cursor:
        type: string
        description: "*beta* \n    The cursor for continuing a previous request on
          the next page.\n    This should be set to the value of 'cursor' from the
          previous response."
      resultCountEstimate:
        type: string
        description: "*beta* The estimated number of results."
      items:
        items:
          "$ref": "#/definitions/CloudSearchSearchResult"
        type: array
        description: "*beta* The list of returned items."
      resultCountExact:
        type: string
        description: "*beta* The exact number of results."
      more:
        type: boolean
        description: "*beta* Whether there are more results."
  SubscriptionListResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Subscription"
        type: array
        description: The list of returned items.
  LeaderboardPoints:
    type: object
    properties:
      allTime:
        type: number
        description: The number of points for all time.
        format: double
      season:
        type: number
        description: The number of points for the current season.
        format: double
  SaveMetadataMultiRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/Metadata"
        type: array
        description: The list of returned items.
  CalendarResource:
    type: object
    properties:
      summary:
        type: string
        description: The summary of the calendar.
      description:
        type: string
        description: The description of the calendar.
      id:
        type: string
        description: The ID of the calendar.
  Widget:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      feedKeys:
        items:
          type: string
        type: array
        description: The list of feeds.
      style:
        type: string
        description: The style of the widget.
      description:
        type: string
        description: 'The description of the component. (Format: JSON object)'
      widgetType:
        type: string
        description: The type of the widget.
      title:
        type: string
        description: 'The title of the component. (Format: JSON object)'
      required:
        type: boolean
        description: 'Whether the widget is required. (Default: false)'
      enabled:
        type: boolean
        description: 'Whether the widget is enabled. (Default: false)'
      isGlobal:
        type: boolean
        description: 'Whether the widget is a global one. (Default: false)'
      properties:
        type: string
        description: 'The properties of the component. (Format: JSON object)'
      instance:
        type: string
        description: The ID of the instance.
      isOverride:
        type: boolean
        description: 'Whether the widget is overridden. (Default: false)'
      href:
        type: string
        description: The URL of the widget.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      isMainWidget:
        type: boolean
        description: 'Whether the widget is the main one. Useful for Image Gallery
          modules for example. (Default: false)'
      placeholder:
        type: string
        description: The placeholder of the component.
      id:
        type: string
      uid:
        type: string
  CommunityShareSearchRequest:
    required:
    - lang
    - postId
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      callId:
        type: string
        description: The ID of the call.
      maxResults:
        default: 20
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      followingOnly:
        type: boolean
        description: True to restrict the search to communities that the user follows.
      fields:
        type: string
        description: The fields to return in the response.
      query:
        type: string
        description: The query used to filter the result.
      postId:
        type: string
        description: The id of the post to share.
  FilterSelectedValues:
    type: object
    properties:
      selectedValues:
        items:
          type: string
        type: array
        description: The values that are filtered. A logical OR is applied between
          each value when filtering.
      filterId:
        type: string
        description: The field that is filtered.
  PostUnpinRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      communityId:
        type: string
        description: The ID of the community from which to unpin this post.
      uid:
        type: string
        description: The ID of the post to unpin.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  AddUsersRequest:
    required:
    - groupIdentifier
    type: object
    properties:
      usersIdentifiers:
        items:
          type: string
        type: array
        description: The list of users identifiers (email or ID for example).
      callId:
        type: string
        description: The ID of the call.
      groupUserType:
        type: string
        description: The group users type. It can me owners or members. Only relevant
          for Microsoft.
      groupIdentifier:
        type: string
        description: The group identifier (email or ID for example).
  ContributorAndManagerRights:
    type: object
    properties:
      restricted:
        type: string
        description: The users rights on the open community drive folder (can be read
          or write)
      readOnly:
        type: string
        description: The users rights on the open community drive folder (can be read
          or write)
      open:
        type: string
        description: The users rights on the open community drive folder (can be read
          or write)
  RewardMedia:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the element.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"DRAFT\": The model is a draft.    <br>  \n     -
          \"REFUSED\": The model has been rejected.    <br>  \n     - \"TO_VALIDATE\":
          The model is pending validation.    <br>  \n     - \"LIVE\": The model is
          validated.    <br>  \n     - \"ARCHIVE\": The model is archived.    <br>
          \ \n     - \"DELETED\": The model is deleted."
      uid:
        type: string
      pictureOnly:
        type: boolean
        description: Indicates if the reward is only using the picture
      color:
        type: string
        description: The reward media color.
      title:
        type: string
        description: 'The reward media title. (Format: JSON object)'
      url:
        type: string
        description: The reward media url.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      fontColor:
        type: string
        description: The reward font color
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      icon:
        type: string
        description: The reward media icon.
  BetaAddRequest:
    required:
    - uid
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      uid:
        type: string
        description: An id of a user to add.
  SaveContentMenuRequest:
    required:
    - customerId
    - instanceId
    type: object
    properties:
      deleted:
        items:
          "$ref": "#/definitions/ContentMenuDeletedListItem"
        type: array
        description: The list of deleted contents.
      instanceId:
        type: string
        description: The ID of the instance.
      customerId:
        type: string
        description: The ID of the customer.
      items:
        items:
          "$ref": "#/definitions/ContentMenuList"
        type: array
        description: The list of saved contents.
  GetAllUsersResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/GroupUserResource"
        type: array
        description: The list of the group's users emails.
  OtherUserGroupRights:
    type: object
    properties:
      groupName:
        type: string
        description: The external users group name
      readOnly:
        type: string
        description: The users rights on the open community drive folder (can be read
          or write)
      identifiers:
        type: string
        description: The list of external users to grant access to the communities
          drive folder stored as a string. It can be an email, an uuid or another
          string identifier.The values must be separated by a coma.
      open:
        type: string
        description: The users rights on the open community drive folder (can be read
          or write)
      uid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
  InstanceSiblingCredentials:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      uid:
        type: string
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      canViewParent:
        type: boolean
        description: 'Whether this instance can search in parent. (Default: false)'
      canViewSameLevel:
        type: boolean
        description: 'Whether this instance can search in siblings. (Default: false)'
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      canViewChildren:
        type: boolean
        description: 'Whether this instance can search in children. (Default: false)'
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  SaveTemplateMultiRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/Template"
        type: array
        description: The list of returned items.
  DocumentListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      unavailable:
        type: boolean
        description: True if user IDP doesn't match the media provider
      items:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: The list of returned items.
  SamlIdpXmlFile:
    type: object
    properties:
      url:
        type: string
        description: The serving url of the IDP XML file.
      name:
        type: string
        description: The name of the IDP XML file.
      file:
        type: string
        description: The IDP XML file BlobKey.
      size:
        type: string
        description: The size of the IDP XML file.
        format: int64
  DirectoryEntryProto_id_name_values_metadata_status_directory_thumbnail_createdAt_updatedAt_link_tags:
    required:
    - directory
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      name:
        type: string
        description: 'The name of the entry. (Format: JSON object)'
      tags:
        items:
          type: string
        type: array
        description: The list of tags.
      thumbnail:
        type: string
        description: The thumbnail of the entry.
      link:
        type: string
        description: 'The link of the entry. (Format: JSON object)'
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      directory:
        type: string
        description: The directory of the entry.
      values:
        type: string
        description: 'The value of the entry. (Format: JSON object)'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata.
  CloudSearchSuggestResponse:
    type: object
    properties:
      items:
        items:
          "$ref": "#/definitions/CloudSearchSuggestResult"
        type: array
        description: "*beta* The list of returned items."
  ParentDetails:
    type: object
    properties:
      uid:
        type: string
        description: The UID of the parent.
      title:
        type: string
        description: The localized human-readable title of the parent.
      id:
        type: string
        description: The parent id
      instance:
        type: string
        description: The instance ID of the parent.
      slug:
        type: string
        description: The slug of the parent.
      name:
        type: string
        description: The localized human-readable name of the parent.
  LanguageDetectionResponse:
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      callId:
        type: string
        description: The ID of the call.
  CloudSearchSuggestResult:
    type: object
    properties:
      query:
        type: string
        description: "*beta* The suggested query string."
      user:
        description: "*beta* If this result is a user, a subset of the user."
        "$ref": "#/definitions/CloudSearchUser"
      sourceUid:
        type: string
        description: The source of the document.
  UserSubscription:
    type: object
    properties:
      feed:
        type: string
        description: The group to follow.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      uid:
        type: string
      level:
        type: string
        description: "The level of subscription.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"top\": Top.    <br>  \n         - \"bottom\":
          Bottom."
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      prefer:
        type: boolean
        description: 'Whether it is a preferred one. (Default: false)'
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  QueryFilterOptions:
    type: object
    properties:
      filters:
        items:
          "$ref": "#/definitions/QueryFilter"
        type: array
        description: "*beta* The list of filters for this query."
      objectType:
        type: string
        description: "*beta* The name of the object Type."
  CloudSearchArticleProperties:
    type: object
    properties:
      layout:
        type: string
        description: The layout of the propertie article.
      name:
        type: string
        description: The localized human-readable name of the propertie article.
      order:
        type: string
        description: The order of the propertie article.
  Material:
    type: object
    properties:
      sharedDriveFile:
        description: Google Drive file attachment.
        "$ref": "#/definitions/SharedDriveFile"
      link:
        description: Link atatchment.
        "$ref": "#/definitions/Link"
      youtubeVideo:
        description: Youtube video attachment.
        "$ref": "#/definitions/YouTubeVideo"
      form:
        description: Google Forms attachment.
        "$ref": "#/definitions/Form"
  ContentRevisionKeyMessage:
    required:
    - uid
    - version
    type: object
    properties:
      version:
        type: string
        description: The version of the content.
      uid:
        type: string
        description: The unique identifier.
  QuerySnippetWrapper:
    type: object
    properties:
      start:
        type: string
        description: The beginning of the snippet wrapper.
      end:
        type: string
        description: The end of the snippet wrapper.
  CloudSearchMetadata:
    required:
    - sourceUid
    type: object
    properties:
      mimeType:
        type: string
        description: "*beta* The mime type of the document."
      updateTime:
        type: string
        description: "*beta* The last modification time of this document."
      sourceUid:
        type: string
        description: The source of the document.
      fields:
        items:
          "$ref": "#/definitions/CloudSearchMetadataField"
        type: array
        description: "*beta* The metadata fields."
      source:
        description: "*beta* kept for temporary compatibility"
        "$ref": "#/definitions/DataSourceDescription"
      owner:
        description: "*beta* The owner of the document."
        "$ref": "#/definitions/Owner"
      thumbnailUrl:
        type: string
        description: "*beta* The thumbnail of the document."
      createTime:
        type: string
        description: "*beta* The creation time of this document."
  SubscriptionContentsListResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Content"
        type: array
        description: The list of returned items.
  MicrosoftDriveSettings:
    type: object
    properties:
      otherUserGroupRights:
        items:
          "$ref": "#/definitions/OtherUserGroupRights"
        type: array
        description: Non-microsoft users rights settings on the communities drive
          folder
      contributorRights:
        description: The contributors rights settings on the communities drive folder
        "$ref": "#/definitions/ContributorAndManagerRights"
      driveFolderDestinationType:
        type: string
        description: The method to set the community drive folder destination (can
          be personal_workspace or my_drive)
      driveFolderDestinationPath:
        type: string
        description: The community custom drive folder destination path
      managerRights:
        description: The managers rights settings on the communities drive folder
        "$ref": "#/definitions/ContributorAndManagerRights"
      identityProviderType:
        type: string
      allRights:
        description: ''
        "$ref": "#/definitions/AllRights"
  UserNotificationsStatus:
    type: object
    properties:
      comment:
        default: true
        type: boolean
        description: 'Enable notifications for comments (Default: true)'
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      like:
        default: true
        type: boolean
        description: 'Enable notifications for likes (Default: true)'
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uid:
        type: string
  CloudSearchFacetBucketValue:
    type: object
    properties:
      timestampValue:
        type: string
        description: "*beta* The timestamp value for this bucket."
      doubleValue:
        type: string
        description: "*beta* The double value for this bucket."
      integerValue:
        type: string
        description: "*beta* The integer value for this bucket."
      stringValue:
        type: string
        description: "*deprecated* The string value for this bucket."
      booleanValue:
        type: boolean
        description: "*beta* The boolean value for this bucket."
      textValue:
        type: string
        description: "*beta* The string value for this bucket."
  MatchRanges:
    type: object
    properties:
      start:
        type: string
        description: The start index at which the query string has been found.
      end:
        type: string
        description: The end index at which the query string has been found.
  Grade:
    type: object
    properties:
      courseName:
        type: string
        description: Name of the course
      grade:
        type: string
        description: Grade assigned
        format: int64
      courseWorkName:
        type: string
        description: Name of the coursework
  NewsletterContentBlock:
    required:
    - uuid
    type: object
    properties:
      uid:
        type: string
      text:
        type: string
        description: The text of the block (Not yet implemented).
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      intro:
        type: string
        description: The introduction text of the block.
      id:
        type: string
      contents:
        items:
          type: string
        type: array
        description: The contents displayed in the block.
      name:
        type: string
        description: The name of the block.
  CommunityTemplate:
    type: object
    properties:
      postTypes:
        items:
          type: string
        type: array
        description: The posts types this community can have
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      name:
        type: string
        description: The name of the template.
      privacy:
        default: restricted
        type: string
        description: The privacy level of the community
      instanceId:
        type: string
        description: The ID of the instance.
      postStatuses:
        items:
          "$ref": "#/definitions/PostStatus"
        type: array
        description: Available custom statuses for posts of the community
      authorDetails:
        type: string
      tagsDetails:
        items:
          "$ref": "#/definitions/Tag"
        type: array
        description: The list of content tags.
      id:
        type: string
      updatedByDetails:
        type: string
      authorId:
        type: string
        description: The author of the template.
      templates:
        items:
          "$ref": "#/definitions/Template"
        type: array
        description: The list of template of the community.
      updatedById:
        type: string
        description: The last user having modified this template.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      customerId:
        type: string
        description: The ID of the customer.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uid:
        type: string
  StyleByInstanceResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      style:
        description: The style of the instance
        "$ref": "#/definitions/Style"
  CustomContentTypeListResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/CustomContentType"
        type: array
        description: The list of returned items.
  Chat:
    type: object
    properties:
      chanId:
        type: string
        description: The API ID of the associated chat's chan *deprecated*
      chatName:
        type: string
        description: The associated chat chan name *deprecated*
      chatProvider:
        type: string
        description: The Chat's provider name *deprecated*
      chatId:
        type: string
        description: The API ID of the associated chat *deprecated*
  PostScore:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      votesUp:
        type: integer
        description: The number of users who voted UP
        format: int32
      uid:
        type: string
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      votesDown:
        type: integer
        description: The number of users who voted DOWN
        format: int32
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      total:
        type: integer
        description: The score, computed from votes UP and DOWN
        format: int32
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  CloudSearchUserPhone:
    type: object
    properties:
      type:
        type: string
        description: "*beta* The type of telephone number."
      value:
        type: string
        description: "*beta* The telephone number."
  Notification:
    type: object
    properties:
      startDate:
        type: string
        description: The date since the notification is visible.
      uid:
        type: string
      instanceId:
        type: string
        description: The ID for an instance on which the objects are attached.
      unreadNotificationCount:
        type: integer
        description: The number of unread children notifications.
        format: int32
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      recipientId:
        type: string
        description: The ID of the recipient.
      externalKeyKind:
        default: Content
        type: string
        description: The external key kind.
      type:
        type: string
        description: The type of notification.
      commentDetails:
        "$ref": "#/definitions/Comment"
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      group:
        type: boolean
        description: |-
          Whether the notifications of a same type and having the same linked object are group together.
                  (Default: false)
      title:
        type: string
        description: 'The title of the notification. (Format: JSON object)'
      functionalInnerId:
        type: string
        description: A code to describe the object.
      priority:
        type: string
        description: The priority of the notification.
      groupName:
        type: string
        description: "The name of the notification group. (Format: JSON object)    <br>
          \ \n        This is only applicable if group is true."
      parentId:
        type: string
        description: The parent notification ID.
      hasParentId:
        type: boolean
        description: Whether the notification has a parentId.
      groupDescription:
        type: string
        description: "The description of the notification group. (Format: JSON object)
          \   <br>  \n        This is only applicable if group is true."
      channel:
        type: string
      status:
        type: string
        description: The notification status.
      description:
        type: string
        description: 'The description of the notification. (Format: JSON object)'
      isRead:
        type: boolean
        description: 'Whether the notification has been read. (Default: false)'
      parentContentDetails:
        type: string
      link:
        type: string
        description: 'The external url of the notification. (Format: JSON object)'
      properties:
        type: string
        description: 'The properties of the notification. (Format: JSON object)'
      instanceDetails:
        "$ref": "#/definitions/Instance"
      url:
        type: string
        description: 'The url of the notification. (Format: JSON object)'
      contentDetails:
        type: string
      readDate:
        type: string
        description: When the notification was read.
      customType:
        type: string
        description: "The custom type of the notification.    <br>  \n        This
          is only applicable if type is custom."
      reason:
        type: string
        description: The reason for the notification.
      thumbnail:
        type: string
        description: The thumbnail of the notification.
      actionCount:
        type: integer
        description: The number of actions in the notification.
        format: int32
      customerId:
        type: string
        description: The ID for a customer on which the objects are attached.
  CategoryProperties:
    type: object
    properties:
      starred:
        type: boolean
        description: True if the files in this category are starred
      author:
        type: string
        description: The author of documents in this category
      shared:
        type: boolean
        description: True if the files in this category are shared
      model:
        type: string
        description: "'File' if the category only contains files, 'Folder' if the
          category only contains folders"
      sharedWithMe:
        type: boolean
        description: True if the files in this category are shared with me
      trashed:
        type: boolean
        description: True if the files in this category are trashed
      recursive:
        type: boolean
        description: True if this category lists files recursively
  TagsPredictionRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/ContentToPredict"
        type: array
        description: The list of texts.
  TimeOfDay:
    type: object
    properties:
      hours:
        type: string
        description: |-
          Hours of day in 24 hour format. Should be from 0 to 23.
                                                            An API may choose to allow the value "24:00:00" for scenarios
                                                            like business closing time.
        format: int64
      nanos:
        type: string
        description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
        format: int64
      minutes:
        type: string
        description: Minutes of hour of day. Must be from 0 to 59.
        format: int64
      seconds:
        type: string
        description: |-
          Seconds of minutes of the time. Must normally be from 0 to 59.
                                                              An API may allow the value 60 if it allows leap-seconds.
        format: int64
  SubmissionListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Submission"
        type: array
        description: The list of returned items.
  CompleteDatastoreKey:
    required:
    - kind
    - uid
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      kind:
        type: string
        description: The kind of the entity.
      uid:
        type: string
        description: The unique identifier.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  ResourceFile:
    type: object
    properties:
      content:
        type: string
      url:
        type: string
        description: The url of the file.
      kind:
        type: string
        description: The type of the file.
      name:
        type: string
        description: The name of the file.
  DriveFile:
    type: object
    properties:
      title:
        type: string
        description: Title of the Drive item.
      thumbnailUrl:
        type: string
        description: URL of a thumbnail image of the Drive item.
      id:
        type: string
        description: Drive API resource ID.
      alternateLink:
        type: string
        description: URL that can be used to access the Drive item.
  Date:
    type: object
    properties:
      year:
        type: string
        description: |-
          Year of date. Must be from 1 to 9999, or 0 if specifying a date
                                                        without a year.
        format: int64
      day:
        type: string
        description: |-
          Day of month. Must be from 1 to 31 and valid for the year and month,
                                                          or 0 if specifying a year/month where the day is not significant.
        format: int64
      month:
        type: string
        description: Month of year. Must be from 1 to 12.
        format: int64
  Post:
    type: object
    properties:
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      updatedBy:
        type: string
        description: "*deprecated* The latest modifier's email."
      notificationsEnabled:
        type: boolean
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      content:
        type: string
        description: Content of the post.
      readers:
        items:
          type: string
        type: array
        description: The list of feeds being able to read the content.
      writer:
        type: string
        description: "*deprecated* The editor's email of the content."
      editors:
        items:
          type: string
        type: array
        description: The list of feeds being able to edit the content.
      thumbnailBlobkey:
        type: string
      version:
        type: integer
        description: 'The version number of the content. Acceptable values are 0 to
          MAX_INT, inclusive. (Default: 0)'
        format: int32
      location:
        description: Location associated to the post.
        "$ref": "#/definitions/PostLocation"
      relevantCommentDetails:
        "$ref": "#/definitions/Comment"
      writerDetails:
        type: string
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content types.
      lastRevision:
        description: The last revision of the content.
        "$ref": "#/definitions/ContentLastRevision"
      isDefaultContentList:
        type: boolean
      feedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs.
      count:
        type: string
        format: int64
      canonicalUrl:
        type: string
      writerId:
        type: string
        description: The author of the content.
      canMove:
        type: boolean
      eventEndDate:
        type: string
        description: The event end date.
      customContentTypeDetails:
        type: string
      thumbnail:
        type: string
        description: The thumbnail of the content.
      mentionsDetails:
        items:
          "$ref": "#/definitions/User"
        type: array
      weight:
        type: number
        description: 'The weight of the content. Acceptable values are 0.0 to MAX_FLOAT,
          inclusive. (Default: 0.0)'
        format: double
      updatedByDetails:
        type: string
      isCustomizableLayout:
        type: boolean
        description: 'Whether the layout is customizable. (Default: false)'
      excerpt:
        type: string
      isDefaultUserDirectory:
        type: boolean
      reportDetails:
        type: string
      images:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: List of images associated to the post.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      postStatusDetails:
        "$ref": "#/definitions/PostStatus"
      comments:
        type: string
      deleters:
        items:
          type: string
        type: array
        description: The list of feeds being able to delete the content.
      userVote:
        type: string
      score:
        description: The post score
        "$ref": "#/definitions/PostScore"
      template:
        description: The template of the content.
        "$ref": "#/definitions/Template"
      isMerged:
        type: boolean
        description: Whether this post is merged. This attribute is **deprecated**
          and will always be False.
      public:
        type: boolean
        description: Whether the content is public.
      subscribedFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which members are automatically subscribed.
      metadata:
        items:
          type: string
        type: array
        description: The list of content metadata.
      publishers:
        items:
          type: string
        type: array
        description: The list of feeds being able to publish the content.
      tags:
        items:
          type: string
        type: array
        description: The list of content tags.
      archivers:
        items:
          type: string
        type: array
        description: The list of feeds being able to archive the content.
      authorId:
        type: string
        description: The author of the content.
      tagz:
        items:
          "$ref": "#/definitions/Tagz"
        type: array
        description: The list of content tagz.
      properties:
        type: string
        description: 'The properties of the content. (Format: JSON object)'
      tagsDetails:
        items:
          "$ref": "#/definitions/Tag"
        type: array
      visibleInCommunitiesCount:
        type: string
        description: The total number of communities where this post is visible, regardless
          of user permissions.
      featuredEndDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      title:
        type: string
        description: The title of the content.
      parentContentDetails:
        type: string
      visibleInCommunitiesDetails:
        items:
          type: string
        type: array
      mentions:
        items:
          type: string
        type: array
        description: List of users id mentioned in post.
      parentCustomContentType:
        type: string
        description: The CustomContentTypeId of the parent with "heritable" set to
          true (only for "News" and "Page").
      parentsNavigation:
        items:
          "$ref": "#/definitions/ContentMenuList"
        type: array
        description: The list of parents in navigation.
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      liked:
        type: boolean
      subtitle:
        type: string
        description: The subtitle of the content.
      mentionsFeedKeys:
        items:
          type: string
        type: array
        description: List of feeds id mentioned in comment.
      headerDetails:
        type: string
      hasRelevantComment:
        type: boolean
        description: Whether if this post has a relevant comment
      notifyFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs to notify.
      reportStatus:
        type: string
        description: Whether this post have been reported by a user.
      header:
        type: string
        description: The header of the content.
      likes:
        type: string
      featuredStartDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      links:
        items:
          "$ref": "#/definitions/AttachedLink"
        type: array
        description: List of links attached to post.
      isPinned:
        type: boolean
        description: Whether this post is pinned.
      isFeatured:
        type: boolean
        description: 'Whether the content is featured. (Default: false)'
      calendarEventId:
        type: string
        description: Calendar event ID associated to the post.
      canShare:
        type: boolean
      customContentType:
        type: string
        description: "The custom type of the content.    <br>  \n        This is only
          applicable if type is custom."
      notifyAuthor:
        type: boolean
        description: 'Whether the author has to be notified for any change. (Default:
          false)'
      type:
        type: string
        description: The type of the content.
      files:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: List of files associated to the post.
      authorDetails:
        type: string
      link:
        type: string
        description: The link of the content.
      updatedById:
        type: string
        description: The latest modifier.
      relevantComment:
        type: string
        description: The relevant comment for this post, if any
      alreadyReported:
        type: boolean
        description: Whether the user already have reported this post.
      subscription:
        "$ref": "#/definitions/Subscription"
      customer:
        type: string
        description: The customer.
      shareable:
        type: boolean
        description: 'Whether the content is shareable externally (for future use,
          not available in the API). (Default: false)'
      following:
        type: boolean
      canEdit:
        type: boolean
      uid:
        type: string
      isHomepage:
        type: boolean
      featuredFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which this content is promoted.
      hasCommentWidget:
        type: boolean
      publicationDate:
        type: string
        description: 'The publication date (Format: UTC date-time).'
      postStatus:
        type: string
        description: The post custom status
      pinDetails:
        description: Pin properties for the post.
        "$ref": "#/definitions/PostPin"
      id:
        type: string
      eventStartDate:
        type: string
        description: The event start date.
      author:
        type: string
        description: "*deprecated* The author's email of the content."
      instance:
        type: string
        description: The instance.
      postType:
        default: DEFAULT
        type: string
        description: Type of post.
      canMarkRelevant:
        type: boolean
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      isOpen:
        default: true
        type: boolean
        description: 'Whether this post is open (default: True)'
      userContent:
        "$ref": "#/definitions/UserContent"
      analyticsViewSum:
        type: integer
        description: The analytics view count.
        format: int32
      isNavItem:
        type: boolean
        description: Whether the content is a menu item. (Default:false)
      canPin:
        type: boolean
      pinnedInCommunitiesDetails:
        items:
          type: string
        type: array
      slug:
        type: string
        description: The short text used in the URL used to access the content.
      attachmentsCount:
        type: string
      canDelete:
        type: boolean
      url:
        type: string
      navigation:
        items:
          "$ref": "#/definitions/ContentNavigation"
        type: array
        description: The list of content menu items.
      notifyUsers:
        type: boolean
        description: 'Whether users have to be notified for any change. (Default:
          false)'
      mediaThumbnail:
        description: Media used as thumbnail of the content.
        "$ref": "#/definitions/Media"
  CuratedStream:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      customContentTypes:
        items:
          type: string
        type: array
        description: "The custom type of the content.    <br>  \n        This is only
          applicable if type is custom."
      tags:
        items:
          type: string
        type: array
        description: The list of content tags.
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      uid:
        type: string
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      metadata:
        items:
          type: string
        type: array
        description: The list of content metadata.
  PostListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      queryId:
        type: string
        description: The id of the query.
      items:
        items:
          "$ref": "#/definitions/Post"
        type: array
        description: The list of returned items.
  DeviceNotificationSettings:
    type: object
    properties:
      interaction:
        default: true
        type: boolean
        description: 'Whether mobile notifications on interaction are enabled. (Default:
          true)'
      contentComment:
        default: true
        type: boolean
        description: 'Whether mobile notifications on content comment are enabled.
          (Default: true)'
      isEnabled:
        default: true
        type: boolean
        description: 'Whether to display all notifications or mute them all. (Default:
          True)'
      content:
        default: true
        type: boolean
        description: 'Whether mobile notifications on content are enabled. (Default:
          true)'
      socialAdvocacy:
        default: true
        type: boolean
        description: 'Whether mobile notifications on social advocacy are enabled.
          (Default: true)'
      postComment:
        default: true
        type: boolean
        description: 'Whether mobile notifications on post comment are enabled. (Default:
          true)'
      post:
        default: true
        type: boolean
        description: 'Whether mobile notifications on post are enabled. (Default:
          true)'
  TagPrediction:
    type: object
    properties:
      index:
        type: string
        description: The unique index identifying the sent content.
      prediction:
        items:
          type: string
        type: array
        description: The predicted tag.
  EmailAddress:
    type: object
    properties:
      emailAddress:
        type: string
        description: The email address of the owner.
  NotificationAction:
    type: object
    properties:
      status:
        type: string
        description: The notification action status.
      uid:
        type: string
      senderDetails:
        type: string
      senderId:
        type: string
        description: The notification author's id.
      notificationId:
        type: string
        description: ID of notification.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  MetadataClauses:
    type: object
    properties:
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata clauses.
  CommunityUserListRequest:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      uid:
        type: string
        description: The unique identifier.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      query:
        type: string
        description: The query used to filter the result.
  InstanceAdminListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          type: string
        type: array
        description: The list of returned items.
  DatastoreKey:
    required:
    - uid
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      uid:
        type: string
        description: The unique identifier.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  RoleResource:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      authorizations:
        items:
          "$ref": "#/definitions/AuthorizationResource"
        type: array
        description: The list of authorizations.
      description:
        type: string
        description: The description of the role.
      instance:
        type: string
        description: The ID of the instance.
      users:
        items:
          type: string
        type: array
        description: The list of users.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      feeds:
        items:
          "$ref": "#/definitions/FeedProto_id_name"
        type: array
        description: The list of feeds.
      heritable:
        type: boolean
        description: 'Whether the role is available in other instance. (Default: false)'
      id:
        type: string
        description: The ID of the role.
        format: int64
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      name:
        type: string
        description: The name of the role.
  Folder:
    type: object
    properties:
      uid:
        type: string
      isFolder:
        type: boolean
        description: The isFolder of the Document.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      isStarred:
        type: boolean
        description: The isStarred of the Document.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      author:
        type: string
        description: The author of the item.
      docPath:
        type: string
      instance:
        type: string
        description: The ID of the instance.
      parentFolderId:
        type: string
        description: The parentFolderId of the Document.
      trashed:
        type: boolean
        description: whether this media has been sent to trash.
      isShared:
        type: boolean
        description: The isShared of the Document.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      description:
        type: string
        description: 'The description of the item. (Format: JSON object)'
      tags:
        items:
          type: string
        type: array
        description: The list of tags.
      parentFolder:
        type: string
        description: the id of the parent folder. None means 'root'.
      path:
        items:
          "$ref": "#/definitions/PathDescriptor"
        type: array
        description: The list of folder describing the path of the folder.
      properties:
        type: string
        description: 'The properties of the media. (Format: JSON object)'
      customer:
        type: string
        description: The ID of the customer.
      name:
        type: string
        description: 'The name of the item. (Format: JSON object)'
      canDelete:
        type: boolean
      providerId:
        type: string
        description: The providerId of the Document.
      canEdit:
        type: boolean
  CloudSearchCommunity:
    type: object
    properties:
      instanceDetails:
        description: 'Instance details object : {id, name}.'
        "$ref": "#/definitions/EntityDetails"
      language:
        type: string
        description: The community language.
      title:
        type: string
        description: The community name.
      memberCount:
        type: string
        description: 'The number of members who can contribute to the community, max:
          105'
      tagz:
        items:
          type: string
        type: array
        description: Tagz associated to this community
      thumbnail:
        type: string
        description: The community thumbnail.
      url:
        type: string
        description: The community url.
      members:
        items:
          "$ref": "#/definitions/CloudSearchUser"
        type: array
        description: List of community users, limited to 4 users.
      id:
        type: string
        description: The community ID.
      uid:
        type: string
        description: The community UID.
  DocumentGetMultiRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      docPaths:
        items:
          type: string
        type: array
        description: The list of docPaths
  SharedDriveFile:
    type: object
    properties:
      driveFile:
        description: Google Drive file attachment.
        "$ref": "#/definitions/DriveFile"
      shareMode:
        type: string
        description: State of this submission.
  InstanceListMetadataResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Metadata"
        type: array
        description: The list of returned items.
  CloudSearchPost:
    type: object
    properties:
      tagsDetails:
        items:
          "$ref": "#/definitions/EntityDetails"
        type: array
        description: 'Metadatas details list object : [{id, name, parent: {id, name}}]'
      score:
        description: The score of the post
        "$ref": "#/definitions/CloudSearchPostScore"
      instanceDetails:
        description: 'Instance details object : {id, name}'
        "$ref": "#/definitions/EntityDetails"
      tags:
        items:
          type: string
        type: array
        description: The tags list of post
      thumbnail:
        type: string
        description: The thumbnail of the post.
      url:
        type: string
        description: The url of post.
      authorDetails:
        description: 'The author details object of post: {id, name}'
        "$ref": "#/definitions/CloudSearchUser"
      tagz:
        items:
          type: string
        type: array
        description: Tagz associated to this post
      comments:
        type: string
        description: The number of comments of post
      slug:
        type: string
        description: The localized human-readable name of post slug
      content:
        type: string
        description: The text of post
      instance:
        type: string
        description: The instance id of post
      parentContentDetails:
        description: 'Instance details object : {id, name}'
        "$ref": "#/definitions/ParentDetails"
      likes:
        type: string
        description: The number of likes of post
      postType:
        type: string
        description: The article properties.
      uid:
        type: string
        description: The uid of post
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The customContentTypeTags list of post
      attachmentsCount:
        type: string
        description: The number of attachments of post
      id:
        type: string
        description: The ID of post
      publicationDate:
        type: string
        description: Post publication date
  SaveContentMultiRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/Content"
        type: array
        description: The list of returned items.
  AnalyticsPlatformRequest:
    type: object
    properties:
      comparePeriod:
        type: string
        description: |-
          The reference period over which the indicator should be computed.
            - Weekly: to compare with the value the KPI had one week before.
            - Monthly: to compare with the value the KPI had one month before.
            - Yearly: to compare with the value the KPI had one year before.
      callId:
        type: string
        description: The ID of the call.
      period:
        type: string
        description: |-
          The reference period over which the indicator should be computed.
            - Week: to calculate KPI over a week long period.
            - Month: to calculate KPI over a month long period.
            - Year: to calculate KPI over a year long period.
      filters:
        items:
          "$ref": "#/definitions/FilterSelectedValues"
        type: array
        description: The filters to apply to the request.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      indicators:
        items:
          type: string
          description: ActiveUsers <br> ParticipatingUsers <br> NewContents <br> NewPosts
            <br> NewReactions <br> ConnectionTime <br> ConnectionFrequency <br> Connections
            <br> Consultations <br> Participations <br> Creations <br> BounceRate
            <br> ActiveSites <br> ActiveCommunities <br> OnboardedUsers <br> Devices
            <br> Followers
        type: array
        description: "The kind of the indicators is an array of string that have acceptable
          values. If multiple values are given, multiple indicators will be returned.\nAcceptable
          values are :\n  - ActiveUsers: Number of Users, in the filtered user subset,
          connected to any part of the platform at least once during a given Timeframe.\n
          \ - ParticipatingUsers: Number of active users, in the Filtered User subset,
          who have liked, commented, posted in a community or created a content at
          least once during a given Timeframe\n  - NewContents: Number of content
          items created on all the platform sites during the Timeframe by the Filtered
          User subset.\n  - NewPosts: Number of posts created on all the communities
          of all the platform sites during the Timeframe, by the Filtered User subset\n
          \ - NewReactions: Number of reactions (likes + comments) on all the content
          items (content and comments) of all the platform sites and on all the post
          items (posts and comments) of all the communities on all the platform sites
          during the Timeframe, realised by the Filtered User subset\n  - ConnectionTime:
          Average time of a connection calculated over all  users in the Filtered
          User subset during the selected Timeframe.\n  - ConnectionFrequency: Frequency
          of connection expressed as average number of times a user connects to the
          site in the time of the selected Timeframe calculated over all users in
          the Filtered User subset for all the connections established in the selected
          Timeframe.\n  - Connections: Average time of a connection calculated over
          all  users in the Filtered User subset during the selected Timeframe.\n
          \ - Consultations: Count all connections visiting more than one page\n  -
          Participations: Count all connections liking, commenting or creating posts
          or content.\n  - Creations: Count all connections creating posts or content.
          \n  - BounceRate: The bounce rate count all connections visiting just one
          page and/or launching business apps.\n  - ActiveSites: Number of sites that
          have registered at least one view during the Timeframe, by the Filtered
          User subset.\n  - ActiveCommunities: Number of communities (on all platform
          sites) that have registered at least one view during the Timeframe, by the
          Filtered User subset.\n  - OnboardedUsers: Number of Current Users, in the
          Filtered User subset, connected to any part of the platform at least once
          since the launch of the intranet\n  - Devices: Percentage of each type of
          device used to connect to any part of the platform\n  - Followers: Number
          of followers for a given community"
  FeedSubscribersRequest:
    required:
    - feed
    type: object
    properties:
      feed:
        type: string
        description: The ID of the feed to add or remove users from.
      removedUsers:
        items:
          type: string
        type: array
        description: A list of users email or ID to add to the feed.
      addedUsers:
        items:
          type: string
        type: array
        description: A list of users email or ID to add to the feed.
      experimental:
        type: boolean
        description: "*alpha* enable experimental fast user subscription, only support
          emails in that mode."
  StyleSheetSaveRequest:
    required:
    - content
    - kind
    - styleId
    type: object
    properties:
      content:
        type: string
        description: The content of the stylesheet.
      kind:
        type: string
        description: The type of the stylesheet.
      styleId:
        type: string
        description: The ID of the style.
  Name:
    type: object
    properties:
      givenName:
        type: string
        description: The user's first name.
      fullName:
        type: string
        description: The user's full name formed by concatenating the first and last
          name values.
      familyName:
        type: string
        description: The user's last name.
  SearchDirectoryEntryRequest:
    required:
    - lang
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      callId:
        type: string
        description: The ID of the call.
      user:
        type: string
        description: The user processing the search.
      includeUserEntries:
        default: true
        type: boolean
        description: 'Whether the user entries are included in the search. (Default:
          true)'
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      instance:
        type: string
        description: The ID of the instance.
      status:
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      query:
        type: string
        description: The query used to filter the result.
      directory:
        type: string
        description: The directory in which the entries are retrieved.
      currentInstance:
        type: string
        description: The ID of the current instance.
      feeds:
        items:
          type: string
        type: array
        description: The list of user groups used to filter the search result.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata used to filter the search result.
  InterestListRequest:
    type: object
    properties:
      instanceId:
        type: string
        description: The ID of the instance.
      orMetadata:
        items:
          type: string
        type: array
        description: The metadata that the user is interested in
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content types
      customContentType:
        type: string
        description: The content type that the user is interested in
        format: int64
  DirectoryEntryProto_id_name_values_metadata_status_directory_thumbnail_createdAt_updatedAt_user_link_tags:
    required:
    - directory
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      name:
        type: string
        description: 'The name of the entry. (Format: JSON object)'
      tags:
        items:
          type: string
        type: array
        description: The list of tags.
      thumbnail:
        type: string
        description: The thumbnail of the entry.
      link:
        type: string
        description: 'The link of the entry. (Format: JSON object)'
      user:
        type: string
        description: The optional owner of the entry.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      directory:
        type: string
        description: The directory of the entry.
      values:
        type: string
        description: 'The value of the entry. (Format: JSON object)'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata.
  MediaListResponse:
    required:
    - more
    type: object
    properties:
      errors:
        items:
          "$ref": "#/definitions/ErrorReason"
        type: array
        description: The list of errors and their relative target.
      callId:
        type: string
        description: The ID of the call.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      queryId:
        type: string
        description: The id of the query.
      items:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: The list of returned items.
      path:
        items:
          "$ref": "#/definitions/PathDescriptor"
        type: array
        description: The path of request.
      more:
        type: boolean
        description: Whether there are more results.
  OneFilterValues:
    type: object
    properties:
      filter:
        description: Filter.
        "$ref": "#/definitions/Filter"
      values:
        items:
          type: string
        type: array
        description: A list a filter values.
  CloudSearchSortOrder:
    type: object
    properties:
      operatorName:
        type: string
        description: "*beta* The name of the operator."
      localizedOperatorName:
        type: string
        description: "*beta* The localized human-readable name of the filter."
  CloudSearchFacetResult:
    type: object
    properties:
      sourceName:
        type: string
        description: "*beta* The name of the 3p source."
      buckets:
        items:
          "$ref": "#/definitions/CloudSearchNewFacetBucket"
        type: array
        description: "*beta* The buckets for this facet."
      bucket:
        items:
          "$ref": "#/definitions/CloudSearchFacetBucket"
        type: array
        description: "*beta* The buckets for this facet."
      localizedOperatorName:
        type: string
        description: "*beta* The localized human-readable name of the filter."
      operatorName:
        type: string
        description: "*beta* The name of the operator."
      bucketsType:
        type: string
        description: "*beta* The type of the buckets for this facet."
      objectType:
        type: string
        description: "*beta* The name of the object Type."
  AuthorizationResource:
    type: object
    properties:
      feeds:
        items:
          "$ref": "#/definitions/FeedProto_id_name"
        type: array
        description: The list of feeds concerned by the authorization.
      actions:
        items:
          "$ref": "#/definitions/AuthorizationActionResource"
        type: array
        description: The list of actions.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata.
  FileSystemItemMoveRequest:
    required:
    - destinationFolderId
    - itemId
    type: object
    properties:
      destinationFolderId:
        type: string
        description: The destionation folder of move request.
      callId:
        type: string
        description: The ID of the call.
      itemId:
        type: string
        description: The unique identifier.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  CustomerStatusResponse:
    type: object
    properties:
      status:
        type: boolean
        description: The status of the customer.
      callId:
        type: string
        description: The ID of the call.
      error:
        type: string
        description: Error raised when querying the status.
  CommunityListRequest:
    required:
    - lang
    type: object
    properties:
      feed:
        items:
          type: string
        type: array
        description: The list of user groups used to filter the list.
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      instanceId:
        items:
          type: string
        type: array
        description: The list of instance IDs.
      query:
        type: string
        description: The query used to filter the result.
      userFavoritesOnly:
        type: boolean
        description: Limit the response to the contents that the user has marked as
          favorite (directly or indirectly).
      featuredFeed:
        items:
          type: string
        type: array
        description: The list of user groups for which community is promoted, used
          to filter the list.
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      parent:
        type: string
        description: The ID of the parent content.
      author:
        type: string
        description: The email of the creator of the community.
      isFeatured:
        type: boolean
        description: 'Whether the community is featured. (Default: false)'
      callId:
        type: string
        description: The ID of the call.
      orMetadata:
        items:
          type: string
        type: array
        description: The list of metadata in which a model needs to have at least
          one of them to be part of the result.
      customContentType:
        items:
          type: string
        type: array
        description: The list of custom content types.
      endDateFrom:
        type: string
        description: 'The community end date should be newer than this date (Format:
          UTC date-time).'
      combinedMetadata:
        items:
          "$ref": "#/definitions/MetadataClauses"
        type: array
        description: The list of metadata lists.
      hidden:
        type: boolean
        description: 'Whether the community is hidden. (Default: false)'
      type:
        items:
          type: string
        type: array
        description: The list of content types.
      queryType:
        type: string
        description: The type of the query.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata required for a model to be part of the result.
      status:
        items:
          type: string
        type: array
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      sortOrder:
        items:
          type: string
        type: array
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      isOpen:
        type: boolean
        description: Whether to filter by open posts or closed posts.
      parentUuid:
        type: string
        description: |-
          The universally unique identifier of the parent in navigation of the contents.
                  (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      excludeStatus:
        items:
          type: string
        type: array
        description: "The list of status excluded from the list.  <br> \n        Acceptable
          values are:  <br> \n         - \"DRAFT\": The model is a draft.  <br> \n
          \        - \"REFUSED\": The model has been rejected.  <br> \n         -
          \"TO_VALIDATE\": The model is pending validation.  <br> \n         - \"LIVE\":
          The model is published.  <br> \n         - \"ARCHIVE\": The model is archived.
          \ <br> \n         - \"DELETED\": The model is deleted."
      isNavItem:
        type: boolean
        description: 'Whether the community is a navigation item. (Default: false)'
      currentInstanceId:
        type: string
        description: The ID of the current instance.
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content types.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      onlyFeatureFeeds:
        type: boolean
        description: 'Whether to retrieve communities which have been promoted for
          some users groups. (Default: false)'
      isCommunityAdmin:
        type: boolean
        description: Get only communities where user is administrator
      privacy:
        type: string
        description: The privacy of the community.
      ids:
        items:
          type: string
        type: array
        description: The list of community IDs.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      endDateTo:
        type: string
        description: 'The community end date should be older than this date (Format:
          UTC date-time).'
      followingOnly:
        type: boolean
        description: 'Retrieve only communities that user is following. (Default:
          false)'
      excludeType:
        items:
          type: string
        type: array
        description: The list of content types to exclude.
      action:
        type: string
        description: The authorized action used to filter the list.  <br> If no action,
          user must be super or instance administrator.
      customerId:
        type: string
        description: "The ID of the customer.  <br> \n        Required if the user
          is not connected."
  RehydratedFavoriteListResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      directoryEntries:
        items:
          "$ref": "#/definitions/DirectoryEntry"
        type: array
        description: The list of returned items.
      instances:
        items:
          "$ref": "#/definitions/Instance"
        type: array
        description: The list of returned items.
  ContentStatusRequest:
    required:
    - status
    - uid
    type: object
    properties:
      comment:
        type: string
        description: The comment to justify the status.
      status:
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      uid:
        type: string
        description: The unique identifier.
  CloudSearchDirectoryEntry:
    type: object
    properties:
      tagsDetails:
        items:
          "$ref": "#/definitions/EntityDetails"
        type: array
        description: 'Tags details list object : [{id, name, parent: {id, name}}]'
      instanceDetails:
        description: 'Instance details object : {id, name}'
        "$ref": "#/definitions/EntityDetails"
      language:
        type: string
        description: Directory entry language
      metadataDetails:
        items:
          "$ref": "#/definitions/EntityDetails"
        type: array
        description: 'Metadatas details list object : [{id, name, parent: {id, name}}]'
      favoritesCount:
        type: string
        description: Entry's favourite count
      value:
        type: string
        description: Entry's value
      thumbnail:
        type: string
        description: Thumbnail's URL
      url:
        type: string
        description: Entry's url
      link:
        type: string
        description: Entry's link
      publicationDate:
        description: Directory entry publication date
        "$ref": "#/definitions/CloudSearchDateValues"
      updateDate:
        description: Directory entry update date
        "$ref": "#/definitions/CloudSearchDateValues"
      directory:
        type: string
        description: Entry's directory info
      uid:
        type: string
        description: Directory entry UID
      id:
        type: string
        description: Directory entry UID
      name:
        type: string
        description: Directory entry name
  Role:
    type: object
    properties:
      customer:
        type: string
        description: The ID for a customer on which the objects are attached.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      authorizations:
        items:
          "$ref": "#/definitions/Authorization"
        type: array
        description: The list of authorizations actions.
      description:
        type: string
        description: 'The description of the role. (Format: JSON object)'
      instance:
        type: string
        description: The ID for an instance on which the objects are attached.
      users:
        items:
          type: string
        type: array
        description: "**deprecated** The list of email addresses for which users are
          concerned by the role."
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      uid:
        type: string
      feeds:
        items:
          type: string
        type: array
        description: The list of feeds concerned by the role.
      heritable:
        type: boolean
        description: 'Whether the role is available in other instances. (Default:
          false)'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      name:
        type: string
        description: The name of the role.
  AdminListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          type: string
        type: array
        description: The list of returned items.
  Template:
    type: object
    properties:
      uid:
        type: string
      featuredFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which this content is promoted.
      header:
        type: string
        description: The ID of the header contained in the template.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      description:
        type: string
        description: The description of the template.
      usableBy:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which this template is visible.
      functionalInnerId:
        type: string
        description: A code to describe the object.
      instance:
        type: string
        description: The ID of the instance.
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The list of ID of tags associated with the template.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata associated with the template.
      feedKeys:
        items:
          type: string
        type: array
        description: A list of feeds that can access to the content created from the
          template in basic mode.
      contentType:
        type: string
        description: The type of the template.
      components:
        items:
          type: string
        type: array
        description: The list of components in the template.
      fixedWidgets:
        type: boolean
        description: Whether the template has a fixed list of widgets.
      customContentType:
        type: string
        description: The ID of the content type of the template.
      visibilityInheritedOnly:
        type: boolean
        description: Whether the template should be displayed only on sub-instances.
      heritable:
        type: boolean
        description: Whether the template can be used on sub-instances.
      properties:
        type: string
        description: 'The properties of the content. (Format: JSON object)'
      customer:
        type: string
        description: The ID of the customer.
      name:
        type: string
        description: The name of the template.
      fixedLayout:
        type: boolean
        description: Whether the template has a fixed layout.
      basicMode:
        type: boolean
        description: Whether the template is in basic mode.
      isV2Compatible:
        type: boolean
  UserSocialSettings:
    type: object
    properties:
      isActivityVisible:
        default: true
        type: boolean
        description: 'Whether user history is visible by other users. (Default: true)'
  FileSystemItemsKeysRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      itemIds:
        items:
          "$ref": "#/definitions/CompleteDatastoreKey"
        type: array
        description: The list of unique identifiers.
  BetaRemoveResponse:
    type: object
    properties:
      uid:
        items:
          type: string
        type: array
        description: The list of users ids that have been removed from beta users.
  IndicatorDescriptor:
    type: object
    properties:
      customer:
        type: string
        description: The customer for which the indicators have been computed.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      kind:
        type: string
        description: The type of the indicator (should not be shown to the user).
      group:
        type: string
        description: The group to which the indicator belongs
        format: int64
      uid:
        type: string
      timestamp:
        type: string
        description: The exact date and time at which the indicator has been computed.
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      fake:
        type: boolean
        description: Is this indicator a fake?
      period:
        description: The reference period over which the indicator has been computed.
        "$ref": "#/definitions/ReferencePeriod"
      label:
        type: string
        description: The label of the indicator (human-readable, non-localized label).
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      granularity:
        type: string
        description: The temporal granularity of the indicator. Applies only to some
          kinds of indicators.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      values:
        items:
          type: string
        type: array
        description: The values for this indicator
      levelFilter:
        description: The entity this indicator is related to (a specific customer,
          instance or community).
        "$ref": "#/definitions/DatastoreKeyRepresentation"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  QueryFilter:
    type: object
    properties:
      kind:
        type: string
        description: "*beta* The type of the filter."
      values:
        items:
          type: string
        type: array
        description: "*beta* The list of values for this query filter."
      name:
        type: string
        description: "*beta* The name of the operator."
  CloudSearchQueryRequest:
    type: object
    properties:
      lang:
        items:
          type: string
        type: array
        description: "*beta* The language. (Format: xx)  <br> \n    Acceptable values
          are:  <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br>
          \n     - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      sort:
        type: string
        description: "*beta* The sort operator, prefixed by a `-` if DESC."
      wCursor:
        type: string
        description: "*beta* \n    The cursor for continuing a previous request on
          the next page.\n    This should be set to the value of 'cursor' from the
          previous response."
      sources:
        items:
          "$ref": "#/definitions/QuerySourceDescription"
        type: array
        description: "*beta* The list of sources to query."
      disableQueryInterpretation:
        type: boolean
        description: "*beta* Whether to disable the NL interpretation of the query."
      callId:
        type: string
        description: "*beta* The ID of the call."
      maxResults:
        type: string
        description: "*beta* Maximum results returned. Acceptable values are 1 to
          MAX_INT, inclusive. (Default: 30)"
      cursor:
        type: string
        description: "*beta* \n    The cursor for continuing a previous request on
          the next page.\n    This should be set to the value of 'cursor' from the
          previous response."
      instanceId:
        type: string
        description: "*beta* The ID of the instance."
      wrapper:
        description: The snippet wrapper.
        "$ref": "#/definitions/QuerySnippetWrapper"
      query:
        type: string
        description: "*beta* The query used to filter the result."
      more:
        type: boolean
        description: "*deprecated* (should not appear in the request) Whether there
          are more results."
  SamlLogo:
    type: object
    properties:
      fileKey:
        type: string
        description: The logo of the SAML file.
      url:
        type: string
        description: The serving url of the SAML logo file.
  GradeListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Grade"
        type: array
        description: The list of returned items.
  CommentAndChildListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/CommentAndChild"
        type: array
        description: The list of returned items.
  Favorite:
    required:
    - owner
    - ownerKind
    - target
    - targetKind
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      target:
        type: string
        description: The target of the favorite.
      ownerKind:
        type: string
        description: The (Feed or User) having this favorite
      targetKind:
        type: string
        description: The kind of the favorite target.
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      negative:
        type: boolean
        description: Whether the favorite has been removed.
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      deletable:
        default: true
        type: boolean
        description: Whether the favorite can be removed.
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      owner:
        type: string
        description: The owner of the favorite
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uid:
        type: string
  OrganizationChartResponse:
    type: object
    properties:
      subLevel:
        items:
          "$ref": "#/definitions/User"
        type: array
        description: The profiles of the users with the user as their manager.
      callId:
        type: string
        description: The ID of the call.
      manager:
        description: The profile of the manager of the user.
        "$ref": "#/definitions/User"
      sameLevel:
        items:
          "$ref": "#/definitions/User"
        type: array
        description: The profiles of the users with the same manager as the user.
  RoleListWithFeedResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/RoleResource"
        type: array
        description: The list of returned items.
  NotificationResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/NotificationGroupResource"
        type: array
        description: The list of returned items.
  FeedProto_id_name:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
        description: The name of the feed.
  UserContent:
    required:
    - content
    type: object
    properties:
      uid:
        type: string
      functionalInnerId:
        type: string
        description: A code to describe the object.
      content:
        type: string
        description: The ID for a content on which the user values are attached.
      values:
        type: string
        description: The values associated to the content for the user.
      user:
        type: string
        description: The ID for a user on which the user values are attached.
      id:
        type: string
  InstanceSiblingsListResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/Instance"
        type: array
        description: The list of returned items.
  DocumentListRequest:
    required:
    - docPath
    type: object
    properties:
      lang:
        type: string
        description: The language used for search purposes.
      docPath:
        type: string
        description: The docPath of the item. It can be a provider, a site, a drive,
          or a resource (file or folder)
      searchText:
        type: string
        description: The text to search for
      serializedProperties:
        type: string
        description: The serialized properties to use for search purposes. Will only
          be used if searchParameters is absent from the request.
      callId:
        type: string
        description: The ID of the call.
      searchTags:
        items:
          type: string
        type: array
        description: The document tags to search for
      maxResults:
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      searchParameters:
        description: The search parameters
        "$ref": "#/definitions/CategoryProperties"
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      searchInFolder:
        type: boolean
        description: True if list files in current folder
      sortOrder:
        items:
          type: string
        type: array
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      searchTypes:
        items:
          type: string
          description: IMAGE <br> OTHER <br> FOLDER
        type: array
        description: 'The document type within the provider, (possible: FOLDER, OTHER,
          IMAGE)'
  UserListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/User"
        type: array
        description: The list of returned items.
  SendNewsletterResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      sent:
        type: boolean
        description: Whether the newsletter has been sent.
  WidgetTypeResource:
    type: object
    properties:
      name:
        type: string
        description: The widget type name.
      value:
        type: string
        description: The widget type value.
  FolderListResponse:
    required:
    - more
    type: object
    properties:
      errors:
        items:
          "$ref": "#/definitions/ErrorReason"
        type: array
        description: The list of errors and their relative target.
      callId:
        type: string
        description: The ID of the call.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      queryId:
        type: string
        description: The id of the query.
      items:
        items:
          "$ref": "#/definitions/Folder"
        type: array
        description: The list of returned items.
      path:
        items:
          "$ref": "#/definitions/PathDescriptor"
        type: array
        description: The path of request.
      more:
        type: boolean
        description: Whether there are more results.
  SearchDirectoryRequest:
    required:
    - lang
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      callId:
        type: string
        description: The ID of the call.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      instance:
        type: string
        description: The ID of the instance.
      status:
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      query:
        type: string
        description: The query used to filter the result.
      feeds:
        items:
          type: string
        type: array
        description: The list of user groups used to filter the search result.
      type:
        type: string
        description: The content type used to filter the search result.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata used to filter the search result.
  NotificationTypeStatus:
    type: object
    properties:
      mobile:
        type: boolean
      hooks:
        items:
          "$ref": "#/definitions/WebhookPreferenceResponse"
        type: array
      kind:
        type: string
      email:
        type: boolean
      desktop:
        type: boolean
  SearchContentAndMediaRequest:
    required:
    - lang
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      contentType:
        items:
          type: string
        type: array
        description: The types of content used to filter the search result.
      callId:
        type: string
        description: The ID of the call.
      excludedContentType:
        items:
          type: string
        type: array
        description: The types of content excluded from the search.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      instance:
        items:
          type: string
        type: array
        description: The list of instance identifiers.
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      query:
        type: string
        description: The query used to filter the result.
      contentStatus:
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      currentInstance:
        type: string
        description: The ID of the current instance.
  UserEmailNotification:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      uid:
        type: string
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      enabled:
        type: boolean
        description: "*deprecated* Whether notifications are enabled. (Default: false)"
      delay:
        type: string
        description: "*deprecated* Delay of notifications.    <br>  \n        Acceptable
          values are:    <br>  \n         - \"IMMEDIATELY\": Immediately.    <br>
          \ \n         - \"DEFERRED\": Deferred."
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  ListCustomContentTypeTagResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/CustomContentTypeTag"
        type: array
        description: The custom content type tags.
  AuthorizationActionResource:
    type: object
    properties:
      type:
        type: string
        description: The type of action.
      customContentType:
        type: string
        description: The custom content type concerned by the action.
      name:
        type: string
        description: The name of the authorization action.
  AnalyticsInstanceRequest:
    type: object
    properties:
      comparePeriod:
        type: string
        description: |-
          The reference period over which the indicator should be computed.
            - Weekly: to compare with the value the KPI had one week before.
            - Monthly: to compare with the value the KPI had one month before.
            - Yearly: to compare with the value the KPI had one year before.
      instanceId:
        type: string
        description: The instance unique identifier.
      callId:
        type: string
        description: The ID of the call.
      period:
        type: string
        description: |-
          The reference period over which the indicator should be computed.
            - Week: to calculate KPI over a week long period.
            - Month: to calculate KPI over a month long period.
            - Year: to calculate KPI over a year long period.
      filters:
        items:
          "$ref": "#/definitions/FilterSelectedValues"
        type: array
        description: The filters to apply to the request
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      indicators:
        items:
          type: string
          description: ActiveUsers <br> ParticipatingUsers <br> NewContents <br> NewPosts
            <br> NewReactions <br> ConnectionTime <br> ConnectionFrequency <br> Connections
            <br> Consultations <br> Participations <br> Creations <br> BounceRate
            <br> ActiveSites <br> ActiveCommunities <br> OnboardedUsers <br> Devices
            <br> Followers
        type: array
        description: "The kind of the indicators is an array of string that have acceptable
          values. If multiple values are given, multiple indicators will be returned.\nAcceptable
          values are :\n  - ActiveUsers: Number of Users, in the filtered user subset,
          connected to any part of the platform at least once during a given Timeframe.\n
          \ - ParticipatingUsers: Number of active users, in the Filtered User subset,
          who have liked, commented, posted in a community or created a content at
          least once during a given Timeframe\n  - NewContents: Number of content
          items created on all the platform sites during the Timeframe by the Filtered
          User subset.\n  - NewPosts: Number of posts created on all the communities
          of all the platform sites during the Timeframe, by the Filtered User subset\n
          \ - NewReactions: Number of reactions (likes + comments) on all the content
          items (content and comments) of all the platform sites and on all the post
          items (posts and comments) of all the communities on all the platform sites
          during the Timeframe, realised by the Filtered User subset\n  - ConnectionTime:
          Average time of a connection calculated over all  users in the Filtered
          User subset during the selected Timeframe.\n  - ConnectionFrequency: Frequency
          of connection expressed as average number of times a user connects to the
          site in the time of the selected Timeframe calculated over all users in
          the Filtered User subset for all the connections established in the selected
          Timeframe.\n  - Connections: Average time of a connection calculated over
          all  users in the Filtered User subset during the selected Timeframe.\n
          \ - Consultations: Count all connections visiting more than one page\n  -
          Participations: Count all connections liking, commenting or creating posts
          or content.\n  - Creations: Count all connections creating posts or content.
          \n  - BounceRate: The bounce rate count all connections visiting just one
          page and/or launching business apps.\n  - ActiveSites: Number of sites that
          have registered at least one view during the Timeframe, by the Filtered
          User subset.\n  - ActiveCommunities: Number of communities (on all platform
          sites) that have registered at least one view during the Timeframe, by the
          Filtered User subset.\n  - OnboardedUsers: Number of Current Users, in the
          Filtered User subset, connected to any part of the platform at least once
          since the launch of the intranet\n  - Devices: Percentage of each type of
          device used to connect to any part of the platform\n  - Followers: Number
          of followers for a given community"
  Subscription:
    type: object
    properties:
      followerFeedKey:
        type: string
        description: Feed who subscribe to a content
      followerUserDetails:
        type: string
      properties:
        type: string
        description: Additional properties
      followingUserDetails:
        type: string
      customerKey:
        type: string
        description: The ID for a customer on which the objects are attached.
      followingSearchQuery:
        type: string
        description: Search query user wants to follow
      instanceKey:
        type: string
        description: The ID for an instance on which the objects are attached.
      followingContentType:
        type: string
        description: Type of content that user wants to follow
      followingContentDetails:
        type: string
      followingContentKey:
        type: string
        description: Content user wants to follow
      notify:
        type: boolean
        description: Enable notifications when new activity matches this subscription
      followerUserKey:
        type: string
        description: User who subscribe to a content
      uid:
        type: string
      type:
        type: string
        description: Kind of the subscription. (Read-only)
      id:
        type: string
      followingUserKey:
        type: string
        description: User profile that user wants to follow
  NotificationListResponse:
    required:
    - unreadNotificationsCount
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      unreadNotificationsCount:
        type: string
        description: The unread notifications number
        format: int64
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/NotificationGroupResource"
        type: array
        description: The list of returned items.
  ContentListResponse:
    required:
    - more
    type: object
    properties:
      errors:
        items:
          "$ref": "#/definitions/ErrorReason"
        type: array
        description: The list of errors and their relative target.
      callId:
        type: string
        description: The ID of the call.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      queryId:
        type: string
        description: The id of the query.
      items:
        items:
          "$ref": "#/definitions/Content"
        type: array
        description: The list of returned items.
      more:
        type: boolean
        description: Whether there are more results.
  Directory:
    required:
    - customer
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      properties:
        type: string
        description: 'The properties of the directory. (Format: JSON object)'
      createdBy:
        type: string
        description: The user who created the object.
      name:
        type: string
        description: 'The name of the directory. (Format: JSON object)'
      tags:
        items:
          "$ref": "#/definitions/DirectoryTag"
        type: array
        description: The list of tags.
      updatedBy:
        type: string
        description: The last user who updated this object.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      userLocalEntryFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds able to add entries in the directory.
      template:
        description: The template of the directory.
        "$ref": "#/definitions/Template"
      id:
        type: string
      instance:
        type: string
        description: The ID of the instance.
      favorites:
        type: boolean
        description: 'Whether the directory is in the favorites. (Default: false)'
      inherited:
        type: boolean
        description: Is it a directory inheritable.
      uid:
        type: string
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata.
      type:
        type: string
        description: The type of directory.
      entriesHasMetadata:
        type: boolean
        description: 'Whether the directory entries have metadata. (Default: false)'
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      description:
        type: string
        description: 'The description of the directory. (Format: JSON object)'
  CloudSearchFacetBucket:
    type: object
    properties:
      count:
        type: string
        description: "*beta* The number of documents for this bucket."
      percentage:
        type: string
        description: "*beta* The percentage of documents for this bucket."
      selected:
        type: boolean
        description: "*beta* Whether the bucket was selected in the query request."
      range:
        description: "*beta* The start and end indexes where the bucket value has
          been found."
        "$ref": "#/definitions/MatchRanges"
      value:
        description: "*beta* The value for this bucket."
        "$ref": "#/definitions/CloudSearchFacetBucketValue"
  FileSystemItemsDeleteRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      definitive:
        type: boolean
        description: Whether the deletion operation is definitive.
      itemIds:
        items:
          "$ref": "#/definitions/CompleteDatastoreKey"
        type: array
        description: The list of unique identifiers.
  WidgetVideoGetResponse:
    required:
    - contentId
    - widgetId
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      widgetId:
        type: string
        description: The id of the widget
      videos:
        items:
          "$ref": "#/definitions/WidgetVideo"
        type: array
        description: The videos in this widget (one per lang)
      contentId:
        type: string
        description: The content containing the widget
        format: int64
  FavoriteListResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/CompleteDatastoreKey"
        type: array
        description: The list of returned items.
  ContentLastRevision:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      version:
        type: integer
        description: The version of the revision.
        format: int32
      title:
        type: string
        description: Title of the content for the last revision.
  ? UserProto_lang_langs_properties_showTutorial_tutorials_emailNotifications_rePassword_currentPassword_alternateEmail_settings_password
  : type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      emailNotifications:
        description: "*deprecated* The list of email notifications."
        "$ref": "#/definitions/UserEmailNotification"
      settings:
        description: General settings for this user
        "$ref": "#/definitions/UserSettings"
      alternateEmail:
        type: string
        description: The alternative email of the user.
      showTutorial:
        type: boolean
        description: 'Whether the tutorial is shown to the user. (Default: true)'
      rePassword:
        type: string
      currentPassword:
        type: string
      tutorials:
        type: string
        description: 'List of tutorials. (Format: JSON object)'
      langs:
        items:
          type: string
        type: array
        description: "The list of languages. (Format: xx)    <br>  \n    Acceptable
          values are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\":
          English    <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French
          \   <br>  \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>
          \ \n     - \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n
          \    - \"tr\": Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     -
          \"sv\": Swedish    <br>  \n     - \"de\": German    <br>  \n     - \"ru\":
          Russian    <br>  \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\":
          Brazilian Portuguese"
      password:
        type: string
        description: The password of the user.
      properties:
        type: string
        description: 'The properties of the user. (Format: JSON object)'
  Tutorial:
    required:
    - name
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the element.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"DRAFT\": The model is a draft.    <br>  \n     -
          \"REFUSED\": The model has been rejected.    <br>  \n     - \"TO_VALIDATE\":
          The model is pending validation.    <br>  \n     - \"LIVE\": The model is
          validated.    <br>  \n     - \"ARCHIVE\": The model is archived.    <br>
          \ \n     - \"DELETED\": The model is deleted."
      properties:
        type: string
        description: 'The properties of the menu item. (Format: JSON object)'
      startAt:
        type: string
        description: The date the tutorials start to appear
      name:
        type: string
        description: The name of the tutorial.
      endAt:
        type: string
        description: The date the tutorials stop appearing
      functionalInnerId:
        type: string
        description: A code to describe the object.
      slides:
        items:
          "$ref": "#/definitions/Slide"
        type: array
        description: The list of slides contained in the tutorial.
      instance:
        type: string
        description: The ID of the instance.
      displayAgainTime:
        type: string
        description: 'The last time the tutorial was forced to be displayed (Format:
          UTC date-time).'
      feeds:
        items:
          type: string
        type: array
        description: The list of ID of feeds allowed to access the tutorial.
      id:
        type: string
      displayAgain:
        type: boolean
      uid:
        type: string
  CloudSearchSearchResult:
    required:
    - metadata
    type: object
    properties:
      title:
        type: string
        description: "*beta* The title of the found document."
      url:
        type: string
        description: "*beta* The address at which the document may be found."
      media:
        description: "*beta* If this result is a media, a subset of the media."
        "$ref": "#/definitions/CloudSearchMedia"
      community:
        description: "*beta* If this result is a community, a subset of the community."
        "$ref": "#/definitions/CloudSearchCommunity"
      snippet:
        description: "*beta* The excerpt of the document that matches the query string."
        "$ref": "#/definitions/Snippet"
      directoryEntry:
        description: "*beta* If this result is an directory entry, a subset of the
          article."
        "$ref": "#/definitions/CloudSearchDirectoryEntry"
      user:
        description: "*beta* If this result is a user, a subset of the user."
        "$ref": "#/definitions/CloudSearchUser"
      article:
        description: "*beta* If this result is an article, a subset of the article."
        "$ref": "#/definitions/CloudSearchArticle"
      post:
        description: "*beta* If this result is a post, a subset of the post."
        "$ref": "#/definitions/CloudSearchPost"
      metadata:
        description: "*beta* A set of metadata concerning the document."
        "$ref": "#/definitions/CloudSearchMetadata"
  CloudSearchIntegerValues:
    type: object
    properties:
      values:
        items:
          type: string
        type: array
        description: "*beta* The values of the field."
  CreateRequest:
    required:
    - groupEmail
    type: object
    properties:
      groupType:
        type: string
        description: The group type. It can be Unified, DynamicMembership or Security.
          Only relevant for Microsoft.
      callId:
        type: string
        description: The ID of the call.
      description:
        type: string
        description: The group description.
      name:
        type: string
        description: The group name.
      groupEmail:
        type: string
        description: The group email.
  EmptyResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
  ItemsListResponse:
    type: object
    properties:
      items:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: The list of returned items.
      errors:
        items:
          "$ref": "#/definitions/ErrorReasonKeysOnly"
        type: array
        description: The list of errors and their relative target.
  PathDescriptor:
    type: object
    properties:
      depth:
        type: integer
        description: The path depth of the folder.
        format: int32
      folderUid:
        type: string
        description: The uid of the parent at this level of path.
      parent:
        type: string
        description: The parent folder at this level of path.
      folderName:
        type: string
        description: The name of the parent folder at this level of path.
  DirectoryListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Directory"
        type: array
        description: The list of returned items.
  Authorization:
    type: object
    properties:
      uid:
        type: string
        description: The unique identifier.
      canEditOnlyOwnContent:
        type: boolean
        description: Whether the user is restricted to his own content.
      actions:
        items:
          "$ref": "#/definitions/AuthorizationAction"
        type: array
        description: The list of actions.
      navigationUuids:
        items:
          type: string
        type: array
        description: The list of navigation items related to the authorization.
      feeds:
        items:
          type: string
        type: array
        description: The list of feed IDs.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata.
  UserProfile:
    type: object
    properties:
      name:
        description: Name of the user.
        "$ref": "#/definitions/Name"
      photoUrl:
        type: string
        description: URL of user's profile photo.
      emailAddress:
        type: string
        description: Email address of the user.
      verifiedTeacher:
        type: boolean
        description: |-
          Represents whether a G Suite for Education user's domain
                                                                  administrator has explicitly verified them as being a teacher.
                                                                  If the user is not a member of a G Suite for Education domain,
                                                                  than this field will always be false.
      id:
        type: string
        description: Identifier of the user.
      permissions:
        items:
          "$ref": "#/definitions/GlobalPermission"
        type: array
        description: Global permissions of the user.
  PostPinRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      communityId:
        type: string
        description: The ID of the community where to pin this post.
      uid:
        type: string
        description: The ID of the post to pin.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  Tagz:
    type: object
    properties:
      tag_by:
        type: string
        description: The user who tagged the Tagz.
      tag_date:
        type: string
        description: 'The tag date (Format: UTC date-time).'
      id:
        type: string
        description: The tag id
      label:
        type: string
        description: The label of the Tagz.
  MobileLogo:
    type: object
    properties:
      url:
        type: string
        description: The URL of the logo.
      blobKey:
        type: string
        description: The blob key of the logo.
  SystemInfo:
    type: object
    properties:
      status:
        default: LIVE
        type: string
      updatedAt:
        type: string
      statusChangedAt:
        type: string
      creatorId:
        type: string
      statusChangedAuthorId:
        type: string
      lastUpdaterId:
        type: string
      createdAt:
        type: string
  CommentListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Comment"
        type: array
        description: The list of returned items.
  NewsletterListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Newsletter"
        type: array
        description: The list of returned items.
  CloudSearchStringValues:
    type: object
    properties:
      values:
        items:
          type: string
        type: array
        description: "*beta* The values of the field."
  InstanceListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Instance"
        type: array
        description: The list of returned items.
  CustomerListRequest:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
  ReferencePeriod:
    type: object
    properties:
      kind:
        default: Week
        type: string
        description: Week <br> TwoWeeks <br> Month <br> ThreeMonths <br> Custom <br>
          Day <br> Unlimited
      beginningAt:
        type: string
      endAt:
        type: string
  WidgetListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Widget"
        type: array
        description: The list of returned items.
  DataSourceDescription:
    required:
    - uid
    type: object
    properties:
      isMetadataVisible:
        type: boolean
        description: "*beta* Whether the metadata will be visible for this source
          results."
      isSnippetVisible:
        type: boolean
        description: "*beta* Whether the snippet will be visible for this source results."
      uid:
        type: string
        description: "*beta* The uid of the source."
      url:
        type: string
        description: "*beta* The url of the custom tab."
      enabled:
        type: boolean
        description: "*beta* Whether this datasource has been enabled by the administrator."
      kind:
        type: string
        description: "*beta* The kind of the source."
      height:
        type: string
        description: "*beta* The height of the iframe custom tab."
      docPath:
        type: string
        description: "*secret option* The drive that shall be used to restrain the
          search feature (applies to SharePoint and Google Drive)"
      resultsCount:
        type: string
        description: "*beta* The number of results for this tab."
      sendUserIdentity:
        type: boolean
        description: "*beta* send user identity in the form of a jwt token"
      template:
        type: string
        description: "*beta* The template of the source."
      customFields:
        items:
          "$ref": "#/definitions/CustomField"
        type: array
        description: "*beta* The custom fields for this source."
      localizedName:
        type: string
        description: "*beta* The localized human-readable name of the source."
      type:
        type: string
        description: "*beta* The type of the custom tab."
      order:
        type: string
        description: "*beta* The order of the source."
      icon:
        type: string
        description: "*beta* The icon associated to the source."
  MultipleChoiceQuestion:
    type: object
    properties:
      choices:
        items:
          type: string
        type: array
        description: Possible choices.
  Feed:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      status:
        default: enabled
        type: string
        description: "The status of the element.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"DRAFT\": The model is a draft.    <br>  \n     -
          \"REFUSED\": The model has been rejected.    <br>  \n     - \"TO_VALIDATE\":
          The model is pending validation.    <br>  \n     - \"LIVE\": The model is
          validated.    <br>  \n     - \"ARCHIVE\": The model is archived.    <br>
          \ \n     - \"DELETED\": The model is deleted."
      group:
        type: string
        description: "*deprecated* The email of the Google group synchronized with
          the feed."
      identityProvider:
        type: string
        description: "*deprecated* Identifier of the provider (uuid) to use to retrieve
          group members. (Format: uuid)"
      synchronized:
        type: boolean
        description: Whether the feed has been created automatically based on a Google
          Apps pattern.
      synchronizedAt:
        type: string
        description: 'The last synchronization date. (Format: UTC date-time)'
      functionalInnerId:
        type: string
        description: A code to describe the object.
      instance:
        type: string
        description: The ID of the instance.
      synchronizationInProgress:
        type: boolean
        description: 'Whether the customer is currently synchronizing. (Default: false,
          Read-only)'
      groups:
        items:
          "$ref": "#/definitions/FeedGroup"
        type: array
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      uid:
        type: string
      heritable:
        type: boolean
        description: Whether the feed can be used on sub-instances.
      type:
        type: string
        description: The type of the feed.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      name:
        type: string
        description: The name of the feed.
  CloudSearchSuggestRequest:
    type: object
    properties:
      query:
        type: string
        description: "*beta* The query used to filter the result."
      sources:
        items:
          type: string
        type: array
        description: "*beta* The list of sources to query."
  RoleCheckResponse:
    required:
    - allowed
    type: object
    properties:
      allowed:
        type: boolean
        description: Whether the user is authorized to do an action
  SearchContentRequest:
    type: object
    properties:
      feed:
        items:
          type: string
        type: array
        description: The list of user groups used to filter the search result.
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      query:
        type: string
        description: The query used to filter the result.
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
        format: int64
      isPinned:
        type: boolean
        description: Whether to filter by pinned posts or not.
      author:
        type: string
        description: The creator of the content.
      isFeatured:
        type: boolean
        description: Whether the content is a breaking news.
      callId:
        type: string
        description: The ID of the call.
      endDateFrom:
        type: string
        description: 'The content end date should be newer than this date (Format:
          UTC date-time).'
      instance:
        type: string
        description: The ID of the instance.
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      showAll:
        type: boolean
        description: Show all communities if in admin panel
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content type.
      type:
        items:
          type: string
        type: array
        description: The types of content used to filter the search result.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata required for a model to be part of the result.
      lang:
        items:
          type: string
        type: array
        description: "The list of languages. (Format: xx)  <br> \n    Acceptable values
          are:  <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br>
          \n     - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      tags:
        items:
          type: string
        type: array
        description: The tags of the content.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      currentInstance:
        type: string
        description: The ID of the current instance.
      customContentType:
        type: string
        description: "The custom type of the content.  <br> \n        This is only
          applicable if type is custom."
      customer:
        type: string
        description: The ID of the customer.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      endDateTo:
        type: string
        description: 'The content end date should be older than this date (Format:
          UTC date-time).'
      orMetadata:
        items:
          type: string
        type: array
        description: The list of metadata in which a model needs to have at least
          one of them to be part of the result.
      excludeType:
        items:
          type: string
        type: array
        description: The types of content excluded from the search.
      instanceIds:
        items:
          type: string
        type: array
        description: The list of instance identifiers.
  DriveMoveFileRequest:
    type: object
    properties:
      title:
        type: string
        description: The title of the file.
      target:
        type: string
        description: The ID of the folder to move the file in.
      keepOriginFolder:
        type: boolean
        description: 'Whether to let the file in the source folder. (Default: false)'
      fileId:
        type: string
        description: The ID of the file to move.
  DirectoryEntry:
    required:
    - directory
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      uid:
        type: string
      directoryAllowsFavorites:
        type: boolean
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      id:
        type: string
      isInFavoriteFeedKeys:
        items:
          type: string
        type: array
        description: "*deprecated* The list of feeds for which the entry is in favorite."
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      externalKey:
        type: string
        description: "*deprecated* The external key to link a content, directory entry
          or other.."
      markedAsFavorite:
        type: boolean
        description: Whether this is a favorite of the user requesting for it.
      functionalInnerId:
        type: string
        description: A code to describe the object.
      thumbnail:
        type: string
        description: The thumbnail of the entry.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata.
      feedKeys:
        items:
          type: string
        type: array
        description: The list of feeds of the entry.
      tags:
        items:
          type: string
        type: array
        description: The list of tags.
      favoritesCount:
        type: integer
        description: "*deprecated* The number of favorites. Acceptable values are
          0 to MAX_INT, inclusive. (Default: 0)."
        format: int32
      link:
        type: string
        description: 'The link of the entry. (Format: JSON object)'
      user:
        type: string
        description: The optional owner of the entry.
      tagsDetails:
        items:
          "$ref": "#/definitions/DirectoryTag"
        type: array
      name:
        type: string
        description: 'The name of the entry. (Format: JSON object)'
      public:
        type: boolean
        description: 'Whether the entry is public. (Default: false)'
      values:
        type: string
        description: 'The value of the entry. (Format: JSON object)'
      deletableFromFavorite:
        type: boolean
        description: "*deprecated* Whether the entry can be removed from favorites."
      directory:
        type: string
        description: The directory of the entry.
      order:
        type: integer
        description: 'The position of the entry. Acceptable values are 0 to MAX_INT,
          inclusive. (Default: 0)'
        format: int32
  ErrorReasonKeysOnly:
    type: object
    properties:
      reason:
        type: string
        description: The error description.
      target:
        description: The invalid media.
        "$ref": "#/definitions/CompleteDatastoreKey"
  CustomContentTypeTag:
    required:
    - uuid
    type: object
    properties:
      uid:
        type: string
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      id:
        type: string
      name:
        type: string
        description: The name of the tag of the custom content type.
      functionalInnerId:
        type: string
        description: A code to describe the object.
  SearchDirectoryEntryResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      queryId:
        type: string
        description: The id of the query.
      items:
        items:
          "$ref": "#/definitions/DirectoryEntry"
        type: array
        description: The list of returned items.
  DriveUpdateFileRequest:
    type: object
    properties:
      title:
        type: string
        description: The title of the file.
      kind:
        type: string
        description: Kind of Drive file
      parentId:
        type: string
        description: The ID of the folder to create the file in.
      description:
        type: string
        description: A short description of the file.
      fileId:
        type: string
        description: The ID of the file.
  ? UserProto_id_uid_url_profileId_loginId_email_firstName_lastName_lang_langs_properties_subscriptions_isSuperAdmin_apiProfile_customer_employeeId_synchronized_devices_changePasswordAtNextLogin_status_accountType_instancesSuperAdmin_identityProvider_directoryFavorites_hiddenDirectoryFavorites_createdAt_updatedAt_customProfile_emailNotifications_profilePicture_isHidden_alternateEmail_lastSynchronization_expirationDate_profileStatus_externalDirectoryUrl_settings_unreadNotificationCount_profilePictureUrl_tutorials_gamification_fullName_isGod_isDesigner_loginProvider_socialAdvocacyRoles_socialAdvocacyPermissions_socialNetworkAccesses_canAccessSA_password_contentId
  : type: object
    properties:
      status:
        default: enabled
        type: string
        description: "The status of the user.    <br>  \n    Acceptable values are:
          \   <br>  \n     - \"ENABLED\": The user account is still live. (default)
          \   <br>  \n     - \"DISABLED\": The user account has been deactivated."
      uid:
        type: string
      synchronized:
        type: boolean
        description: 'Whether the user is synchronized. (Default: false)'
      unreadNotificationCount:
        type: integer
        description: "*deprecated* The count of unread notifications."
        format: int32
      loginProvider:
        type: string
        description: The provider type used to login the user.
      expirationDate:
        type: string
        description: The date after which this account will be automatically disabled
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      instancesSuperAdmin:
        items:
          type: string
        type: array
        description: The list of instances in which the user is an administrator.
      customProfile:
        type: string
        description: 'The custom profile of the user. (Format: JSON object)'
      employeeId:
        type: string
        description: The ID of the user in the company.
      apiProfile:
        type: string
        description: 'The API profile of the user. (Format: JSON object)'
      socialAdvocacyRoles:
        items:
          type: string
        type: array
        description: The user's roles for social advocacy.
      gamification:
        description: The gamification profile of the user
        "$ref": "#/definitions/UserGamification"
      tutorials:
        type: string
        description: 'List of tutorials. (Format: JSON object)'
      isDesigner:
        type: boolean
      socialNetworkAccesses:
        items:
          "$ref": "#/definitions/SocialNetworkAccess"
        type: array
        description: The platform social access (i.e. linkedin).
      profilePictureUrl:
        type: string
      isHidden:
        type: boolean
        description: 'Whether the user is hidden. (Default: false)'
      email:
        type: string
        description: The email address of the user.
      loginId:
        type: string
        description: The ID use for the login (email for GS, upn for MS, ...).
      socialAdvocacyPermissions:
        items:
          type: string
        type: array
        description: The user's permissions for social advocacy.
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      identityProvider:
        type: string
        description: 'The provider with used to create the user. (Format: uuid)'
      emailNotifications:
        description: "*deprecated* The list of email notifications."
        "$ref": "#/definitions/UserEmailNotification"
      subscriptions:
        items:
          "$ref": "#/definitions/UserSubscription"
        type: array
        description: The list of user subscriptions.
      profileStatus:
        type: string
        description: Profile status for the user
      isSuperAdmin:
        type: boolean
        description: 'Whether the user is an administrator. (Default: false)'
      lastSynchronization:
        type: string
        description: 'The date when the user has been synchronized for the last time.
          (Format: UTC date-time)'
      profilePicture:
        type: string
        description: The profile picture of the user.
      accountType:
        type: string
        description: "The type of the user account.    <br>  \n        Acceptable
          values are:    <br>  \n         - \"EXTERNAL\": External account.    <br>
          \ \n         - \"GOOGLE\": Google account."
      langs:
        items:
          type: string
        type: array
        description: "The list of languages. (Format: xx)    <br>  \n    Acceptable
          values are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\":
          English    <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French
          \   <br>  \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>
          \ \n     - \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n
          \    - \"tr\": Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     -
          \"sv\": Swedish    <br>  \n     - \"de\": German    <br>  \n     - \"ru\":
          Russian    <br>  \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\":
          Brazilian Portuguese"
      fullName:
        type: string
      password:
        type: string
        description: The password of the user.
      properties:
        type: string
        description: 'The properties of the user. (Format: JSON object)'
      customer:
        type: string
        description: The customer of the user.
      hiddenDirectoryFavorites:
        items:
          type: string
        type: array
        description: "*deprecated* The list of hidden favorite directories."
      firstName:
        type: string
        description: The first name of the user.
      settings:
        description: General settings for this user
        "$ref": "#/definitions/UserSettings"
      alternateEmail:
        type: string
        description: The alternative email of the user.
      contentId:
        type: string
      lastName:
        type: string
        description: The last name of the user.
      devices:
        items:
          "$ref": "#/definitions/Device"
        type: array
        description: The list of devices.
      changePasswordAtNextLogin:
        type: boolean
        description: 'Whether the user needs to change his password during his next
          login. (Default: false)'
      externalDirectoryUrl:
        type: string
      isGod:
        type: boolean
      url:
        type: string
      profileId:
        type: string
        description: The ID of the profile.
      directoryFavorites:
        items:
          type: string
        type: array
        description: "*deprecated* The list of favorite directories."
      canAccessSA:
        type: boolean
  Content:
    type: object
    properties:
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      liked:
        type: boolean
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      uid:
        type: string
      isHomepage:
        type: boolean
      publishers:
        items:
          type: string
        type: array
        description: The list of feeds being able to publish the content.
      updatedByDetails:
        type: string
      headerDetails:
        type: string
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      excerpt:
        type: string
      isDefaultUserDirectory:
        type: boolean
      featuredFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which this content is promoted.
      hasCommentWidget:
        type: boolean
      header:
        type: string
        description: The header of the content.
      notificationsEnabled:
        type: boolean
      likes:
        type: string
      readers:
        items:
          type: string
        type: array
        description: The list of feeds being able to read the content.
      type:
        type: string
        description: The type of the content.
      subtitle:
        type: string
        description: The subtitle of the content.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      featuredStartDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      writer:
        type: string
        description: "*deprecated* The editor's email of the content."
      weight:
        type: number
        description: 'The weight of the content. Acceptable values are 0.0 to MAX_FLOAT,
          inclusive. (Default: 0.0)'
        format: double
      author:
        type: string
        description: "*deprecated* The author's email of the content."
      isFeatured:
        type: boolean
        description: 'Whether the content is featured. (Default: false)'
      userContent:
        "$ref": "#/definitions/UserContent"
      editors:
        items:
          type: string
        type: array
        description: The list of feeds being able to edit the content.
      comments:
        type: string
      properties:
        type: string
        description: 'The properties of the content. (Format: JSON object)'
      deleters:
        items:
          type: string
        type: array
        description: The list of feeds being able to delete the content.
      instance:
        type: string
        description: The instance.
      thumbnailBlobkey:
        type: string
      notifyFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs to notify.
      relevantCommentDetails:
        "$ref": "#/definitions/Comment"
      writerDetails:
        type: string
      canMarkRelevant:
        type: boolean
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content types.
      lastRevision:
        description: The last revision of the content.
        "$ref": "#/definitions/ContentLastRevision"
      template:
        description: The template of the content.
        "$ref": "#/definitions/Template"
      isCustomizableLayout:
        type: boolean
        description: 'Whether the layout is customizable. (Default: false)'
      isDefaultContentList:
        type: boolean
      metadata:
        items:
          type: string
        type: array
        description: The list of content metadata.
      feedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs.
      customer:
        type: string
        description: The customer.
      canonicalUrl:
        type: string
      hasRelevantComment:
        type: boolean
        description: Whether if this post has a relevant comment
      tags:
        items:
          type: string
        type: array
        description: The list of content tags.
      authorDetails:
        type: string
      version:
        type: integer
        description: 'The version number of the content. Acceptable values are 0 to
          MAX_INT, inclusive. (Default: 0)'
        format: int32
      analyticsViewSum:
        type: integer
        description: The analytics view count.
        format: int32
      archivers:
        items:
          type: string
        type: array
        description: The list of feeds being able to archive the content.
      authorId:
        type: string
        description: The author of the content.
      isNavItem:
        type: boolean
        description: Whether the content is a menu item. (Default:false)
      link:
        type: string
        description: The link of the content.
      tagz:
        items:
          "$ref": "#/definitions/Tagz"
        type: array
        description: The list of content tagz.
      updatedById:
        type: string
        description: The latest modifier.
      updatedBy:
        type: string
        description: "*deprecated* The latest modifier's email."
      relevantComment:
        type: string
        description: The relevant comment for this post, if any
      writerId:
        type: string
        description: The author of the content.
      customContentType:
        type: string
        description: "The custom type of the content.    <br>  \n        This is only
          applicable if type is custom."
      customContentTypeDetails:
        type: string
      subscription:
        "$ref": "#/definitions/Subscription"
      count:
        type: string
        format: int64
      slug:
        type: string
        description: The short text used in the URL used to access the content.
      url:
        type: string
      parentsNavigation:
        items:
          "$ref": "#/definitions/ContentMenuList"
        type: array
        description: The list of parents in navigation.
      featuredEndDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      notifyAuthor:
        type: boolean
        description: 'Whether the author has to be notified for any change. (Default:
          false)'
      thumbnail:
        type: string
        description: The thumbnail of the content.
      tagsDetails:
        items:
          "$ref": "#/definitions/Tag"
        type: array
      notifyUsers:
        type: boolean
        description: 'Whether users have to be notified for any change. (Default:
          false)'
      public:
        type: boolean
        description: Whether the content is public.
      reportDetails:
        type: string
      shareable:
        type: boolean
        description: 'Whether the content is shareable externally (for future use,
          not available in the API). (Default: false)'
      subscribedFeedKeys:
        items:
          type: string
        type: array
        description: The list of feeds IDs for which members are automatically subscribed.
      following:
        type: boolean
      title:
        type: string
        description: The title of the content.
      parentCustomContentType:
        type: string
        description: The CustomContentTypeId of the parent with "heritable" set to
          true (only for "News" and "Page").
      navigation:
        items:
          "$ref": "#/definitions/ContentNavigation"
        type: array
        description: The list of content menu items.
      canEdit:
        type: boolean
      mediaThumbnail:
        description: Media used as thumbnail of the content.
        "$ref": "#/definitions/Media"
      publicationDate:
        type: string
        description: 'The publication date (Format: UTC date-time).'
  PostShareRequest:
    required:
    - postId
    type: object
    properties:
      addToCommunities:
        items:
          type: string
        type: array
        description: The list of IDs of the communities where to share the post.
      postId:
        type: string
        description: The ID of the post to share.
      callId:
        type: string
        description: The ID of the call.
  FiltersSaveRequest:
    type: object
    properties:
      filters:
        items:
          "$ref": "#/definitions/Filter"
        type: array
        description: List of filters for the customer.
  AdminRequest:
    required:
    - email
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      email:
        type: string
        description: The list of email addresses used to filter the admin list.
  ContentRevision:
    required:
    - content
    - contentKey
    type: object
    properties:
      status:
        default: ARCHIVE
        type: string
        description: "The status of the element.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"DRAFT\": The model is a draft.    <br>  \n     -
          \"REFUSED\": The model has been rejected.    <br>  \n     - \"TO_VALIDATE\":
          The model is pending validation.    <br>  \n     - \"LIVE\": The model is
          validated.    <br>  \n     - \"ARCHIVE\": The model is archived.    <br>
          \ \n     - \"DELETED\": The model is deleted."
      uid:
        type: string
      createdByDetails:
        type: string
      content:
        description: The content.
        "$ref": "#/definitions/Content"
      version:
        type: integer
        description: 'The version number of the content. Acceptable values are 0 to
          MAX_INT, inclusive. (Default: 0)'
        format: int32
      contentKey:
        type: string
        description: The key of the content.
      createdBy:
        type: string
        description: The user who created the object.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  CloudSearchMedia:
    type: object
    properties:
      mimeType:
        type: string
        description: The MIME type of the media.
      tagsDetails:
        items:
          "$ref": "#/definitions/EntityDetails"
        type: array
        description: 'Metadatas details list object : [{id, name, parent: {id, name}}]'
      slug:
        type: string
        description: The localized human-readable name of media slug
      description:
        type: string
        description: The description of the media.
      instanceDetails:
        description: 'Instance details object : {id, name}'
        "$ref": "#/definitions/EntityDetails"
      tags:
        items:
          type: string
        type: array
        description: The tags list of media
      language:
        type: string
        description: The language of the media.
      type:
        type: string
        description: The media type.
      authorDetails:
        description: 'The author details object of media: {id, name}'
        "$ref": "#/definitions/CloudSearchUser"
      thumbnail:
        type: string
        description: The thumbnail of the media.
      height:
        type: string
        description: The height of the image, if any.
      instance:
        type: string
        description: The instance id of the media
      width:
        type: string
        description: The width of the image, if any.
      url:
        type: string
        description: The url of media.
      uid:
        type: string
        description: The uid of media
      size:
        type: string
        description: The size of the media, in bytes.
      mediaName:
        type: string
        description: The media name.
      id:
        type: string
        description: The id of media
      name:
        type: string
        description: The media name.
  CourseMaterialSet:
    type: object
    properties:
      materials:
        description: Materials attached to this set.
        "$ref": "#/definitions/CourseMaterial"
      title:
        type: string
        description: Title for this set.
  WidgetVideo:
    required:
    - url
    type: object
    properties:
      lang:
        type: string
        description: The lang for this widget
      url:
        type: string
        description: The video url
      title:
        type: string
        description: The video title
      description:
        type: string
        description: The video description
      thumbnail:
        type: string
        description: The video thumbnail
  InnerUser:
    type: object
    properties:
      fullName:
        type: string
        description: The user's first and last names
      email:
        type: string
        description: The user's email
  InterestListResponse:
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Interest"
        type: array
        description: The list of returned items.
  TagListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Tag"
        type: array
        description: The list of returned items.
  RoleCheckRequest:
    type: object
    properties:
      instance:
        type: string
        description: The ID of the instance.
      feeds:
        items:
          type: string
        type: array
        description: The list of feeds concerned by the actions.
      actions:
        items:
          type: string
        type: array
        description: The list of actions to check.
  WidgetFilesListRequest:
    required:
    - contentId
    - lang
    - maxResults
    - widgetId
    type: object
    properties:
      lang:
        type: string
        description: The language used for search purposes.
      docPath:
        type: string
        description: The docPath of the document
      widgetId:
        type: string
        description: The widgetId.
      callId:
        type: string
        description: The ID of the call.
      maxResults:
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      contentId:
        type: string
        description: The contentId.
  CloudSearchDoubleValues:
    type: object
    properties:
      values:
        items:
          type: string
        type: array
        description: "*beta* The values of the field."
  CloudSearchSpellResult:
    type: object
    properties:
      suggestedQuery:
        type: string
        description: "*beta* proposed query string."
  PersonName:
    type: object
    properties:
      displayName:
        type: string
        description: The name of the person.
  ProviderListResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      providers:
        items:
          "$ref": "#/definitions/Provider"
        type: array
        description: The providers for the user
  PostListRequest:
    required:
    - lang
    type: object
    properties:
      postStatus:
        items:
          type: string
        type: array
        description: The post custom status to filter.
      instanceId:
        items:
          type: string
        type: array
        description: The ID of the instance.
      reportStatus:
        type: string
        description: The post report status
      eventStartAfter:
        type: string
        description: Event start after
      eventEndAfter:
        type: string
        description: Event end after
      query:
        type: string
        description: The query used to filter the result.
      isPinned:
        type: boolean
        description: Whether to filter by pinned posts or not.
      author:
        type: string
        description: The ID of the author.
      callId:
        type: string
        description: The ID of the call.
      minScore:
        type: string
        description: The post minimum score to filter.
      hasRelevant:
        type: boolean
        description: Whether to include posts having relevant comment?
      sortOrder:
        items:
          type: string
        type: array
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      postType:
        items:
          type: string
        type: array
        description: The post types to filter.
      isMerged:
        type: boolean
        description: Whether to include posts marked as duplicated?. This attribute
          is deprecated, and its value will be ignored.
      eventStartBefore:
        type: string
        description: Event start before
      isOpen:
        type: boolean
        description: Whether to filter by open posts or closed posts.
      tags:
        items:
          type: string
        type: array
        description: A list of tags to filter posts.
      maxScore:
        type: string
        description: The post maximum score to filter.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      currentInstance:
        type: string
        description: The ID of the current instance.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      isCommunityAdmin:
        type: boolean
        description: Get only communities where user is administrator
      hasAttachments:
        type: boolean
        description: Get only posts with or without attachments
      contentId:
        items:
          type: string
        type: array
        description: The ID of the content(s) containing the community(ies).
      ids:
        items:
          type: string
        type: array
        description: The list of posts IDs.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      followingOnly:
        type: boolean
        description: List only posts for community current user is following.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      isMergePending:
        type: boolean
        description: Whether to include posts marked as duplicated but not yet approved?
          This attribute is deprecated, and its value will be ignored.
      eventEndBefore:
        type: string
        description: Event end before
      customerId:
        type: string
        description: The ID of the customer.
  AllRights:
    type: object
    properties:
      readOnly:
        type: string
        description: The users rights on the open community drive folder (can be read
          or write)
      open:
        type: string
        description: The users rights on the open community drive folder (can be read
          or write)
      groupIdentifier:
        type: string
        description: The email or uuid of a provider group
  MobileCustomization:
    type: object
    properties:
      logo:
        description: The mobile customization logo.
        "$ref": "#/definitions/MobileLogo"
      secondaryColor:
        type: string
        description: The second customer color hexadecimal.
      primaryAsBackground:
        type: boolean
        description: Whether enable primary color as background color.
      primaryColor:
        type: string
        description: The main customer color hexadecimal.
  ContentListRequest:
    required:
    - lang
    type: object
    properties:
      feed:
        items:
          type: string
        type: array
        description: The list of user groups used to filter the list.
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      instanceId:
        items:
          type: string
        type: array
        description: The list of instance IDs.
      query:
        type: string
        description: The query used to filter the result.
      userFavoritesOnly:
        type: boolean
        description: Limit the response to the contents that the user has marked as
          favorite (directly or indirectly).
      featuredFeed:
        items:
          type: string
        type: array
        description: The list of user groups for which content is promoted, used to
          filter the list.
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      author:
        type: string
        description: The email of the creator of the content.
      isFeatured:
        type: boolean
        description: 'Whether the content is featured. (Default: false)'
      callId:
        type: string
        description: The ID of the call.
      orMetadata:
        items:
          type: string
        type: array
        description: The list of metadata in which a model needs to have at least
          one of them to be part of the result.
      customContentType:
        items:
          type: string
        type: array
        description: The list of custom content types.
      endDateFrom:
        type: string
        description: 'The content end date should be newer than this date (Format:
          UTC date-time).'
      combinedMetadata:
        items:
          "$ref": "#/definitions/MetadataClauses"
        type: array
        description: The list of metadata lists.
      hidden:
        type: boolean
        description: 'Whether the content is hidden. (Default: false)'
      type:
        items:
          type: string
        type: array
        description: The list of content types.
      queryType:
        type: string
        description: The type of the query.
      metadata:
        items:
          type: string
        type: array
        description: The list of metadata required for a model to be part of the result.
      status:
        items:
          type: string
        type: array
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      sortOrder:
        items:
          type: string
        type: array
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      parent:
        type: string
        description: The ID of the parent content.
      parentUuid:
        type: string
        description: |-
          The universally unique identifier of the parent in navigation of the contents.
                  (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      excludeStatus:
        items:
          type: string
        type: array
        description: 'The list of status excluded from the list.  <br>          Acceptable
          values are:  <br>           - "DRAFT": The model is a draft.  <br>           -
          "REFUSED": The model has been rejected.  <br>           - "TO_VALIDATE":
          The model is pending validation.  <br>           - "LIVE": The model is
          published.  <br>           - "ARCHIVE": The model is archived.  <br>           -
          "DELETED": The model is deleted.'
      isNavItem:
        type: boolean
        description: 'Whether the content is a navigation item. (Default: false)'
      currentInstanceId:
        type: string
        description: The ID of the current instance.
      customContentTypeTags:
        items:
          type: string
        type: array
        description: The tags of the custom content types.
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      onlyFeatureFeeds:
        type: boolean
        description: 'Whether to retrieve contents which have been promoted for some
          users groups. (Default: false)'
      ids:
        items:
          type: string
        type: array
        description: The list of content IDs.
      withReaction:
        type: string
        description: |-
          Retrieve only the contents to which the user has reacted with this kind of reaction
                  (this value will be taken into account only if queryType = 'withReaction')
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      endDateTo:
        type: string
        description: 'The content end date should be older than this date (Format:
          UTC date-time).'
      followingOnly:
        type: boolean
        description: 'Retrieve only contents that user is following. (Default: false)'
      excludeType:
        items:
          type: string
        type: array
        description: The list of content types to exclude.
      action:
        type: string
        description: The authorized action used to filter the list.  <br> If no action,
          user must be super or instance administrator.
      customerId:
        type: string
        description: "The ID of the customer.  <br> \n        Required if the user
          is not connected."
  TokenResponse:
    type: object
    properties:
      expiresAt:
        type: string
        description: The expiration date of the token.
      accessToken:
        type: string
        description: The access token to call the LumApps API.
  ContentMenuList:
    required:
    - lang
    type: object
    properties:
      deleted:
        items:
          "$ref": "#/definitions/ContentMenuDeletedListItem"
        type: array
        description: The list of deleted contents.
      items:
        items:
          "$ref": "#/definitions/ContentMenuListItem"
        type: array
        description: The list of content.
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
  CustomerIDPSaveOrderRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      customerId:
        type: string
        description: The customer for which to save identity providers order.
      orderedUuids:
        items:
          type: string
        type: array
        description: The list of fields that will be returned with the response.
  CloudSearchSourceIdRequest:
    type: object
    properties:
      callId:
        type: string
        description: "*beta* The ID of the call."
      source:
        type: string
        description: "*beta* The source to ask custom fields for."
  PostLocation:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      name:
        type: string
        description: The name of this location.
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      coordinates:
        description: The GPS coordinates of this location (lat,lon).
        "$ref": "#/definitions/GeoPtMessage"
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uid:
        type: string
  AdminPropertiesRequest:
    type: object
    properties:
      properties:
        type: string
        description: The properties of the customer.
  Assignment:
    type: object
    properties:
      studentWorkFolder:
        description: |-
          Drive folder where attachments from student submissions are placed.
                                              This is only populated for course teachers and administrators.
        "$ref": "#/definitions/DriveFile"
  YouTubeVideo:
    type: object
    properties:
      title:
        type: string
        description: Title of the YouTube video.
      thumbnailUrl:
        type: string
        description: URL of a thumbnail image of the Drive item.
      id:
        type: string
        description: YouTube API resource ID.
      alternateLink:
        type: string
        description: URL that can be used to view the YouTube video.
  RegistrationLinkResponse:
    type: object
    properties:
      url:
        type: string
        description: The URL of the registration.
  DriveCopyFileRequest:
    type: object
    properties:
      folder:
        type: string
        description: The ID of the folder to copy the file in.
      title:
        type: string
        description: The title of the file.
      fileId:
        type: string
        description: The ID of the file to copy.
  InstanceListMetadataRequest:
    type: object
    properties:
      rootOnly:
        type: boolean
        description: 'If true, return root metadata only. (Default: false)'
      callId:
        type: string
        description: The ID of the call.
      withInheritance:
        type: boolean
        description: Retrieve metadata from parent instance and plateform.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      instance:
        type: string
        description: The unique identifier.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  GoogleDriveSettings:
    type: object
    properties:
      otherUserGroupRights:
        items:
          "$ref": "#/definitions/OtherUserGroupRights"
        type: array
        description: Non-Google users rights settings on the communities drive folder
      contributorRights:
        description: The contributors rights settings on the communities drive folder
        "$ref": "#/definitions/ContributorAndManagerRights"
      driveFolderDestinationType:
        type: string
        description: The method to set the community drive folder destination (can
          be personal_workspace, team_drive or my_drive)
      driveFolderDestinationPath:
        type: string
        description: The community custom drive folder destination path
      managerRights:
        description: The managers rights settings on the communities drive folder
        "$ref": "#/definitions/ContributorAndManagerRights"
      identityProviderType:
        type: string
  FiltersValuesResponse:
    type: object
    properties:
      items:
        items:
          "$ref": "#/definitions/OneFilterValues"
        type: array
        description: A list of values for each filter.
  CloudSearchSourceCustomFieldsResponse:
    type: object
    properties:
      callId:
        type: string
        description: "*beta* The ID of the call."
      source:
        type: string
        description: "*beta* The source to which the custom fields are related."
      items:
        items:
          "$ref": "#/definitions/CustomField"
        type: array
        description: "*beta* The custom fields for the given source"
  Share:
    type: object
    properties:
      maxCommentLength:
        type: integer
        description: The maximum length of a comment.
        format: int32
      supported:
        type: boolean
        description: Whether this social platform supports share via API.
  CommunityTemplateListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      errors:
        items:
          "$ref": "#/definitions/ErrorReason"
        type: array
        description: The list of errors and their relative target.
      items:
        items:
          "$ref": "#/definitions/CommunityTemplate"
        type: array
        description: The list of returned items.
  CloudSearchNewFacetBucket:
    type: object
    properties:
      count:
        type: string
        description: "*beta* The number of documents for this bucket."
      selected:
        type: boolean
        description: "*beta* Whether the bucket was selected in the query request."
      value:
        type: string
        description: "*beta* The value for this bucket."
      label:
        type: string
        description: The localized human-readable name of the entity.
      range:
        description: "*beta* The start and end indexes where the bucket value has
          been found."
        "$ref": "#/definitions/MatchRanges"
      percentage:
        type: string
        description: "*beta* The percentage of documents for this bucket."
  GetResponse:
    type: object
    properties:
      id:
        type: string
        description: The group ID
      callId:
        type: string
        description: The ID of the call.
      description:
        type: string
        description: The group description.
      name:
        type: string
        description: The group name.
      email:
        type: string
        description: The group email.
  UserGamification:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      badgeId:
        type: string
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      rank:
        description: The ranking of the user.
        "$ref": "#/definitions/LeaderboardPoints"
      userRewardId:
        type: string
        description: The reward (badge) the user want to show-off to other users.
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      points:
        description: The points of the user.
        "$ref": "#/definitions/LeaderboardPoints"
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      badge:
        "$ref": "#/definitions/RewardMedia"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uid:
        type: string
  DocumentPreviewResponse:
    required:
    - previewUrl
    type: object
    properties:
      previewUrl:
        type: string
        description: ''
  CloudSearchDataSourceListMessage:
    required:
    - customerId
    type: object
    properties:
      callId:
        type: string
        description: "*beta* The ID of the call."
      items:
        items:
          "$ref": "#/definitions/DataSourceDescription"
        type: array
        description: "*beta* The list of returned items."
      customerId:
        type: string
        description: "*beta* The ID of the customer."
      fields:
        type: string
        description: "*beta* The list of fields that will be returned with the response."
  CustomerNbUsers:
    type: object
    properties:
      googleEnabled:
        type: integer
        description: 'The number of google enabled users. Acceptable values are 0
          to MAX_INT, inclusive. (Default: 0)'
        format: int32
      google:
        type: integer
        description: 'The number of Google users. Acceptable values are 0 to MAX_INT,
          inclusive. (Default: 0)'
        format: int32
      external:
        type: integer
        description: 'The number of external users. Acceptable values are 0 to MAX_INT,
          inclusive. (Default: 0)'
        format: int32
  NotificationIdsResource:
    type: object
    properties:
      unreadNotificationCount:
        type: string
        description: The number of total of unread notifications.
      notificationIds:
        items:
          type: string
        type: array
        description: The notification ids.
  CreateFolderRequest:
    required:
    - name
    - parentPath
    type: object
    properties:
      description:
        type: string
        description: The description of the folder to create(lumdrive)
      callId:
        type: string
        description: The ID of the call.
      name:
        type: string
        description: The name of the folder to create
      parentPath:
        type: string
        description: Where to create the folder
      shared:
        type: boolean
        description: True if the folder is shared (lumdrive)
      serializedProperties:
        type: string
        description: The serialized properties of the category. Will be used in lumdrive
          if the parameter shared is absent, to determine whether the folder is shared
  SetAllNotificationsReadRequest:
    type: object
    properties:
      externalKey:
        type: string
        description: The external key to link a content, directory entry or other.
      instanceIds:
        items:
          type: string
        type: array
        description: The list of instance identifiers.
      externalKeyKind:
        type: string
        description: The external key kind.
  QuerySourceDescription:
    type: object
    properties:
      filterOptions:
        items:
          "$ref": "#/definitions/QueryFilterOptions"
        type: array
        description: "*beta* The filters for this source."
      source:
        type: string
        description: "*beta* The uid of the source."
  CloudSearchUserOrganization:
    type: object
    properties:
      department:
        type: string
        description: "*beta* The department of the organization to which the user
          belongs to."
      title:
        type: string
        description: "*beta* The title of the user in this organization."
      location:
        type: string
        description: "*beta* The location of the organization."
      name:
        type: string
        description: "*beta* The name of the organization."
  CloudSearchMetadataField:
    type: object
    properties:
      objectValues:
        description: "*beta* The object value of the field."
        "$ref": "#/definitions/CloudSearchObjectValues"
      filterValues:
        description: "*deprecated* The filter value of the field."
        "$ref": "#/definitions/CloudSearchStringValues"
      name:
        type: string
        description: "*beta* The name of the field."
      stringValues:
        description: "*deprecated* The string value of the field."
        "$ref": "#/definitions/CloudSearchStringValues"
      enumValues:
        description: "*beta* The enum value of the field."
        "$ref": "#/definitions/CloudSearchStringValues"
      doubleValues:
        description: "*beta* The double value of the field."
        "$ref": "#/definitions/CloudSearchDoubleValues"
      integerValues:
        description: "*beta* The integer value of the field."
        "$ref": "#/definitions/CloudSearchIntegerValues"
      htmlValues:
        description: "*beta* The html value of the field."
        "$ref": "#/definitions/CloudSearchStringValues"
      dateValues:
        description: "*beta* The date value of the field."
        "$ref": "#/definitions/CloudSearchDateValues"
      booleanValue:
        type: boolean
        description: "*beta* The bool value of the field."
      timestampValues:
        description: "*beta* The timestamp value of the field."
        "$ref": "#/definitions/CloudSearchStringValues"
      textValues:
        description: "*beta* The string value of the field."
        "$ref": "#/definitions/CloudSearchStringValues"
  Submission:
    type: object
    properties:
      draftGrade:
        type: string
        description: |-
          Optional pending grade. If unset, no grade was set.
                                                                This must be a non-negative integer value.
        format: int64
      updateTime:
        type: string
        description: Last update time of this submission.
      alternateLink:
        type: string
        description: Absolute link to the submission in the Classroom web UI.
      courseId:
        type: string
        description: Identifier of the course.
      userId:
        type: string
        description: Identifier for the student that owns this submission.
      creationTime:
        type: string
        description: Creation time of this submission.
      associatedWithDeveloper:
        type: boolean
        description: |-
          Whether this student submission is associated with the Developer
                                                 Console project making the request.
      late:
        type: boolean
        description: Whether this submission is late
      state:
        type: string
        description: State of this submission.
      courseWorkId:
        type: string
        description: Identifier for the course work this corresponds to.
      courseWorkType:
        type: string
        description: Type of course work this submission is for.
      assignedGrade:
        type: string
        description: Optional grade. If unset, no grade was set. This must be a non-negative
          integer value.
        format: int64
      id:
        type: string
        description: Classroom-assigned Identifier for the student submission.
  GenericAnalyticsResponse:
    type: object
    properties:
      indicators:
        items:
          "$ref": "#/definitions/IndicatorDescriptor"
        type: array
        description: The requested indicators.
      callId:
        type: string
        description: The ID of the call.
  DriveInsertRequest:
    type: object
    properties:
      mimeType:
        type: string
        description: The MIME type of the file.
      kind:
        type: string
        description: Kind of Drive file
      title:
        type: string
        description: The title of the file.
      parentId:
        type: string
        description: The ID of the folder to create the file in.
  ErrorReason:
    type: object
    properties:
      reason:
        type: string
        description: The error description.
      target:
        description: The invalid metadata.
        "$ref": "#/definitions/Metadata"
  CreateResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      id:
        type: string
        description: The created group ID.
  Comment:
    type: object
    properties:
      canHide:
        type: boolean
      liked:
        type: boolean
      mentionsFeedKeys:
        items:
          type: string
        type: array
        description: List of feeds id mentioned in comment
      links:
        items:
          "$ref": "#/definitions/AttachedLink"
        type: array
        description: List of links attached to comment
      text:
        type: string
        description: The text of the comment.
      authorProperties:
        type: string
      markedAsRelevant:
        type: integer
        description: Nb times this comment has been marked as relevant
        format: int32
      likes:
        type: string
        description: The number of likes.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      images:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: List of images associated to the comment.
      id:
        type: string
      files:
        items:
          type: string
        type: array
        description: List of files associated to the comment.
      uid:
        type: string
      content:
        type: string
        description: The ID of the content that contains the comment.
      instance:
        type: string
        description: The ID of the instance.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      canMarkRelevant:
        type: boolean
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      answersNumber:
        type: string
      parent:
        type: string
        description: The ID of a comment to attach the comment to.
      user:
        type: string
        description: The ID of the user.
      customer:
        type: string
        description: The ID of the customer.
      mentions:
        items:
          type: string
        type: array
        description: List of users id mentioned in comment
      canEdit:
        type: boolean
      mentionsDetails:
        items:
          "$ref": "#/definitions/User"
        type: array
      reportDetails:
        type: string
  CourseWork:
    required:
    - courseId
    type: object
    properties:
      updateTime:
        type: string
        description: Timestamp of the most recent change to this course work.
      submissionModificationMode:
        type: string
        description: |-
          Setting to determine when students are allowed to modify submissions.
                                                    If unspecified, the default value is MODIFIABLE_UNTIL_TURNED_IN.
      description:
        type: string
        description: Optional description.
      alternateLink:
        type: string
        description: |-
          Absolute link to this course work in the Classroom web UI.
                                                                This is only populated if state is PUBLISHED.
      courseId:
        type: string
        description: Identifier of the course.
      assignment:
        description: Assignment details. This is populated only when workType is ASSIGNMENT.
        "$ref": "#/definitions/Assignment"
      scheduledTime:
        type: string
        description: Optional timestamp when this course work is scheduled to be published.
      creationTime:
        type: string
        description: Timestamp when this course work was created.
      associatedWithDeveloper:
        type: boolean
        description: |-
          Whether this course work item is associated with the Developer
                                                 Console project making the request.
      state:
        type: string
        description: Additional materials.
      materials:
        description: Additional materials. CourseWork must have no more than 20 material
          items.
        "$ref": "#/definitions/Material"
      id:
        type: string
        description: Identifier for this course assigned by Classroom.
      title:
        type: string
        description: Title for this set.
      maxPoints:
        type: string
        description: |-
          Maximum grade for this course work. If zero or unspecified, this assignment is considered
                                   ungraded. This must be a non-negative integer value.
        format: int64
      workType:
        type: string
        description: Type of this course work.
      dueDate:
        description: |-
          Optional date, in UTC, that submissions for this this course
                                                                 work are due. This must be specified if dueTime is specified.
        "$ref": "#/definitions/Date"
      dueTime:
        description: |-
          Optional time of day, in UTC, that submissions for this this course work are due.
                                 This must be specified if dueDate is specified.
        "$ref": "#/definitions/TimeOfDay"
      multipleChoiceQuestion:
        description: Multiple choice question details.
        "$ref": "#/definitions/MultipleChoiceQuestion"
  DocumentUploadRequest:
    required:
    - fileName
    - parentPath
    type: object
    properties:
      lang:
        type: string
        description: The language of the uploaded file(Lumdrive only)
      serializedProperties:
        type: string
        description: The serialized properties of the category. Will be used in lumdrive
          if the parameter shared is absent, to determine whether the file is shared
      callId:
        type: string
        description: The ID of the call.
      fileName:
        type: string
        description: The name of the file to upload
      parentPath:
        type: string
        description: Where to upload the file
      shared:
        type: boolean
        description: True if the file is shared (lumdrive)
  MediaFile:
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      mimeType:
        type: string
        description: The MIME type of the file.
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      focalPoint:
        description: The focal point, if the media is an image
        "$ref": "#/definitions/FocalPoint"
      fileHash:
        type: string
        description: The hash of file in the form algo:hash.
      uid:
        type: string
      url:
        type: string
        description: The URL of file.
      name:
        type: string
        description: The name of the file.
      ext:
        type: string
        description: The extension of the file.
      value:
        type: string
        description: The value of the file.
      height:
        type: integer
        description: "The height of the file.    <br>  \n        This is only applicable
          for images."
        format: int32
      downloadUrl:
        type: string
        description: The url for downloading this file
      width:
        type: integer
        description: "The width of the file.    <br>  \n        This is only applicable
          for images."
        format: int32
      cropInfo:
        description: The info of the cropped content
        "$ref": "#/definitions/CropInfo"
      servingUrl:
        type: string
      owner:
        description: The document owner
        "$ref": "#/definitions/InnerUser"
      size:
        type: integer
        description: The size of the file.
        format: int32
      type:
        type: string
        description: The type of the media.
      fileId:
        type: string
        description: The file identifier on third part.
  TimeSlot:
    type: object
    properties:
      startAt:
        type: string
      endAt:
        type: string
  CommunitySettings:
    required:
    - customerId
    type: object
    properties:
      instanceId:
        type: string
        description: The ID of the instance.
      googleDriveSettings:
        description: The settings for a google community drive
        "$ref": "#/definitions/GoogleDriveSettings"
      id:
        type: string
      driveFolderNameMode:
        type: string
        description: The method to use to name a community drive folder (can be auto
          or pattern)
      microsoftDriveSettings:
        description: The settings for a microsoft community drive
        "$ref": "#/definitions/MicrosoftDriveSettings"
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      driveFolderNamePattern:
        type: string
        description: A validation regex for a community drive folder name
      customerId:
        type: string
        description: The ID of the customer.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  FeedGroup:
    type: object
    properties:
      group:
        type: string
      identityProvider:
        type: string
  CommunitySearchForPostingRequest:
    required:
    - lang
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      instanceId:
        items:
          type: string
        type: array
        description: The list of instance IDs where to search communities. Searches
          everywhere if left empty or omitted.
      callId:
        type: string
        description: The ID of the call.
      maxResults:
        default: 20
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      followingOnly:
        type: boolean
        description: True to restrict the search to communities that the user follows.
      fields:
        type: string
        description: The fields to return in the response.
      query:
        type: string
        description: The query used to filter the result.
  ContentRevisionListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/ContentRevisionProto_id_uid_contentKey_version_status_createdAt_createdBy_createdByDetails"
        type: array
        description: The list of returned items.
  DocumentMoveRequest:
    required:
    - sourcePath
    type: object
    properties:
      sourcePath:
        type: string
        description: The docPath of the document to move
      callId:
        type: string
        description: The ID of the call.
      destinationPath:
        type: string
        description: The docPath of the location where to move to the Document
  ContentRevisionProto_id_uid_contentKey_version_status_createdAt_createdBy_createdByDetails:
    required:
    - contentKey
    type: object
    properties:
      status:
        default: ARCHIVE
        type: string
        description: "The status of the element.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"DRAFT\": The model is a draft.    <br>  \n     -
          \"REFUSED\": The model has been rejected.    <br>  \n     - \"TO_VALIDATE\":
          The model is pending validation.    <br>  \n     - \"LIVE\": The model is
          validated.    <br>  \n     - \"ARCHIVE\": The model is archived.    <br>
          \ \n     - \"DELETED\": The model is deleted."
      uid:
        type: string
      createdByDetails:
        type: string
      version:
        type: integer
        description: 'The version number of the content. Acceptable values are 0 to
          MAX_INT, inclusive. (Default: 0)'
        format: int32
      contentKey:
        type: string
        description: The key of the content.
      createdBy:
        type: string
        description: The user who created the object.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  Provider:
    type: object
    properties:
      driveResourceAuthorized:
        items:
          type: string
        type: array
        description: The list of actions which can be used to create documents for
          this provider
      id:
        type: string
        description: The provider id
      categories:
        items:
          "$ref": "#/definitions/ProviderCategory"
        type: array
        description: The categories for this provider
      sortableFields:
        items:
          type: string
        type: array
        description: The list of fields which can be used for sorting documents for
          this provider
  AttachedLink:
    required:
    - lang
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      description:
        type: string
        description: Attached link description
      title:
        type: string
        description: Attached link title
      url:
        type: string
        description: Attached link URL
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      videoId:
        type: string
        description: Video identifier when a video is associated
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      thumbnailIndex:
        type: string
        description: Thumbnail selected index for a link
        format: int64
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      images:
        items:
          type: string
        type: array
        description: List of associated images (url)
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uid:
        type: string
  LevelFilter:
    required:
    - kind
    - uid
    type: object
    properties:
      kind:
        type: string
        description: The kind of entity being filtered on.
      uid:
        type: string
        description: The unique identifier.
  SocialNetworkCapability:
    type: object
    properties:
      stats:
        description: The statistics capabilities of the social platform.
        "$ref": "#/definitions/Stats"
      share:
        description: The share capabilities of the social platform.
        "$ref": "#/definitions/Share"
      socialNetworkId:
        type: string
        description: The social platform id.
  DocumentUserPermissionResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      isWriter:
        type: boolean
        description: The boolean according to user rights on a specific document
      unavailable:
        type: boolean
        description: True if user permission can't be retrieved
  CourseWorkListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/CourseWork"
        type: array
        description: The list of returned items.
  User:
    type: object
    properties:
      status:
        default: enabled
        type: string
        description: "The status of the user.    <br>  \n    Acceptable values are:
          \   <br>  \n     - \"ENABLED\": The user account is still live. (default)
          \   <br>  \n     - \"DISABLED\": The user account has been deactivated."
      uid:
        type: string
      synchronized:
        type: boolean
        description: 'Whether the user is synchronized. (Default: false)'
      unreadNotificationCount:
        type: integer
        description: "*deprecated* The count of unread notifications."
        format: int32
      loginProvider:
        type: string
        description: The provider type used to login the user.
      expirationDate:
        type: string
        description: The date after which this account will be automatically disabled
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      identityProvider:
        type: string
        description: 'The provider with used to create the user. (Format: uuid)'
      customProfile:
        type: string
        description: 'The custom profile of the user. (Format: JSON object)'
      employeeId:
        type: string
        description: The ID of the user in the company.
      apiProfile:
        type: string
        description: 'The API profile of the user. (Format: JSON object)'
      socialAdvocacyRoles:
        items:
          type: string
        type: array
        description: The user's roles for social advocacy.
      gamification:
        description: The gamification profile of the user
        "$ref": "#/definitions/UserGamification"
      tutorials:
        type: string
        description: 'List of tutorials. (Format: JSON object)'
      isDesigner:
        type: boolean
      socialNetworkAccesses:
        items:
          "$ref": "#/definitions/SocialNetworkAccess"
        type: array
        description: The platform social access (i.e. linkedin).
      profilePictureUrl:
        type: string
      isHidden:
        type: boolean
        description: 'Whether the user is hidden. (Default: false)'
      email:
        type: string
        description: The email address of the user.
      loginId:
        type: string
        description: The ID use for the login (email for GS, upn for MS, ...).
      socialAdvocacyPermissions:
        items:
          type: string
        type: array
        description: The user's permissions for social advocacy.
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      instancesSuperAdmin:
        items:
          type: string
        type: array
        description: The list of instances in which the user is an administrator.
      emailNotifications:
        description: "*deprecated* The list of email notifications."
        "$ref": "#/definitions/UserEmailNotification"
      subscriptions:
        items:
          "$ref": "#/definitions/UserSubscription"
        type: array
        description: The list of user subscriptions.
      profileStatus:
        type: string
        description: Profile status for the user
      isSuperAdmin:
        type: boolean
        description: 'Whether the user is an administrator. (Default: false)'
      lastSynchronization:
        type: string
        description: 'The date when the user has been synchronized for the last time.
          (Format: UTC date-time)'
      profilePicture:
        type: string
        description: The profile picture of the user.
      accountType:
        type: string
        description: "The type of the user account.    <br>  \n        Acceptable
          values are:    <br>  \n         - \"EXTERNAL\": External account.    <br>
          \ \n         - \"GOOGLE\": Google account."
      langs:
        items:
          type: string
        type: array
        description: "The list of languages. (Format: xx)    <br>  \n    Acceptable
          values are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\":
          English    <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French
          \   <br>  \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>
          \ \n     - \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n
          \    - \"tr\": Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     -
          \"sv\": Swedish    <br>  \n     - \"de\": German    <br>  \n     - \"ru\":
          Russian    <br>  \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\":
          Brazilian Portuguese"
      fullName:
        type: string
      properties:
        type: string
        description: 'The properties of the user. (Format: JSON object)'
      customer:
        type: string
        description: The customer of the user.
      hiddenDirectoryFavorites:
        items:
          type: string
        type: array
        description: "*deprecated* The list of hidden favorite directories."
      firstName:
        type: string
        description: The first name of the user.
      settings:
        description: General settings for this user
        "$ref": "#/definitions/UserSettings"
      alternateEmail:
        type: string
        description: The alternative email of the user.
      lastName:
        type: string
        description: The last name of the user.
      devices:
        items:
          "$ref": "#/definitions/Device"
        type: array
        description: The list of devices.
      changePasswordAtNextLogin:
        type: boolean
        description: 'Whether the user needs to change his password during his next
          login. (Default: false)'
      externalDirectoryUrl:
        type: string
      isGod:
        type: boolean
      url:
        type: string
      profileId:
        type: string
        description: The ID of the profile.
      directoryFavorites:
        items:
          type: string
        type: array
        description: "*deprecated* The list of favorite directories."
      canAccessSA:
        type: boolean
  Device:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      notificationSettings:
        description: Device notification's settings
        "$ref": "#/definitions/DeviceNotificationSettings"
      deviceInformation:
        type: string
        description: A simple string used to name the device
      platform:
        type: string
        description: "The platform of the device.\n    Acceptable values are:    <br>
          \ \n    - \"ANDROID\"    <br>  \n    - \"IOS\"    <br>"
      appVersion:
        type: string
        description: The version of the application on the device
      apnsTopic:
        type: string
        description: The topic to target for iOS apps
      instance:
        type: string
        description: The ID of the instance.
      notificationsEnabled:
        default: true
        type: boolean
        description: Whether the notifications are enabled for the device.
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      deviceId:
        type: string
        description: The ID of the device.
      lastConnection:
        type: string
        description: 'The last connection date of the device (Format: UTC date-time).'
      appIsDevelopmentVersion:
        type: boolean
        description: Whether the application on the device is a development version
      owner:
        type: string
        description: The email of the owner of the device.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      registrationId:
        type: string
        description: The ID of the registration.
  SearchMediaRequest:
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      lang:
        items:
          type: string
        type: array
        description: "The language. (Format: xx)  <br> \n    Acceptable values are:
          \ <br> \n     - \"cn\": Chinese  <br> \n     - \"en\": English  <br> \n
          \    - \"es\": Spanish  <br> \n     - \"fr\": French  <br> \n     - \"it\":
          Italian  <br> \n     - \"nl\": Dutch  <br> \n     - \"pl\": Polish  <br>
          \n     - \"pt\": Portuguese  <br> \n     - \"tr\": Turkish  <br> \n     -
          \"cs\": Czech  <br> \n     - \"sv\": Swedish  <br> \n     - \"de\": German
          \ <br> \n     - \"ru\": Russian  <br> \n     - \"ja\": Japanese  <br> \n
          \    - \"pt_br\": Brazilian Portuguese"
      mimeType:
        items:
          type: string
        type: array
        description: The type of the file.
      endDate:
        type: string
        description: 'The end date (Format: UTC date-time).'
      name:
        type: string
        description: The name of the media.
      startDate:
        type: string
        description: 'The start date (Format: UTC date-time).'
      callId:
        type: string
        description: The ID of the call.
      ids:
        items:
          type: string
        type: array
        description: The list of media IDs.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      instance:
        items:
          type: string
        type: array
        description: The list of instance identifiers.
      ext:
        type: string
        description: The extension of the file.
      sortOrder:
        items:
          type: string
        type: array
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
      query:
        type: string
        description: The query used to filter the result.
      currentInstance:
        type: string
        description: The ID of the current instance.
      type:
        items:
          type: string
        type: array
        description: The types of media used to filter the search result.
  FileSystemItemsListResponse:
    required:
    - more
    type: object
    properties:
      folders:
        items:
          "$ref": "#/definitions/Folder"
        type: array
        description: The list of returned items.
      files:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: The list of returned items.
      callId:
        type: string
        description: The ID of the call.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      path:
        items:
          "$ref": "#/definitions/PathDescriptor"
        type: array
        description: The path of request.
      more:
        type: boolean
        description: Whether there are more results.
  AnalyticsCommunityRequest:
    type: object
    properties:
      comparePeriod:
        type: string
        description: |-
          The reference period over which the indicator should be computed.
            - Weekly: to compare with the value the KPI had one week before.
            - Monthly: to compare with the value the KPI had one month before.
            - Yearly: to compare with the value the KPI had one year before.
      callId:
        type: string
        description: The ID of the call.
      period:
        type: string
        description: |-
          The reference period over which the indicator should be computed.
            - Week: to calculate KPI over a week long period.
            - Month: to calculate KPI over a month long period.
            - Year: to calculate KPI over a year long period.
      filters:
        items:
          "$ref": "#/definitions/FilterSelectedValues"
        type: array
        description: The filters to apply to the request
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      indicators:
        items:
          type: string
          description: ActiveUsers <br> ParticipatingUsers <br> NewContents <br> NewPosts
            <br> NewReactions <br> ConnectionTime <br> ConnectionFrequency <br> Connections
            <br> Consultations <br> Participations <br> Creations <br> BounceRate
            <br> ActiveSites <br> ActiveCommunities <br> OnboardedUsers <br> Devices
            <br> Followers
        type: array
        description: "The kind of the indicators is an array of string that have acceptable
          values. If multiple values are given, multiple indicators will be returned.\nAcceptable
          values are :\n  - ActiveUsers: Number of Users, in the filtered user subset,
          connected to any part of the platform at least once during a given Timeframe.\n
          \ - ParticipatingUsers: Number of active users, in the Filtered User subset,
          who have liked, commented, posted in a community or created a content at
          least once during a given Timeframe\n  - NewContents: Number of content
          items created on all the platform sites during the Timeframe by the Filtered
          User subset.\n  - NewPosts: Number of posts created on all the communities
          of all the platform sites during the Timeframe, by the Filtered User subset\n
          \ - NewReactions: Number of reactions (likes + comments) on all the content
          items (content and comments) of all the platform sites and on all the post
          items (posts and comments) of all the communities on all the platform sites
          during the Timeframe, realised by the Filtered User subset\n  - ConnectionTime:
          Average time of a connection calculated over all  users in the Filtered
          User subset during the selected Timeframe.\n  - ConnectionFrequency: Frequency
          of connection expressed as average number of times a user connects to the
          site in the time of the selected Timeframe calculated over all users in
          the Filtered User subset for all the connections established in the selected
          Timeframe.\n  - Connections: Average time of a connection calculated over
          all  users in the Filtered User subset during the selected Timeframe.\n
          \ - Consultations: Count all connections visiting more than one page\n  -
          Participations: Count all connections liking, commenting or creating posts
          or content.\n  - Creations: Count all connections creating posts or content.
          \n  - BounceRate: The bounce rate count all connections visiting just one
          page and/or launching business apps.\n  - ActiveSites: Number of sites that
          have registered at least one view during the Timeframe, by the Filtered
          User subset.\n  - ActiveCommunities: Number of communities (on all platform
          sites) that have registered at least one view during the Timeframe, by the
          Filtered User subset.\n  - OnboardedUsers: Number of Current Users, in the
          Filtered User subset, connected to any part of the platform at least once
          since the launch of the intranet\n  - Devices: Percentage of each type of
          device used to connect to any part of the platform\n  - Followers: Number
          of followers for a given community"
      communityId:
        type: string
        description: The community unique identifier.
  MetadataListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      errors:
        items:
          "$ref": "#/definitions/ErrorReason"
        type: array
        description: The list of errors and their relative target.
      items:
        items:
          "$ref": "#/definitions/Metadata"
        type: array
        description: The list of returned items.
  Filter:
    type: object
    properties:
      customer:
        type: string
        description: The customer owning the Filter.
      provisioned:
        type: boolean
      name:
        type: string
        description: The name of the filter (translatable).
      pattern:
        type: string
        description: The pattern to use to retrieve info.
      status:
        default: LIVE
        type: string
        description: "The status of the element.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"DRAFT\": The model is a draft.    <br>  \n     -
          \"REFUSED\": The model has been rejected.    <br>  \n     - \"TO_VALIDATE\":
          The model is pending validation.    <br>  \n     - \"LIVE\": The model is
          validated.    <br>  \n     - \"ARCHIVE\": The model is archived.    <br>
          \ \n     - \"DELETED\": The model is deleted."
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.    <br>
          \ \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        format: int64
      patternCreatedAt:
        type: string
        description: 'The creation date of the pattern (Format: UTC date-time).'
      id:
        type: string
      uid:
        type: string
  NotificationPreferences:
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the comment.    <br>  \n        Acceptable values
          are:    <br>  \n         - \"LIVE\": The comment is visible.    <br>  \n
          \        - \"HIDE\": The comment is hidden."
      emailSummaryTime:
        type: string
        description: The time at which the daily notifications should be sent.
      uid:
        type: string
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      timeSlot:
        description: The time slot during which to send notifications.
        "$ref": "#/definitions/TimeSlot"
      notificationTypeStatus:
        items:
          "$ref": "#/definitions/NotificationTypeStatus"
        type: array
        description: The status of each push type for a given notification type.
      timeSlotEnabled:
        type: boolean
        description: 'Whether to send notification only during a time slot. (Default:
          false)'
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      vacationMode:
        type: boolean
        description: 'Whether to mute all push notifications (email, desktop, mobile).
          (Default: false)'
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      emailSummaryEnabled:
        type: boolean
        description: 'Whether to receive a daily summary or real-time notifications.
          (Default: false)'
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      mobilePushEnabled:
        default: true
        type: boolean
        description: 'Whether mobile push are enabled. (Default: true)'
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
  DirectoryTag:
    required:
    - uuid
    type: object
    properties:
      status:
        default: LIVE
        type: string
        description: "The status of the element.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"DRAFT\": The model is a draft.    <br>  \n     -
          \"REFUSED\": The model has been rejected.    <br>  \n     - \"TO_VALIDATE\":
          The model is pending validation.    <br>  \n     - \"LIVE\": The model is
          validated.    <br>  \n     - \"ARCHIVE\": The model is archived.    <br>
          \ \n     - \"DELETED\": The model is deleted."
      name:
        type: string
        description: 'The name of the directory tag. (Format: JSON object)'
      url:
        type: string
      modelVersion:
        type: string
        description: The version of the model.
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      functionalInnerId:
        type: string
        description: A code to describe the object.
      hasModelVersion:
        type: boolean
        description: "*deprecated* Whether the model has a modelVersion."
      systemInfo:
        description: Internal info
        "$ref": "#/definitions/SystemInfo"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      uid:
        type: string
  DatastoreKeyList:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      uid:
        items:
          type: string
        type: array
        description: The list of unique identifiers.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
  SocialNetworkAccess:
    type: object
    properties:
      userName:
        type: string
        description: The user's account name on the social platform.
      profilePictureUrl:
        type: string
        description: The user's account picture URL on the social platform.
      socialNetworkId:
        type: string
        description: The social platform id.
      authorizationRefreshRequired:
        type: boolean
        description: Whether the user need to login to social network again.
  SaveMediaMultiRequest:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/Media"
        type: array
        description: The list of media to save.
  TutorialListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/Tutorial"
        type: array
        description: The list of returned items.
  ErrorsResponse:
    type: object
    properties:
      deferred:
        type: boolean
        description: Whether the request has been deferred.
      errors:
        items:
          "$ref": "#/definitions/ErrorReasonKeysOnly"
        type: array
        description: The list of errors and their relative target.
  CloudSearchObjectValues:
    type: object
    properties:
      values:
        items:
          type: string
        type: array
        description: "*beta* The values of the field."
  AnalyticsRequest:
    type: object
    properties:
      instance:
        type: string
        description: The ID of the instance.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      endAt:
        type: string
        description: 'The end date of the reference period (default: today).'
        format: date-time
      maxResults:
        type: string
        description: The maximum number of results, in the case of a details indicator.
        format: int64
      period:
        type: string
        description: The reference period over which the indicator should be computed.
      indicators:
        items:
          type: string
          description: UsersCount <br> UsersHistogram <br> MostPopularCommunities
            <br> MobileUsersCount <br> ActivityHistogram <br> PostsHistogram <br>
            CommentsHistogram <br> LikesHistogram <br> ContentsHistogram <br> GlobalActivityTotal
            <br> TotalNewLikes <br> TotalNewPosts <br> TotalNewComments <br> TotalNewContents
            <br> ActiveInactiveUsersCount <br> MobileTotalUsersCount <br> NewPostsCount
            <br> NewPostsByTypeHistogram <br> MostPopularPosts <br> NewCommentsCount
            <br> NewCommentsHistogram <br> NewLikesCount <br> NewLikesHistogram <br>
            NumberOfAnsweredQuestions <br> CommunityTotals <br> ContributingUsersCount
            <br> ActiveTotal <br> ContributingInactive <br> SolvedUnsolved <br> SolvedTotal
            <br> MostSearchedQueryStrings <br> MostSearchedQueryStringsWithoutResults
            <br> MostSearchedObjects <br> NumberOfSearchesByDay <br> TotalQueries
            <br> MostSearchedContents <br> MostSearchedPosts <br> NumberOfNotificationsSent
            <br> NumberOfNotificationsRead <br> ObjectGeneratingTheGreatestNumberOfNotifications
            <br> MostReadContent <br> NumberOfContentsRead <br> NumberOfNewContents
        type: array
        description: The kind of the indicators.
      callId:
        type: string
        description: The ID of the call.
      indicatorCategories:
        items:
          type: string
          description: All <br> Customer <br> Community <br> Search <br> Notifications
            <br> Contents <br> Site
        type: array
        description: The indicator categories.
      acceptFakes:
        type: boolean
        description: Accept fake indicators.
      levelFilter:
        description: The scope over which we should compute the asked indicator.
        "$ref": "#/definitions/LevelFilter"
  UserSettings:
    type: object
    properties:
      hasAcceptedCookies:
        type: boolean
        description: Whether the user has accepted the Cookies banner.
      hasAcceptedTerms:
        type: boolean
        description: Whether the user has accepted Terms And Conditions.
      termsReadAt:
        type: string
        description: When the user has accepted (or refused) Terms And Conditions.
      notifications:
        description: "*deprecated* The status of notifications."
        "$ref": "#/definitions/UserNotificationsStatus"
      notificationPreferences:
        description: The notification settings.
        "$ref": "#/definitions/NotificationPreferences"
      social:
        description: The settings about social behaviors.
        "$ref": "#/definitions/UserSocialSettings"
      cookiesBannerReadAt:
        type: string
        description: When the user has read the Cookies banner.
  ContentToPredict:
    type: object
    properties:
      lang:
        type: string
        description: The language of the text.
      index:
        type: string
        description: The unique index identifying this item.
      data:
        type: string
        description: The content text.
  ContentNavigation:
    required:
    - lang
    type: object
    properties:
      lang:
        type: string
        description: "The language. (Format: xx)    <br>  \n    Acceptable values
          are:    <br>  \n     - \"cn\": Chinese    <br>  \n     - \"en\": English
          \   <br>  \n     - \"es\": Spanish    <br>  \n     - \"fr\": French    <br>
          \ \n     - \"it\": Italian    <br>  \n     - \"nl\": Dutch    <br>  \n     -
          \"pl\": Polish    <br>  \n     - \"pt\": Portuguese    <br>  \n     - \"tr\":
          Turkish    <br>  \n     - \"cs\": Czech    <br>  \n     - \"sv\": Swedish
          \   <br>  \n     - \"de\": German    <br>  \n     - \"ru\": Russian    <br>
          \ \n     - \"ja\": Japanese    <br>  \n     - \"pt_br\": Brazilian Portuguese"
      uid:
        type: string
      parent:
        type: string
        description: The ID of the parent content.
      color:
        type: string
        description: The color of the menu item.
      newTab:
        type: boolean
        description: 'Whether the content will be opened in a new tab. (Default: false)'
      parentUuid:
        type: string
        description: 'The universally unique identifier of the parent of the content.
          (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
      menuTitle:
        type: string
        description: The title of the menu item.
      properties:
        type: string
        description: 'The properties of the menu item. (Format: JSON objectdate)'
      sortOrder:
        type: integer
        description: "The sort order defined by the property name used to sort.    <br>
          \ \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
        format: int32
      hideChildren:
        type: boolean
        description: 'Whether the content''s children are hidden. (Default: false)'
      hidden:
        type: boolean
        description: 'Whether the content is hidden. (Default: false)'
      id:
        type: string
      uuid:
        type: string
        description: 'The universally unique identifier. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
  CloudSearchUser:
    type: object
    properties:
      customer:
        type: string
        description: "*beta* The ID of the customer to which the user belongs."
      uid:
        type: string
        description: "*beta* The LumApps user ID."
      firstName:
        type: string
        description: "*beta* The first name of the user."
      url:
        type: string
        description: "*beta* Entry's url"
      lastName:
        type: string
        description: "*beta* The family name of the user."
      apiProfile:
        description: "*beta* A set of selected fields from the user profile"
        "$ref": "#/definitions/CloudSearchUserAPIProfile"
      id:
        type: string
        description: "*beta* The LumApps user ID."
      fullName:
        type: string
        description: "*beta* The full name of the user."
      customerId:
        type: string
        description: "*beta* The ID of the customer to which the user belongs."
      email:
        type: string
        description: "*beta* User email"
  CommunityRequestListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/CommunityRequest"
        type: array
        description: The list of returned items.
  FocalPoint:
    type: object
    properties:
      "y":
        type: number
        format: double
      x:
        type: number
        format: double
  EntityDetails:
    type: object
    properties:
      parent:
        description: The parent of the entity.
        "$ref": "#/definitions/ParentDetails"
      slug:
        type: string
        description: The slug of the entity, if applicable.
      id:
        type: string
        description: The entity id
      name:
        type: string
        description: The localized human-readable name of the entity.
      icon:
        type: string
        description: The icon of the entity.
  InstanceListRequest:
    type: object
    properties:
      status:
        type: string
        description: "The status of the element.  <br> \n    Acceptable values are:
          \ <br> \n     - \"DRAFT\": The model is a draft.  <br> \n     - \"REFUSED\":
          The model has been rejected.  <br> \n     - \"TO_VALIDATE\": The model is
          pending validation.  <br> \n     - \"LIVE\": The model is validated.  <br>
          \n     - \"ARCHIVE\": The model is archived.  <br> \n     - \"DELETED\":
          The model is deleted."
      emptyParent:
        type: boolean
        description: 'Whether the instance has no parent. (Default: false)'
      name:
        type: string
        description: The name of the instance.
      parent:
        type: string
        description: The parent of the instance.
      callId:
        type: string
        description: The ID of the call.
      ids:
        items:
          type: string
        type: array
        description: The list of instance IDs.
      maxResults:
        default: 30
        type: string
        description: 'Maximum results returned. Acceptable values are 1 to MAX_INT,
          inclusive. (Default: 30)'
      userFavoritesOnly:
        type: boolean
        description: Limit the response to the instances that the user has marked
          as favorite.
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      combinedMetadata:
        items:
          "$ref": "#/definitions/MetadataClauses"
        type: array
        description: The list of metadata lists.
      fields:
        type: string
        description: The list of fields that will be returned with the response.
      considerUserIdentity:
        default: true
        type: boolean
        description: 'Whether we should take into account the user identity to compute
          instance fields (like deletableFromFavorites). (Default: true)'
      sortOrder:
        type: string
        description: "The sort order defined by the property name used to sort.  <br>
          \n    Descending sort order is denoted by a hyphen (-) preceding the property
          name;\n    omitting the hyphen specifies ascending order by default."
  InstanceAdminRequest:
    required:
    - email
    - uid
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      email:
        type: string
        description: The email of the instance's administrator.
      uid:
        type: string
        description: The unique identifier.
  CustomContentType:
    required:
    - customer
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      hasFeaturedStartDate:
        type: boolean
        description: 'Whether the custom content type has a featured start date. (Default:
          false)'
      heritable:
        type: boolean
        description: 'Whether the custom content type is heritable. (Default: false)'
      name:
        type: string
        description: 'The name of the custom content type. (Format: JSON object)'
      heritableLocked:
        type: boolean
        description: Whether heritable modification is locked.
      createFromScratchLocked:
        type: boolean
        description: 'Whether the contents can be created from scratch. (Default:
          false)'
      isWorkflowEnabled:
        type: boolean
        description: 'Whether the workflow is enabled for the custom content type.
          (Default: false)'
      isEndDateMandatory:
        type: boolean
        description: 'Whether the end date is mandatory for this custom content type.
          (Default: false)'
      functionalInnerId:
        type: string
        description: A code to describe the object.
      instance:
        type: string
        description: The ID of the instance.
      endDateDelta:
        type: integer
        description: "The number of months used to automatically determinate the end
          date.    <br>  \n        Acceptable values are 0 to MAX_INT, inclusive.
          (Default: 0)"
        format: int32
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      notifyContributors:
        type: boolean
        description: 'Whether the contributors are notified for any change concerning
          the custom content type. (Default: false)'
      uid:
        type: string
      parentCustomContentType:
        type: string
        description: The CustomContentTypeId of the parent with "heritable" set to
          true (only for "News" and "Page").
      tags:
        items:
          "$ref": "#/definitions/CustomContentTypeTag"
        type: array
        description: The list of tags of the custom content type.
      hasFeaturedEndDate:
        type: boolean
        description: 'Whether the custom content type has a featured end date. (Default:
          false)'
      workflowManagers:
        items:
          type: string
        type: array
        description: The list of feeds.
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      icon:
        type: string
        description: The icon of the custom content type.
  CourseMaterial:
    type: object
    properties:
      youtubeVideo:
        description: Youtube video attachment.
        "$ref": "#/definitions/YouTubeVideo"
      driveFile:
        description: Google Drive file attachment.
        "$ref": "#/definitions/DriveFile"
      link:
        description: Link atatchment.
        "$ref": "#/definitions/Link"
      form:
        description: Google Forms attachment.
        "$ref": "#/definitions/Form"
  WidgetTypeListResponse:
    type: object
    properties:
      callId:
        type: string
        description: The ID of the call.
      items:
        items:
          "$ref": "#/definitions/WidgetTypeResource"
        type: array
        description: The widget type list.
  Customer:
    type: object
    properties:
      cookieDuration:
        type: integer
        description: The duration of the cookie in days.
        format: int32
      domain:
        type: string
        description: The domain name for the Google Apps platform of customer.
      contactPhone:
        type: string
        description: The phone number of the contact.
      features:
        items:
          type: string
        type: array
        description: Features enabled by customer
      addDirectoryUserAllowed:
        type: boolean
        description: 'Whether users can be added in the user directory. (Default:
          false)'
      hasLiveWebhooks:
        type: boolean
        description: 'Whether the customer has live webhooks.(Default: false)'
      updatedAt:
        type: string
        description: 'The last update date (Format: UTC date-time).'
      ssoEnabled:
        type: boolean
        description: 'Whether the Single Sign-On is enabled for this customer. (Default:
          false)'
      phone:
        type: string
        description: The main phone number of the customer.
      excludedFeatures:
        items:
          type: string
        type: array
        description: Features explicitly disabled by customer
      contactEmail:
        type: string
        description: The email address of the contact.
      externalAccounts:
        type: boolean
        description: 'Whether external users are allowed to sign in. (Default: true)'
      sender:
        type: string
        description: The email of the user who sends newsletters.
      websiteUrls:
        items:
          type: string
        type: array
      googleCustomer:
        type: boolean
        description: 'Whether the customer is associated to a Google Apps platform.
          (Default: true)'
      uid:
        type: string
      licenseExpirationDate:
        type: string
        description: 'The expiration date of the licence. (Format: UTC date-time)'
      feedPublic:
        "$ref": "#/definitions/Feed"
      id:
        type: string
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      curatedStream:
        description: The curated stream settings.
        "$ref": "#/definitions/CuratedStream"
      city:
        type: string
        description: The city of the customer.
      properties:
        type: string
        description: 'The properties of the customer. (Format: JSON object)'
      synchronized:
        type: boolean
        description: 'Whether the user synchronization with Google Apps platform is
          enabled. (Default: true)'
      zip:
        type: string
        description: The zip code of the customer.
      synchronizedAt:
        type: string
        description: 'The last synchronization date. (Format: UTC date-time)'
      isReseller:
        type: boolean
        description: 'Whether the customer can resell LumSites licences. (Default:
          false)'
      externalDirectory:
        type: string
        description: The URL used to get detailed user profiles.
      samlProviders:
        items:
          "$ref": "#/definitions/CustomerSamlProvider"
        type: array
      mobileInstanceKeys:
        items:
          type: string
        type: array
        description: The list of instances' key to display inside mobile application.
      httpsOnly:
        type: boolean
        description: 'Whether the HTTPS protocol is required. (Default: false)'
      loginMethods:
        items:
          type: string
        type: array
      siret:
        type: string
        description: The ID of the customer's company.
      slug:
        type: string
        description: The short text used in the URL used to access the customer.
      hasTermsAndConditions:
        type: boolean
      type:
        type: string
        description: The type of customer. (Not yet used)
      email:
        type: string
        description: The address email of the customer.
      nbUsers:
        "$ref": "#/definitions/CustomerNbUsers"
      status:
        type: string
        description: "The status of the customer.    <br>  \n    Acceptable values
          are:    <br>  \n     - \"enabled\": The customer is enabled.    <br>  \n
          \    - \"pending\": The customer is pending validation.    <br>  \n     -
          \"disabled\": The customer is disabled."
      fax:
        type: string
        description: The main fax number of the customer.
      trustedTester:
        type: boolean
        description: Is this customer a trusted tester?
      adminPassword:
        type: string
      clientIds:
        items:
          type: string
        type: array
        description: The list of client IDs authorized to generate tokens.
      address2:
        type: string
        description: The secondary postal address of the customer.
      hasGoogleSso:
        type: boolean
        description: 'Whether the Google users should connect through a SSO system
          connected to Google. (Default: false)'
      mobileSearchInstanceKeys:
        items:
          type: string
        type: array
        description: The list of instances' keys to limit the search scope to, from
          within the mobile application.
      defaultInstance:
        type: string
        description: The default instance ID.
      contactLastName:
        type: string
        description: The last name of the contact.
      size:
        type: string
        description: The size of the company.
      address:
        type: string
        description: The postal address of the customer.
      userProfilePicture:
        type: string
        description: The kind of profile picture to use for users.
      identityProviders:
        items:
          "$ref": "#/definitions/CustomerIdentityProvider"
        type: array
        description: List of settings for users providers
      mobileCustomization:
        description: The visual mobile customization.
        "$ref": "#/definitions/MobileCustomization"
      name:
        type: string
        description: The name of the customer.
      feedAll:
        "$ref": "#/definitions/Feed"
      themes:
        items:
          type: string
        type: array
        description: The list of themes available for the instance.
      account:
        type: string
        description: The email of the technical account used to make requests to Google
          APIs.
      contactFirstName:
        type: string
        description: The first name of the contact.
      enabledFeatures:
        items:
          type: string
        type: array
      reseller:
        type: string
        description: The reseller of the customer.
      loginGoogleOnly:
        type: boolean
        description: 'Whether users should be automatically signed it with Google.
          (Default: false)'
      url:
        type: string
        description: The URL of the customer's website.
      country:
        type: string
        description: The country of the company.
      overrides:
        items:
          type: string
        type: array
        description: The list of specific behaviors available.
      licenseNumber:
        type: integer
        description: "The number of licences enabled to this customer.    <br>  \n
          \       Acceptable values are 0 to MAX_INT, inclusive. (Default: 0)"
        format: int32
      socialNetworkSettings:
        items:
          "$ref": "#/definitions/SocialNetworkSetting"
        type: array
        description: The list of per-social platform settings for Social Advocacy.
      adminEmail:
        type: string
      token:
        type: string
        description: "The token used to create customer.    <br>  \n        This is
          only applicable for non-Google customer."
      hosts:
        items:
          type: string
        type: array
        description: The hostname used to access LumSites.
      synchronizationInProgress:
        type: boolean
        description: 'Whether the customer is currently synchronizing. (Default: false,
          Read-only)'
      mobileGoogleAnalyticsID:
        type: string
        description: 'A Google Analytics tag. (Format: UA-xxxxxxxx-x)'
      publicContentAuthorized:
        type: boolean
        description: 'Whether publication of content visible by unauthenticated users
          is allowed. (Default: true)'
      socialNetworkCapabilities:
        items:
          "$ref": "#/definitions/SocialNetworkCapability"
        type: array
        description: The list of per-social platform capabilities for Social Advocacy.
      customerId:
        type: string
        description: The ID of the customer.
      registrationAllowed:
        type: boolean
        description: 'Whether the creation of users is allowed. (Default: false)'
      configurations:
        items:
          type: string
        type: array
        description: The list of override configuration available for this instance.
  SendNotificationRequest:
    required:
    - instanceId
    - title
    - type
    type: object
    properties:
      startDate:
        type: string
        description: The notification start date.
      instanceId:
        type: string
        description: The ID of the instance.
      senderId:
        type: string
        description: The ID of the user who sent the notification.
      recipientId:
        type: string
        description: The ID of the recipient.
      externalKeyKind:
        type: string
        description: The external key kind.
      recipientEmail:
        type: string
        description: The email of the recipient.
      group:
        type: boolean
        description: |-
          Whether the notifications of a same type and having the same linked object are group together.
                  (Default: false)
      title:
        type: string
        description: 'The title of the notification. (Format: JSON object)'
      functionalInnerId:
        type: string
        description: A code to describe the object.
      groupName:
        type: string
        description: "The name of the notification group. (Format: JSON object)  <br>
          \n        This is only applicable if group is true."
      notifyAuthor:
        type: boolean
        description: 'Whether the author has to be notified for any change. (Default:
          false)'
      type:
        type: string
        description: The type of notification.
      groupDescription:
        type: string
        description: "The description of the notification group. (Format: JSON object)
          \ <br> \n        This is only applicable if group is true."
      feedKeys:
        items:
          type: string
        type: array
        description: The list of feed IDs.
      description:
        type: string
        description: 'The description of the notification. (Format: JSON object)'
      isReadOnClick:
        default: true
        type: boolean
        description: 'Whether the notification has been read. (Default: false)'
      externalKeyId:
        type: string
        description: The external key to link a content, directory entry or other.
      senderEmail:
        type: string
        description: The email of the user who sent the notification.
      link:
        type: string
        description: 'The external url of the notification. (Format: JSON object)'
      properties:
        type: string
        description: 'The properties of the notification. (Format: JSON object)'
      url:
        type: string
        description: 'The url of the notification. (Format: JSON object)'
      customType:
        type: string
        description: "The custom type of the notification.  <br> \n        This is
          only applicable if type is custom."
  DatastoreKeyRepresentation:
    type: object
    properties:
      kind:
        type: string
      uid:
        type: string
  TeacherFolder:
    type: object
    properties:
      title:
        type: string
        description: Title of the Drive folder..
      id:
        type: string
        description: Drive API resource ID.
      alternateLink:
        type: string
        description: URL that can be used to access the Drive folder.
  DirectoryEntryListResponse:
    required:
    - more
    type: object
    properties:
      cursor:
        type: string
        description: |-
          The cursor for continuing a previous request on the next page.
              This should be set to the value of 'cursor' from the previous response.
      callId:
        type: string
        description: The ID of the call.
      more:
        type: boolean
        description: Whether there are more results.
      items:
        items:
          "$ref": "#/definitions/DirectoryEntry"
        type: array
        description: The list of returned items.
  CloudSearchPhoto:
    type: object
    properties:
      url:
        type: string
        description: The photo of the person.
  Newsletter:
    required:
    - name
    type: object
    properties:
      customer:
        type: string
        description: The ID of the customer.
      urlUuid:
        type: string
        description: The ID used in the url of the newsletter.
      testEmails:
        type: string
        description: The list of emails of test recipients for each language.
      name:
        type: string
        description: The name of the newsletter.
      instance:
        type: string
        description: The ID of the instance.
      text:
        type: string
        description: The introduction text of the newsletter.
      image:
        type: string
        description: The image on top of the newsletter.
      contentBlocks:
        items:
          "$ref": "#/definitions/NewsletterContentBlock"
        type: array
        description: The list of blocks contained in the newsletter.
      id:
        type: string
      analytics:
        type: string
        description: 'A Google Analytics tag attached to the newsletter. (Format:
          UA-xxxxxx-xx)'
      theme:
        type: string
        description: The theme of the newsletter (Not yet implemented).
      html:
        type: string
        description: The HTML content sent in the newsletter email.
      contents:
        items:
          type: string
        type: array
        description: The contents displayed in the newsletter.
      uid:
        type: string
      sentAt:
        type: string
        description: 'The last time the newsletter was sent (Format: UTC date-time).'
      emails:
        type: string
        description: The list of emails of recipients for each language.
      createdAt:
        type: string
        description: 'The creation date (Format: UTC date-time).'
      sender:
        type: string
        description: The email of the sender (Not yet implemented).
swagger: '2.0'
consumes:
- application/json
