{
  "asyncapi" : "2.0.0",
  "id" : "urn:zbos-mqtt-api",
  "defaultContentType" : "application/json",
  "info" : {
    "title" : "Speech",
    "version" : "2.7.0",
    "description" : "API for communication with ZBOS by Zora Robotics.",
    "contact" : {
      "email" : "info@zorarobotics.be"
    }
  },
  "channels" : {
    "zbos/dialog/languages/available/get" : {
      "publish" : {
        "summary" : "Get available languages",
        "description" : "Legacy topic for getting all installed languages (both tts and asr combined). Better not to use this.see <<zbos/dialog/languages/available/response/{key}>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/languages/available/response/{key}" : {
      "subscribe" : {
        "summary" : "response: Get available languages",
        "description" : "response: Legacy topic for getting all installed languages (both tts and asr combined)\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : "Array<String>",
          "examples" : [ {
            "payload" : "en-US"
          }, {
            "payload" : "nl-BE"
          }, {
            "payload" : "fr-FR"
          } ]
        }
      },
      "parameters" : {
        "key" : {
          "description" : "Request key to create a unique subscription topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/dialog/languages/current/get" : {
      "publish" : {
        "summary" : "Get current language",
        "description" : "see <<zbos/dialog/languages/current/response/{key}>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/languages/current/response/{key}" : {
      "subscribe" : {
        "summary" : "response: Get current language",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "en-US"
          } ]
        }
      },
      "parameters" : {
        "key" : {
          "description" : "Request key to create a unique subscription topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/dialog/languages/current/set" : {
      "publish" : {
        "summary" : "Set current language",
        "description" : "Set the active language, example: 'en-US'. Note: this will be probably be changed to <<zbos/dialog/set/language>> in a future release.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "en-US"
          } ]
        }
      }
    },
    "zbos/dialog/set/message" : {
      "publish" : {
        "summary" : "Speak a message",
        "description" : "Use this to make the robot say something.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "Hello world"
          } ]
        }
      }
    },
    "zbos/dialog/set" : {
      "publish" : {
        "summary" : "Speak a message with parameters",
        "description" : "Use this to make the robot say something with parameters. Only message is required, other params are optional.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "requestId" : {
                "type" : "string"
              },
              "message" : {
                "type" : "string"
              },
              "speed" : {
                "type" : "integer"
              },
              "language" : {
                "type" : "string",
                "description" : "Language string like \"en-US\""
              },
              "volume" : {
                "type" : "integer"
              },
              "gesticulation" : {
                "type" : "boolean"
              },
              "voice" : {
                "type" : "string"
              },
              "pitch" : {
                "type" : "integer"
              },
              "blocking" : {
                "type" : "boolean"
              }
            }
          },
          "name" : "DialogOptions",
          "examples" : [ {
            "payload" : {
              "requestId" : "1",
              "message" : "Hello world",
              "speed" : 50,
              "language" : "en-US",
              "volume" : 50,
              "gesticulation" : true,
              "voice" : "Ava",
              "pitch" : 120
            }
          } ]
        }
      }
    },
    "zbos/dialog/languages/current/event" : {
      "subscribe" : {
        "summary" : "event: Current language",
        "description" : "Event when the system is done with changing language to a new language.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "en-US"
          } ]
        }
      }
    },
    "zbos/dialog/animatedspeech/enable" : {
      "publish" : {
        "summary" : "Enable animated speech",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/animatedspeech/disable" : {
      "publish" : {
        "summary" : "Disable animated speech",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/animatedspeech/get" : {
      "publish" : {
        "summary" : "Get status of animated speech",
        "description" : "see <<zbos/dialog/animatedspeech/response/{key}>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/animatedspeech/response/{key}" : {
      "subscribe" : {
        "summary" : "response: Get status of animated speech",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "boolean"
          },
          "name" : "Boolean"
        }
      },
      "parameters" : {
        "key" : {
          "description" : "Request key to create a unique subscription topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/dialog/tts/start" : {
      "publish" : {
        "summary" : "event: TTS started",
        "description" : "Event when the robot starts speaking and what it is saying\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "Hi, my name is James"
          } ]
        }
      }
    },
    "zbos/dialog/tts/stop" : {
      "publish" : {
        "summary" : "Stop robot speech",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/pause/hotword" : {
      "publish" : {
        "summary" : "pause hotword recognition",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/resume/hotword" : {
      "publish" : {
        "summary" : "resume hotword recognition",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/tts/end" : {
      "subscribe" : {
        "summary" : "event: TTS ended",
        "description" : "Event when the robot has finished speaking\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String"
        }
      }
    },
    "zbos/dialog/hotword/recognised" : {
      "subscribe" : {
        "summary" : "event: robot has recognised a hotword",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/event/dialog/listen/started" : {
      "subscribe" : {
        "summary" : "event: robot starts listening",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/event/dialog/listen/stopped" : {
      "subscribe" : {
        "summary" : "event: robot stops listening",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/listen/start" : {
      "publish" : {
        "summary" : "Start listening",
        "description" : "Start listening for hotword and commands\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/listen/stop" : {
      "publish" : {
        "summary" : "Stop listening",
        "description" : "Cancel hotword recognition\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/service/start" : {
      "publish" : {
        "summary" : "Start dialog service",
        "description" : "Start the dialog service so the robot can listen to the mic.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/service/stop" : {
      "publish" : {
        "summary" : "Stop dialog service",
        "description" : "Stop the dialog service so the mic is free to use by other applications.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/service/stopped" : {
      "subscribe" : {
        "summary" : "Event: dialog service stopped",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/service/started" : {
      "subscribe" : {
        "summary" : "Event: dialog service started",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/iflytek/rotation/started" : {
      "subscribe" : {
        "summary" : "Iflytek rotation started",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/iflytek/rotation/stopped" : {
      "subscribe" : {
        "summary" : "Iflytek rotation stopped",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/tts/phonemereached" : {
      "subscribe" : {
        "summary" : "event. Phoneme reached",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "jawOpen" : {
                "type" : "boolean"
              },
              "lipTension" : {
                "type" : "integer"
              },
              "mouthHeight" : {
                "type" : "integer"
              },
              "mouthUpturn" : {
                "type" : "integer"
              },
              "mouthWidth" : {
                "type" : "integer"
              },
              "teethLowerVisible" : {
                "type" : "integer"
              },
              "teethUpperVisible" : {
                "type" : "integer"
              },
              "tonguePosition" : {
                "type" : "integer"
              }
            }
          },
          "name" : "PhonemeInfo",
          "examples" : [ {
            "payload" : {
              "jawOpen" : false,
              "lipTension" : 0,
              "mouthHeight" : 10,
              "mouthUpturn" : 0,
              "mouthWidth" : 5,
              "teethLowerVisible" : 1,
              "teethUpperVisible" : 1,
              "tonguePosition" : 1
            }
          } ]
        }
      }
    },
    "zbos/dialog/grammars/add/multiple" : {
      "publish" : {
        "summary" : "Grammars: add multiple",
        "description" : "This is an extension for the grammar add topic. It removes all grammars first and then triggers a single platform reload. Hence grammars are added a lot faster.see <<zbos/dialog/grammars/add/response>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "a unique id of the grammar. This must be unique among the application (next field)."
                },
                "app" : {
                  "type" : "string",
                  "description" : "The application name. This will be used to determined which MQTT topic will be used to post the json output to."
                },
                "continuous" : {
                  "type" : "boolean"
                },
                "input" : {
                  "type" : "object",
                  "description" : "Contains an array for each language with all the possible sentences. The sentences need to be in a format that the speech software understands."
                },
                "variables" : {
                  "type" : "object"
                }
              }
            }
          },
          "name" : "Array<CustomGrammar>",
          "examples" : [ {
            "payload" : {
              "id" : "question_1_variable",
              "app" : "App",
              "continuous" : true,
              "input" : {
                "nl-BE" : [ "Ken jij $name" ],
                "en-US" : [ "Do you know $name" ]
              },
              "variables" : {
                "name" : {
                  "nl-BE" : [ {
                    "input" : "Arno",
                    "data" : "name_in_dutch"
                  }, {
                    "input" : "Gilles",
                    "data" : "name_in_dutch"
                  } ],
                  "en-US" : [ {
                    "input" : "Arno",
                    "data" : "name_in_english"
                  }, {
                    "input" : "Gilles",
                    "data" : "name_in_english"
                  } ]
                }
              }
            }
          } ]
        }
      }
    },
    "zbos/dialog/grammars/add/response" : {
      "subscribe" : {
        "summary" : "response: grammar add",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/successMessage"
        }
      }
    },
    "zbos/dialog/grammars/remove/multiple" : {
      "publish" : {
        "summary" : "Grammars: remove multiple",
        "description" : "This is an extension for the grammar remove topic. It removes all grammars first and then triggers a single platform reload. Hence grammars are removed a lot faster.see <<zbos/dialog/grammars/remove/response>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "a unique id of the grammar. This must be unique among the application (next field)."
                },
                "app" : {
                  "type" : "string",
                  "description" : "The application name. This will be used to determined which MQTT topic will be used to post the json output to."
                },
                "continuous" : {
                  "type" : "boolean"
                },
                "input" : {
                  "type" : "object",
                  "description" : "Contains an array for each language with all the possible sentences. The sentences need to be in a format that the speech software understands."
                },
                "variables" : {
                  "type" : "object"
                }
              }
            }
          },
          "name" : "Array<CustomGrammar>",
          "examples" : [ {
            "payload" : {
              "id" : "id send in add",
              "app" : "app from add"
            }
          } ]
        }
      }
    },
    "zbos/dialog/grammars/remove/response" : {
      "subscribe" : {
        "summary" : "response: grammar add",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/successMessage"
        }
      }
    },
    "zbos/dialog/grammars/match/{appId}" : {
      "publish" : {
        "summary" : "Event: grammar match",
        "description" : "Event when a custom grammar match is found, the output data is posted here. \n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "string"
              },
              "triggered-by" : {
                "type" : "string",
                "description" : "The id of the grammer that has matched with the user input. This is the id from the input json."
              },
              "language" : {
                "type" : "string",
                "description" : "Language that speech software was configured in when the sentence is recognised."
              },
              "variables" : {
                "type" : "object"
              }
            }
          },
          "name" : "GrammarMatch",
          "examples" : [ {
            "payload" : {
              "language" : "en-US",
              "variables" : {
                "beverage" : {
                  "input" : "Wine",
                  "data" : "this is wine"
                },
                "dish" : {
                  "input" : "hamburger",
                  "data" : "this is a hamburger"
                }
              },
              "triggered-by" : "input ID"
            }
          } ]
        }
      },
      "parameters" : {
        "appId" : {
          "description" : "Should be replaced by the app id used in the 'zbos/dialog/grammars/add/multiple' topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/dialog/custom/grammar/rules/get" : {
      "publish" : {
        "summary" : "Gets all custom grammar rules",
        "description" : "see <<zbos/dialog/custom/grammar/rules/get/response>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/custom/grammar/rules/get/response" : {
      "subscribe" : {
        "summary" : "response: Get all custom grammar rules",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : "Array<String>"
        }
      }
    },
    "zbos/dialog/tts/languages/get" : {
      "publish" : {
        "summary" : "Get TTS languages",
        "description" : "Get a list of languages that the TTS engine can use to talk.see <<zbos/dialog/tts/languages/response/{key}>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/tts/languages/response/{key}" : {
      "subscribe" : {
        "summary" : "response: TTS languages list",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "BE"
          } ]
        }
      },
      "parameters" : {
        "key" : {
          "description" : "Request key to create a unique subscription topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/dialog/tts/languages/current/get" : {
      "publish" : {
        "summary" : "Get current TTS language",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/tts/languages/current/set" : {
      "publish" : {
        "summary" : "Set TTS language",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "nl-BE"
          } ]
        }
      }
    },
    "zbos/dialog/asr/languages/get" : {
      "publish" : {
        "summary" : "Get ASR languages",
        "description" : "Get a list of languages recognized by the ASR engine. note: For now this is limited to the language code defined in the config. No Vocon load check is done yet.see <<zbos/dialog/asr/languages/response/{key}>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/asr/languages/response/{key}" : {
      "subscribe" : {
        "summary" : "response: ASR languages list",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "nl-BE"
          } ]
        }
      },
      "parameters" : {
        "key" : {
          "description" : "Request key to create a unique subscription topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/dialog/asr/languages/current/get" : {
      "publish" : {
        "summary" : "Get current ASR language",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/asr/languages/current/set" : {
      "publish" : {
        "summary" : "Set ASR language",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "nl-BE"
          } ]
        }
      }
    },
    "zbos/asr/recognition/result" : {
      "subscribe" : {
        "summary" : "Speech recognised event",
        "description" : "Event send by the dialog service when user said something. Mainly for subtitles.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String",
          "examples" : [ {
            "payload" : "Okay James"
          } ]
        }
      }
    },
    "zbos/dialog/grammars/load" : {
      "publish" : {
        "summary" : "Grammars: load",
        "description" : "Request from speech software to load custom grammars from the storage on the robot.see <<zbos/dialog/grammars/load/response>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/grammars/load/response" : {
      "subscribe" : {
        "summary" : "response: loaded grammars",
        "description" : "Response from the RIL with all the rules stored in a file on the robot.\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/speech/provider/start" : {
      "publish" : {
        "summary" : "Start speech provider",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/speech/provider/stop" : {
      "publish" : {
        "summary" : "Stop speech provider",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/text/command" : {
      "publish" : {
        "summary" : "Send a text message to dialog system",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String"
        }
      }
    },
    "zbos/dialog/language/setup/start" : {
      "publish" : {
        "summary" : "Start language setup",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/language/setup/stop" : {
      "publish" : {
        "summary" : "Stop language setup",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/dialog/set/config" : {
      "publish" : {
        "summary" : "Set the current speech config",
        "description" : "see <<zbos/dialog/set/config/response/{key}>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "config_items" : {
                "type" : "object",
                "description" : "One or more config items."
              },
              "key" : {
                "type" : "string",
                "description" : "Required random key"
              }
            }
          },
          "name" : "SetDialogConfigRequest",
          "examples" : [ {
            "payload" : {
              "key" : "ABCxyz",
              "config_items" : { }
            }
          } ]
        }
      }
    },
    "zbos/dialog/set/config/response/{key}" : {
      "subscribe" : {
        "summary" : "response: Speech config was set",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "config_items" : {
                "type" : "object",
                "description" : "One or more config items."
              },
              "key" : {
                "type" : "string",
                "description" : "Required random key"
              }
            }
          },
          "name" : "SetDialogConfigRequest",
          "examples" : [ {
            "payload" : {
              "key" : "ABCxyz",
              "config_items" : { }
            }
          } ]
        }
      },
      "parameters" : {
        "key" : {
          "description" : "Request key to create a unique subscription topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/dialog/get/config" : {
      "publish" : {
        "summary" : "Get the current speech config",
        "description" : "see <<zbos/dialog/get/config/response>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "config_items" : {
                "type" : "array",
                "description" : "One or more config keys.",
                "items" : {
                  "type" : "string"
                }
              },
              "key" : {
                "type" : "string",
                "description" : "Required random key"
              }
            }
          },
          "name" : "GetDialogConfigRequest",
          "examples" : [ {
            "payload" : {
              "key" : "ABCxyz",
              "config_items" : [ ]
            }
          } ]
        }
      }
    },
    "zbos/dialog/get/config/response" : {
      "subscribe" : {
        "summary" : "response: Current dialog config",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "config_items" : {
                "type" : "array",
                "description" : "One or more config keys.",
                "items" : {
                  "type" : "string"
                }
              },
              "key" : {
                "type" : "string",
                "description" : "Required random key"
              }
            }
          },
          "name" : "GetDialogConfigRequest",
          "examples" : [ {
            "payload" : {
              "key" : "ABCxyz",
              "config_items" : [ ]
            }
          } ]
        }
      }
    },
    "zbos/dialog/reset/config" : {
      "publish" : {
        "summary" : "Reset the current speech config",
        "description" : "see <<zbos/dialog/reset/config/response>> for response\n",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/keyMessage"
        }
      }
    },
    "zbos/dialog/reset/config/response" : {
      "subscribe" : {
        "summary" : "response: Config has been reset",
        "description" : "",
        "tags" : [ {
          "name" : "Speech",
          "description" : "All speech related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/successMessage"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "percentage" : {
        "type" : "integer",
        "maximum" : 100,
        "minimum" : 0,
        "description" : "Percentage value between with range 0 to 100"
      },
      "key" : {
        "type" : "string",
        "description" : "Required random key"
      }
    },
    "messages" : {
      "emptyMessage" : {
        "payload" : {
          "type" : "object"
        },
        "name" : "EmptyMessage",
        "summary" : "Empty message"
      },
      "keyMessage" : {
        "payload" : {
          "type" : "object",
          "properties" : {
            "key" : {
              "type" : "string",
              "description" : "Required random key"
            }
          }
        },
        "name" : "KeyResult",
        "summary" : "Random key",
        "examples" : [ {
          "payload" : {
            "key" : "ABCxyz"
          }
        } ]
      },
      "successMessage" : {
        "payload" : {
          "type" : "object",
          "properties" : {
            "success" : {
              "type" : "boolean"
            },
            "message" : {
              "type" : "string",
              "description" : "Optional error message"
            }
          }
        },
        "name" : "SuccessMessage",
        "summary" : "Success message",
        "examples" : [ {
          "payload" : {
            "success" : true
          }
        } ]
      },
      "notificationMessage" : {
        "payload" : {
          "type" : "object",
          "properties" : {
            "message" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string"
                },
                "translate" : {
                  "type" : "boolean"
                },
                "formatArguments" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "translationCategory" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "name" : "NotificationOptions",
        "summary" : "Message json",
        "examples" : [ {
          "payload" : {
            "message" : {
              "message" : "string",
              "translate" : true,
              "formatArguments" : [ "string" ]
            }
          }
        } ]
      }
    }
  },
  "tags" : [ {
    "name" : "Speech",
    "description" : "All speech related topics."
  }, {
    "name" : "Motion",
    "description" : "All motion related topics."
  }, {
    "name" : "Audio",
    "description" : "All audio related topics."
  }, {
    "name" : "Status",
    "description" : "All status related topics."
  }, {
    "name" : "System",
    "description" : "All system related topics."
  }, {
    "name" : "Sensors",
    "description" : "All sensors related topics."
  }, {
    "name" : "Leds",
    "description" : "All leds related topics."
  }, {
    "name" : "Composer",
    "description" : "All composer related topics."
  }, {
    "name" : "Kiosk",
    "description" : "All kiosk related topics."
  }, {
    "name" : "Media",
    "description" : "All media related topics."
  }, {
    "name" : "Applications",
    "description" : "All applications related topics."
  }, {
    "name" : "Translations",
    "description" : "All translations related topics."
  }, {
    "name" : "Settings",
    "description" : "All settings related topics."
  }, {
    "name" : "Camera",
    "description" : "All camera related topics."
  }, {
    "name" : "Domotics",
    "description" : "All domotics related topics."
  }, {
    "name" : "Cloud",
    "description" : "All cloud related topics."
  }, {
    "name" : "SLAM",
    "description" : "All slam related topics."
  }, {
    "name" : "Wifi",
    "description" : "All wifi related topics."
  }, {
    "name" : "Connection",
    "description" : "All connection related topics."
  }, {
    "name" : "Survey",
    "description" : "All survey related topics."
  }, {
    "name" : "Motion detection",
    "description" : "All motion detection related topics."
  }, {
    "name" : "Face tracking",
    "description" : "All face tracking related topics."
  }, {
    "name" : "SIP",
    "description" : "All sip related topics."
  }, {
    "name" : "Time",
    "description" : "All time related topics."
  }, {
    "name" : "Variables",
    "description" : "All variables related topics."
  }, {
    "name" : "Diagnostics",
    "description" : "All diagnostics related topics."
  } ]
}