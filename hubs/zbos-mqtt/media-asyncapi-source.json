{
  "asyncapi" : "2.0.0",
  "id" : "urn:zbos-mqtt-api",
  "defaultContentType" : "application/json",
  "info" : {
    "title" : "Media",
    "version" : "2.7.0",
    "description" : "API for communication with ZBOS by Zora Robotics.",
    "contact" : {
      "email" : "info@zorarobotics.be"
    }
  },
  "channels" : {
    "zbos/media/library/list" : {
      "publish" : {
        "summary" : "List all media libraries",
        "description" : "[DEPRECATED]\nPlease use <<zbos/media/library/list/get>>\n\n",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/media/library/list/event" : {
      "subscribe" : {
        "summary" : "event: Listing all media libraries",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/media/library/list/get" : {
      "publish" : {
        "summary" : "Get a list of media items",
        "description" : "see <<zbos/media/library/list/response/{key}>> for response\n",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "key" : {
                "type" : "string"
              },
              "limit" : {
                "type" : "integer"
              },
              "offset" : {
                "type" : "integer"
              },
              "filters" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "field" : {
                      "type" : "string",
                      "description" : "Field to check on. Note that the field should be camelCase, not snake_case"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value to check on. For numbers you should use 'min' and 'max'."
                    },
                    "min" : {
                      "type" : "number",
                      "description" : "Minimum value, only usable for number fields"
                    },
                    "max" : {
                      "type" : "number",
                      "description" : "Maximum value, only usable for number fields"
                    },
                    "direction" : {
                      "type" : "object",
                      "description" : "Direction to sort on.\nCan be 'asc' or 'desc'.\nThe default direction is 'asc'",
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "ordinal" : {
                          "type" : "integer"
                        }
                      },
                      "enum" : [ "asc", "desc" ]
                    },
                    "operator" : {
                      "type" : "object",
                      "description" : "Operator for either the child filters, or this filter object itself.\nCan be 'and', 'or' or 'not'.\nDefault is 'and'.\nThe root operator is always 'and'",
                      "properties" : {
                        "alternateNames" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "name" : {
                          "type" : "string"
                        },
                        "ordinal" : {
                          "type" : "integer"
                        }
                      },
                      "enum" : [ "and", "or", "not" ]
                    },
                    "match_type" : {
                      "type" : "object",
                      "description" : "Match type for string values.\nCan be 'exact', 'contains', 'starts_with', 'ends_with'.\nThe default match_type is 'contains'",
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "ordinal" : {
                          "type" : "integer"
                        }
                      },
                      "enum" : [ "exact", "contains", "starts_with", "ends_with" ]
                    },
                    "filters" : {
                      "type" : "array",
                      "description" : "Filters on which the operator will be applied.\nIf there are no child filters, the operator will be applied to the filter object itself.",
                      "items" : {
                        "type" : "object"
                      }
                    },
                    "field_filters" : {
                      "type" : "array",
                      "description" : "Filters to apply on the child fields of the field.\nWill only work if the field is an object, array/list or map.",
                      "items" : {
                        "type" : "object"
                      }
                    }
                  }
                }
              },
              "sort" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "field" : {
                      "type" : "string",
                      "description" : "Field to check on. Note that the field should be camelCase, not snake_case"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value to check on. For numbers you should use 'min' and 'max'."
                    },
                    "min" : {
                      "type" : "number",
                      "description" : "Minimum value, only usable for number fields"
                    },
                    "max" : {
                      "type" : "number",
                      "description" : "Maximum value, only usable for number fields"
                    },
                    "direction" : {
                      "type" : "object",
                      "description" : "Direction to sort on.\nCan be 'asc' or 'desc'.\nThe default direction is 'asc'",
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "ordinal" : {
                          "type" : "integer"
                        }
                      },
                      "enum" : [ "asc", "desc" ]
                    },
                    "operator" : {
                      "type" : "object",
                      "description" : "Operator for either the child filters, or this filter object itself.\nCan be 'and', 'or' or 'not'.\nDefault is 'and'.\nThe root operator is always 'and'",
                      "properties" : {
                        "alternateNames" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "name" : {
                          "type" : "string"
                        },
                        "ordinal" : {
                          "type" : "integer"
                        }
                      },
                      "enum" : [ "and", "or", "not" ]
                    },
                    "match_type" : {
                      "type" : "object",
                      "description" : "Match type for string values.\nCan be 'exact', 'contains', 'starts_with', 'ends_with'.\nThe default match_type is 'contains'",
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "ordinal" : {
                          "type" : "integer"
                        }
                      },
                      "enum" : [ "exact", "contains", "starts_with", "ends_with" ]
                    },
                    "filters" : {
                      "type" : "array",
                      "description" : "Filters on which the operator will be applied.\nIf there are no child filters, the operator will be applied to the filter object itself.",
                      "items" : {
                        "type" : "object"
                      }
                    },
                    "field_filters" : {
                      "type" : "array",
                      "description" : "Filters to apply on the child fields of the field.\nWill only work if the field is an object, array/list or map.",
                      "items" : {
                        "type" : "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "name" : "FilteringRequest",
          "examples" : [ {
            "payload" : {
              "key" : "Test123",
              "limit" : 50,
              "offset" : 10,
              "filters" : [ {
                "operator" : "or",
                "match_type" : "contains"
              }, {
                "field" : "type",
                "value" : "image",
                "operator" : "and",
                "match_type" : "contains"
              }, {
                "field" : "date",
                "operator" : "and",
                "match_type" : "contains"
              } ],
              "sort" : [ {
                "field" : "extension",
                "operator" : "and",
                "match_type" : "contains"
              }, {
                "field" : "name",
                "operator" : "and",
                "match_type" : "contains"
              } ]
            }
          } ]
        }
      }
    },
    "zbos/media/library/list/response/{key}" : {
      "subscribe" : {
        "summary" : "response: Get a list of media items",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "fileId" : {
                  "type" : "string"
                },
                "path" : {
                  "type" : "string"
                },
                "fileName" : {
                  "type" : "string"
                },
                "extension" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "string"
                },
                "mimeType" : {
                  "type" : "string"
                },
                "downloadPath" : {
                  "type" : "string"
                },
                "previewPath" : {
                  "type" : "string"
                },
                "thumbnailPath" : {
                  "type" : "string"
                },
                "checksum" : {
                  "type" : "string"
                },
                "cloudFileId" : {
                  "type" : "string"
                },
                "size" : {
                  "type" : "number"
                },
                "modifiedAt" : {
                  "type" : "number"
                },
                "isDefaultAsset" : {
                  "type" : "boolean"
                },
                "fullPath" : {
                  "type" : "string"
                }
              }
            }
          },
          "name" : "Array<MediaFile>",
          "examples" : [ {
            "payload" : [ {
              "fileId" : "string",
              "path" : "string",
              "fileName" : "string",
              "extension" : "string",
              "type" : "string",
              "mimeType" : "string",
              "downloadPath" : "string",
              "previewPath" : "string",
              "thumbnailPath" : "string",
              "checksum" : "string",
              "cloudFileId" : "string",
              "size" : 0,
              "modifiedAt" : 0,
              "defaultAsset" : false
            } ]
          } ]
        }
      },
      "parameters" : {
        "key" : {
          "description" : "Request key to create a unique subscription topic",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "zbos/media/library/event" : {
      "subscribe" : {
        "summary" : "Library item changed event",
        "description" : "This event is published when an item in the media library list changes\n",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/media/sync/device/get" : {
      "publish" : {
        "summary" : "Get media sync devices",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/media/sync/device/event" : {
      "subscribe" : {
        "summary" : "event: Media sync devices",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "string"
          },
          "name" : "String"
        }
      }
    },
    "zbos/media/export/get" : {
      "publish" : {
        "summary" : "Get all media exports",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "clientId" : {
                "type" : "string"
              },
              "compositionId" : {
                "type" : "string"
              },
              "compositionName" : {
                "type" : "string"
              },
              "mediaPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "name" : "ExportRequestDto",
          "examples" : [ {
            "payload" : {
              "clientId" : "string",
              "compositionId" : "string",
              "compositionName" : "string",
              "mediaPaths" : [ "string" ]
            }
          } ]
        }
      }
    },
    "zbos/media/export/event" : {
      "subscribe" : {
        "summary" : "event: All media exported",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "payload" : {
            "type" : "object",
            "properties" : {
              "clientId" : {
                "type" : "string"
              },
              "compositionId" : {
                "type" : "string"
              },
              "compositionName" : {
                "type" : "string"
              },
              "mediaPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "name" : "ExportRequestDto",
          "examples" : [ {
            "payload" : {
              "clientId" : "string",
              "compositionId" : "string",
              "compositionName" : "string",
              "mediaPaths" : [ "string" ]
            }
          } ]
        }
      }
    },
    "zbos/media/apk/install" : {
      "publish" : {
        "summary" : "Install APK",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    },
    "zbos/media/delete/all" : {
      "publish" : {
        "summary" : "Delete all media",
        "description" : "",
        "tags" : [ {
          "name" : "Media",
          "description" : "All media related topics."
        } ],
        "message" : {
          "$ref" : "#/components/messages/emptyMessage"
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "percentage" : {
        "type" : "integer",
        "maximum" : 100,
        "minimum" : 0,
        "description" : "Percentage value between with range 0 to 100"
      },
      "key" : {
        "type" : "string",
        "description" : "Required random key"
      }
    },
    "messages" : {
      "emptyMessage" : {
        "payload" : {
          "type" : "object"
        },
        "name" : "EmptyMessage",
        "summary" : "Empty message"
      },
      "keyMessage" : {
        "payload" : {
          "type" : "object",
          "properties" : {
            "key" : {
              "type" : "string",
              "description" : "Required random key"
            }
          }
        },
        "name" : "KeyResult",
        "summary" : "Random key",
        "examples" : [ {
          "payload" : {
            "key" : "ABCxyz"
          }
        } ]
      },
      "successMessage" : {
        "payload" : {
          "type" : "object",
          "properties" : {
            "success" : {
              "type" : "boolean"
            },
            "message" : {
              "type" : "string",
              "description" : "Optional error message"
            }
          }
        },
        "name" : "SuccessMessage",
        "summary" : "Success message",
        "examples" : [ {
          "payload" : {
            "success" : true
          }
        } ]
      },
      "notificationMessage" : {
        "payload" : {
          "type" : "object",
          "properties" : {
            "message" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string"
                },
                "translate" : {
                  "type" : "boolean"
                },
                "formatArguments" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "translationCategory" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "name" : "NotificationOptions",
        "summary" : "Message json",
        "examples" : [ {
          "payload" : {
            "message" : {
              "message" : "string",
              "translate" : true,
              "formatArguments" : [ "string" ]
            }
          }
        } ]
      }
    }
  },
  "tags" : [ {
    "name" : "Speech",
    "description" : "All speech related topics."
  }, {
    "name" : "Motion",
    "description" : "All motion related topics."
  }, {
    "name" : "Audio",
    "description" : "All audio related topics."
  }, {
    "name" : "Status",
    "description" : "All status related topics."
  }, {
    "name" : "System",
    "description" : "All system related topics."
  }, {
    "name" : "Sensors",
    "description" : "All sensors related topics."
  }, {
    "name" : "Leds",
    "description" : "All leds related topics."
  }, {
    "name" : "Composer",
    "description" : "All composer related topics."
  }, {
    "name" : "Kiosk",
    "description" : "All kiosk related topics."
  }, {
    "name" : "Media",
    "description" : "All media related topics."
  }, {
    "name" : "Applications",
    "description" : "All applications related topics."
  }, {
    "name" : "Translations",
    "description" : "All translations related topics."
  }, {
    "name" : "Settings",
    "description" : "All settings related topics."
  }, {
    "name" : "Camera",
    "description" : "All camera related topics."
  }, {
    "name" : "Domotics",
    "description" : "All domotics related topics."
  }, {
    "name" : "Cloud",
    "description" : "All cloud related topics."
  }, {
    "name" : "SLAM",
    "description" : "All slam related topics."
  }, {
    "name" : "Wifi",
    "description" : "All wifi related topics."
  }, {
    "name" : "Connection",
    "description" : "All connection related topics."
  }, {
    "name" : "Survey",
    "description" : "All survey related topics."
  }, {
    "name" : "Motion detection",
    "description" : "All motion detection related topics."
  }, {
    "name" : "Face tracking",
    "description" : "All face tracking related topics."
  }, {
    "name" : "SIP",
    "description" : "All sip related topics."
  }, {
    "name" : "Time",
    "description" : "All time related topics."
  }, {
    "name" : "Variables",
    "description" : "All variables related topics."
  }, {
    "name" : "Diagnostics",
    "description" : "All diagnostics related topics."
  } ]
}